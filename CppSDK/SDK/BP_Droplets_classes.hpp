#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Droplets

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Droplets.BP_Droplets_C
// 0x00D0 (0x0390 - 0x02C0)
class ABP_Droplets_C final : public AKuroEditorTickActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProceduralMeshComponent*               Droplets;                                          // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DropletDMI;                                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Spawn;                                      // 0x02E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336A[0x3];                                     // 0x02E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRandomStream                          RandomStream;                                      // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)
	struct FVector                                RandPos;                                           // 0x02F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_336B[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        VertexBuffer;                                      // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector2D>                      UV0Buffer;                                         // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FLinearColor>                   VertexColorBuffer;                                 // 0x0320(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         Int;                                               // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrCamPos;                                        // 0x0334(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PrezCamPos;                                        // 0x0340(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrCamVec;                                        // 0x034C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEditor;                                          // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_336C[0x3];                                     // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DropletIntensityMul;                               // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Gravity;                                           // 0x0364(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         RainIntensity;                                     // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_336D[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     DropletMaterial;                                   // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKuroRainType                                 RainType;                                          // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_336E[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LensDropletManager_C*               DropletManager;                                    // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Boost;                                             // 0x0388(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomRainDropSize;                                // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveTick(float DeltaSeconds);
	void EditorTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_Droplets(int32 EntryPoint);
	void UpdateParameters();
	void MakeOneDroplet();
	void UserConstructionScript();
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Droplets_C">();
	}
	static class ABP_Droplets_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Droplets_C>();
	}
};
static_assert(alignof(ABP_Droplets_C) == 0x000008, "Wrong alignment on ABP_Droplets_C");
static_assert(sizeof(ABP_Droplets_C) == 0x000390, "Wrong size on ABP_Droplets_C");
static_assert(offsetof(ABP_Droplets_C, UberGraphFrame) == 0x0002C0, "Member 'ABP_Droplets_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, Droplets) == 0x0002C8, "Member 'ABP_Droplets_C::Droplets' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABP_Droplets_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, DropletDMI) == 0x0002D8, "Member 'ABP_Droplets_C::DropletDMI' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, Time) == 0x0002E0, "Member 'ABP_Droplets_C::Time' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, Should_Spawn) == 0x0002E4, "Member 'ABP_Droplets_C::Should_Spawn' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, RandomStream) == 0x0002E8, "Member 'ABP_Droplets_C::RandomStream' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, RandPos) == 0x0002F0, "Member 'ABP_Droplets_C::RandPos' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, VertexBuffer) == 0x000300, "Member 'ABP_Droplets_C::VertexBuffer' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, UV0Buffer) == 0x000310, "Member 'ABP_Droplets_C::UV0Buffer' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, VertexColorBuffer) == 0x000320, "Member 'ABP_Droplets_C::VertexColorBuffer' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, Int) == 0x000330, "Member 'ABP_Droplets_C::Int' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, CurrCamPos) == 0x000334, "Member 'ABP_Droplets_C::CurrCamPos' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, PrezCamPos) == 0x000340, "Member 'ABP_Droplets_C::PrezCamPos' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, CurrCamVec) == 0x00034C, "Member 'ABP_Droplets_C::CurrCamVec' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, IsEditor) == 0x000358, "Member 'ABP_Droplets_C::IsEditor' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, DropletIntensityMul) == 0x00035C, "Member 'ABP_Droplets_C::DropletIntensityMul' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, Speed) == 0x000360, "Member 'ABP_Droplets_C::Speed' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, Gravity) == 0x000364, "Member 'ABP_Droplets_C::Gravity' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, RainIntensity) == 0x000368, "Member 'ABP_Droplets_C::RainIntensity' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, DropletMaterial) == 0x000370, "Member 'ABP_Droplets_C::DropletMaterial' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, RainType) == 0x000378, "Member 'ABP_Droplets_C::RainType' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, DropletManager) == 0x000380, "Member 'ABP_Droplets_C::DropletManager' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, Boost) == 0x000388, "Member 'ABP_Droplets_C::Boost' has a wrong offset!");
static_assert(offsetof(ABP_Droplets_C, RandomRainDropSize) == 0x00038C, "Member 'ABP_Droplets_C::RandomRainDropSize' has a wrong offset!");

}

