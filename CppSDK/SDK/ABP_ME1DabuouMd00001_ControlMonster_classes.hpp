#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_ME1DabuouMd00001_ControlMonster

#include "Basic.hpp"

#include "KuroAnim_classes.hpp"
#include "EMovementDirection_structs.hpp"
#include "Engine_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_ME1DabuouMd00001_ControlMonster.ABP_ME1DabuouMd00001_ControlMonster_C
// 0x0C20 (0x1320 - 0x0700)
class UABP_ME1DabuouMd00001_ControlMonster_C final : public UKuroAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0700(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0708(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x0740(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x0768(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x0790(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x07B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x07E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x0808(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x0830(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0858(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0880(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x08A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x08D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x08F8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x0920(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x09B0(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x09E8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0A10(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x0AA0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0AD8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0B68(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0BA0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x0C30(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0C68(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0CF8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0D30(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0DC0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0DF8(0x0148)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x0F40(0x01B0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x10F0(0x0060)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1150(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1180(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x11B8(0x0148)()
	class ATsBaseCharacter_C*                     As_Base_Character;                                 // 0x1300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_ABPLogicParams_C*                   Ts逻辑变量集;                                      // 0x1308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delta_Time_X;                                      // 0x1310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            移动方向;                                          // 0x1314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Dash;                                           // 0x1315(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          是否跳跃;                                          // 0x1316(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster(int32 EntryPoint);
	void OnComponentStart();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_DB144EDC4797EA1EB7BD0291C2197DB6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_6E8DDF284F63A34CB3F5778FAAA25910();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_D2E442CB41083D1F343E378F0878D1E7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_129356AA48B5F2D4B7B195B53FEDDA9F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_4E6214F5454A9B36EBC2CDB23C67310E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_DDDB935C47DB001BA5FB0290FDA8FDAD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_CD67C64E496323596746C78DD99B753D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_195E31C44E3205F8E87BF0A6698C4B9C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_32439BF54C79063E577DEEBF2763AE1F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_201D5F2F471093F312E379ACDB370BF1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_EEB48DAC470B66BC01D0FCA231EA121A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ME1DabuouMd00001_ControlMonster_AnimGraphNode_TransitionResult_90DA83F540AF72D5437EBBA4D9F7A30C();
	void 移动参数更新();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_ME1DabuouMd00001_ControlMonster_C">();
	}
	static class UABP_ME1DabuouMd00001_ControlMonster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_ME1DabuouMd00001_ControlMonster_C>();
	}
};
static_assert(alignof(UABP_ME1DabuouMd00001_ControlMonster_C) == 0x000010, "Wrong alignment on UABP_ME1DabuouMd00001_ControlMonster_C");
static_assert(sizeof(UABP_ME1DabuouMd00001_ControlMonster_C) == 0x001320, "Wrong size on UABP_ME1DabuouMd00001_ControlMonster_C");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, UberGraphFrame) == 0x000700, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_Root) == 0x000708, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_12) == 0x000740, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_11) == 0x000768, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_10) == 0x000790, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_9) == 0x0007B8, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_8) == 0x0007E0, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_7) == 0x000808, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_6) == 0x000830, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_5) == 0x000858, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_4) == 0x000880, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_3) == 0x0008A8, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_2) == 0x0008D0, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult_1) == 0x0008F8, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_SequencePlayer_5) == 0x000920, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_StateResult_6) == 0x0009B0, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_TransitionResult) == 0x0009E8, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_SequencePlayer_4) == 0x000A10, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_StateResult_5) == 0x000AA0, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_SequencePlayer_3) == 0x000AD8, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_StateResult_4) == 0x000B68, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_SequencePlayer_2) == 0x000BA0, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_StateResult_3) == 0x000C30, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_SequencePlayer_1) == 0x000C68, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_StateResult_2) == 0x000CF8, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_SequencePlayer) == 0x000D30, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_StateResult_1) == 0x000DC0, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_StateMachine_1) == 0x000DF8, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_SaveCachedPose) == 0x000F40, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_Slot) == 0x0010F0, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_UseCachedPose) == 0x001150, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_StateResult) == 0x001180, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, AnimGraphNode_StateMachine) == 0x0011B8, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, As_Base_Character) == 0x001300, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::As_Base_Character' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, Ts逻辑变量集) == 0x001308, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::Ts逻辑变量集' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, Delta_Time_X) == 0x001310, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, 移动方向) == 0x001314, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::移动方向' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, Is_Dash) == 0x001315, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::Is_Dash' has a wrong offset!");
static_assert(offsetof(UABP_ME1DabuouMd00001_ControlMonster_C, 是否跳跃) == 0x001316, "Member 'UABP_ME1DabuouMd00001_ControlMonster_C::是否跳跃' has a wrong offset!");

}

