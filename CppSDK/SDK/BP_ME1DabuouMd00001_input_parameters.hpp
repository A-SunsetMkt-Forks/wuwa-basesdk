#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ME1DabuouMd00001_input

#include "Basic.hpp"

#include "sInputCommand_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ME1DabuouMd00001_input.BP_ME1DabuouMd00001_input_C.攻击按下
// 0x0040 (0x0040 - 0x0000)
struct BP_ME1DabuouMd00001_input_C_攻击按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ME1DabuouMd00001_input_C_攻击按下) == 0x000004, "Wrong alignment on BP_ME1DabuouMd00001_input_C_攻击按下");
static_assert(sizeof(BP_ME1DabuouMd00001_input_C_攻击按下) == 0x000040, "Wrong size on BP_ME1DabuouMd00001_input_C_攻击按下");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_攻击按下, time) == 0x000000, "Member 'BP_ME1DabuouMd00001_input_C_攻击按下::time' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_攻击按下, ReturnValue) == 0x000004, "Member 'BP_ME1DabuouMd00001_input_C_攻击按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_攻击按下, CallFunc______ReturnValue) == 0x000018, "Member 'BP_ME1DabuouMd00001_input_C_攻击按下::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_攻击按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x00002C, "Member 'BP_ME1DabuouMd00001_input_C_攻击按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");

// Function BP_ME1DabuouMd00001_input.BP_ME1DabuouMd00001_input_C.技能1按下
// 0x0068 (0x0068 - 0x0000)
struct BP_ME1DabuouMd00001_input_C_技能1按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc___Current_______;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0034(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsTag_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ME1DabuouMd00001_input_C_技能1按下) == 0x000008, "Wrong alignment on BP_ME1DabuouMd00001_input_C_技能1按下");
static_assert(sizeof(BP_ME1DabuouMd00001_input_C_技能1按下) == 0x000068, "Wrong size on BP_ME1DabuouMd00001_input_C_技能1按下");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_技能1按下, time) == 0x000000, "Member 'BP_ME1DabuouMd00001_input_C_技能1按下::time' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_技能1按下, ReturnValue) == 0x000004, "Member 'BP_ME1DabuouMd00001_input_C_技能1按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_技能1按下, CallFunc___1___ReturnValue) == 0x000018, "Member 'BP_ME1DabuouMd00001_input_C_技能1按下::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_技能1按下, CallFunc___Current_______) == 0x00002C, "Member 'BP_ME1DabuouMd00001_input_C_技能1按下::CallFunc___Current_______' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_技能1按下, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_ME1DabuouMd00001_input_C_技能1按下::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_技能1按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000034, "Member 'BP_ME1DabuouMd00001_input_C_技能1按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_技能1按下, CallFunc_CanResponseInput_ReturnValue) == 0x000048, "Member 'BP_ME1DabuouMd00001_input_C_技能1按下::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_技能1按下, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000050, "Member 'BP_ME1DabuouMd00001_input_C_技能1按下::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_技能1按下, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000060, "Member 'BP_ME1DabuouMd00001_input_C_技能1按下::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_技能1按下, CallFunc_ContainsTag_ReturnValue) == 0x000061, "Member 'BP_ME1DabuouMd00001_input_C_技能1按下::CallFunc_ContainsTag_ReturnValue' has a wrong offset!");

// Function BP_ME1DabuouMd00001_input.BP_ME1DabuouMd00001_input_C.幻象1按下
// 0x0230 (0x0230 - 0x0000)
struct BP_ME1DabuouMd00001_input_C_幻象1按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0018(0x0020)()
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x0038(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0064(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_1;         // 0x0078(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_2;         // 0x008C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_3;         // 0x00A0(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_GetActorForwardVector_ReturnValue;      // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_NextFixHookTargetLocation_ReturnValue;    // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_4;         // 0x0100(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_5;         // 0x0114(0x0014)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X;                      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y;                      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_X_1;                    // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Y_1;                    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVectorDouble_Z_1;                    // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc___Current_______;                         // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_D_Subtract_FloatFloat_ReturnValue;        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_D_Abs_ReturnValue;                        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Subtract_FloatFloat_ReturnValue_1;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Abs_ReturnValue_1;                      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_D_Greater_FloatFloat_ReturnValue;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsTag_ReturnValue;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_Add_VectorVector_ReturnValue;           // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2;  // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc____________;                              // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue_6;         // 0x01EC(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3;  // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4;  // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ME1DabuouMd00001_input_C_幻象1按下) == 0x000008, "Wrong alignment on BP_ME1DabuouMd00001_input_C_幻象1按下");
static_assert(sizeof(BP_ME1DabuouMd00001_input_C_幻象1按下) == 0x000230, "Wrong size on BP_ME1DabuouMd00001_input_C_幻象1按下");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, time) == 0x000000, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::time' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, ReturnValue) == 0x000004, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000018, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc___1___ReturnValue) == 0x000038, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000050, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000060, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_Not_PreBool_ReturnValue) == 0x000061, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000064, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_CreateSkillCommand_ReturnValue_1) == 0x000078, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_CreateSkillCommand_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_CreateSkillCommand_ReturnValue_2) == 0x00008C, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_CreateSkillCommand_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_CreateSkillCommand_ReturnValue_3) == 0x0000A0, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_CreateSkillCommand_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x0000B8, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_D_GetActorForwardVector_ReturnValue) == 0x0000D0, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_D_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_NextFixHookTargetLocation_ReturnValue) == 0x0000E8, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_NextFixHookTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_CreateSkillCommand_ReturnValue_4) == 0x000100, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_CreateSkillCommand_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_CreateSkillCommand_ReturnValue_5) == 0x000114, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_CreateSkillCommand_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_BreakVectorDouble_X) == 0x000128, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_BreakVectorDouble_X' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_BreakVectorDouble_Y) == 0x000130, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_BreakVectorDouble_Y' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_BreakVectorDouble_Z) == 0x000138, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_BreakVectorDouble_Z' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_BreakVectorDouble_X_1) == 0x000140, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_BreakVectorDouble_X_1' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_BreakVectorDouble_Y_1) == 0x000148, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_BreakVectorDouble_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_BreakVectorDouble_Z_1) == 0x000150, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_BreakVectorDouble_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc___Current_______) == 0x000158, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc___Current_______' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_D_Subtract_FloatFloat_ReturnValue) == 0x000160, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_D_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000168, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_D_Abs_ReturnValue) == 0x000170, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_D_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_D_Subtract_FloatFloat_ReturnValue_1) == 0x000178, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_D_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_D_Abs_ReturnValue_1) == 0x000180, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_D_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_D_Greater_FloatFloat_ReturnValue) == 0x000188, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_D_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000190, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0001A0, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_ContainsTag_ReturnValue) == 0x0001A1, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_ContainsTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x0001A8, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x0001B8, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_D_Add_VectorVector_ReturnValue) == 0x0001C0, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_D_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x0001D8, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x0001E8, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc____________) == 0x0001E9, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc____________' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_CreateSkillCommand_ReturnValue_6) == 0x0001EC, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_CreateSkillCommand_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x000200, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x000210, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x000218, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_幻象1按下, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x000228, "Member 'BP_ME1DabuouMd00001_input_C_幻象1按下::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");

// Function BP_ME1DabuouMd00001_input.BP_ME1DabuouMd00001_input_C.跳跃按下
// 0x0058 (0x0058 - 0x0000)
struct BP_ME1DabuouMd00001_input_C_跳跃按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x0044(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ME1DabuouMd00001_input_C_跳跃按下) == 0x000008, "Wrong alignment on BP_ME1DabuouMd00001_input_C_跳跃按下");
static_assert(sizeof(BP_ME1DabuouMd00001_input_C_跳跃按下) == 0x000058, "Wrong size on BP_ME1DabuouMd00001_input_C_跳跃按下");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_跳跃按下, time) == 0x000000, "Member 'BP_ME1DabuouMd00001_input_C_跳跃按下::time' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_跳跃按下, ReturnValue) == 0x000004, "Member 'BP_ME1DabuouMd00001_input_C_跳跃按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_跳跃按下, CallFunc______ReturnValue) == 0x000018, "Member 'BP_ME1DabuouMd00001_input_C_跳跃按下::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_跳跃按下, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000030, "Member 'BP_ME1DabuouMd00001_input_C_跳跃按下::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_跳跃按下, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000040, "Member 'BP_ME1DabuouMd00001_input_C_跳跃按下::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_跳跃按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x000044, "Member 'BP_ME1DabuouMd00001_input_C_跳跃按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");

// Function BP_ME1DabuouMd00001_input.BP_ME1DabuouMd00001_input_C.闪避按下
// 0x0044 (0x0044 - 0x0000)
struct BP_ME1DabuouMd00001_input_C_闪避按下 final
{
public:
	float                                         time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc_CreateSkillCommand_ReturnValue;           // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsTag_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ME1DabuouMd00001_input_C_闪避按下) == 0x000004, "Wrong alignment on BP_ME1DabuouMd00001_input_C_闪避按下");
static_assert(sizeof(BP_ME1DabuouMd00001_input_C_闪避按下) == 0x000044, "Wrong size on BP_ME1DabuouMd00001_input_C_闪避按下");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_闪避按下, time) == 0x000000, "Member 'BP_ME1DabuouMd00001_input_C_闪避按下::time' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_闪避按下, ReturnValue) == 0x000004, "Member 'BP_ME1DabuouMd00001_input_C_闪避按下::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_闪避按下, CallFunc______ReturnValue) == 0x000018, "Member 'BP_ME1DabuouMd00001_input_C_闪避按下::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_闪避按下, CallFunc_CreateSkillCommand_ReturnValue) == 0x00002C, "Member 'BP_ME1DabuouMd00001_input_C_闪避按下::CallFunc_CreateSkillCommand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ME1DabuouMd00001_input_C_闪避按下, CallFunc_ContainsTag_ReturnValue) == 0x000040, "Member 'BP_ME1DabuouMd00001_input_C_闪避按下::CallFunc_ContainsTag_ReturnValue' has a wrong offset!");

}

