#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_ParaglidingBase

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_ParaglidingBase.ABP_ParaglidingBase_C
// 0x04D0 (0x09E0 - 0x0510)
class UABP_ParaglidingBase_C : public UAnimInstance
{
public:
	uint8                                         Pad_508[0x8];                                      // 0x0508(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0510(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0518(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x0550(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0578(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x05A0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x05C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x05F0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0618(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0640(0x0038)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x0678(0x00F8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0770(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07A8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0838(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0870(0x0148)()
	class ATsBaseCharacter_C*                     _r__;                                              // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __;                                                // 0x09C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C1[0x7];                                      // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEffectModelGroup_C*                    _cyH;                                              // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___z;                                              // 0x09D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___G;                                              // 0x09D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D2[0x2];                                      // 0x09D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ____SM_;                                           // 0x09D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _______;                                           // 0x09D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _________;                                         // 0x09DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_ParaglidingBase(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintInitializeAnimation();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ParaglidingBase_AnimGraphNode_TransitionResult_A64E5D5C4CA3F0D40F80E095719CB0BC();
	void SyncAnim(class UABP_ParaglidingBase_C* Other);
	void SetOpenParagliding(bool bOpen);
	void SetHover(bool Hover);
	void SetDash(bool Dash);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_ParaglidingBase_C">();
	}
	static class UABP_ParaglidingBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_ParaglidingBase_C>();
	}
};
static_assert(alignof(UABP_ParaglidingBase_C) == 0x000010, "Wrong alignment on UABP_ParaglidingBase_C");
static_assert(sizeof(UABP_ParaglidingBase_C) == 0x0009E0, "Wrong size on UABP_ParaglidingBase_C");
static_assert(offsetof(UABP_ParaglidingBase_C, UberGraphFrame) == 0x000510, "Member 'UABP_ParaglidingBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_Root) == 0x000518, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_TransitionResult_5) == 0x000550, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_TransitionResult_4) == 0x000578, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_TransitionResult_3) == 0x0005A0, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_TransitionResult_2) == 0x0005C8, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_TransitionResult_1) == 0x0005F0, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_TransitionResult) == 0x000618, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_StateResult_2) == 0x000640, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_BlendSpacePlayer) == 0x000678, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_StateResult_1) == 0x000770, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_SequencePlayer) == 0x0007A8, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_StateResult) == 0x000838, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, AnimGraphNode_StateMachine) == 0x000870, "Member 'UABP_ParaglidingBase_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, _r__) == 0x0009B8, "Member 'UABP_ParaglidingBase_C::_r__' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, __) == 0x0009C0, "Member 'UABP_ParaglidingBase_C::__' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, _cyH) == 0x0009C8, "Member 'UABP_ParaglidingBase_C::_cyH' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, ___z) == 0x0009D0, "Member 'UABP_ParaglidingBase_C::___z' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, ___G) == 0x0009D1, "Member 'UABP_ParaglidingBase_C::___G' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, ____SM_) == 0x0009D4, "Member 'UABP_ParaglidingBase_C::____SM_' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, _______) == 0x0009D8, "Member 'UABP_ParaglidingBase_C::_______' has a wrong offset!");
static_assert(offsetof(UABP_ParaglidingBase_C, _________) == 0x0009DC, "Member 'UABP_ParaglidingBase_C::_________' has a wrong offset!");

}

