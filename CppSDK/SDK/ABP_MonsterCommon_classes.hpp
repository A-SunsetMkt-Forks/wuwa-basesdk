#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_MonsterCommon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "KuroAnim_structs.hpp"
#include "KuroAnim_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_MonsterCommon.ABP_MonsterCommon_C
// 0x4010 (0x4710 - 0x0700)
#pragma pack(push, 0x1)
class alignas(0x10) UABP_MonsterCommon_C : public UKuroAnimInstanceMonster
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0700(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_SightLock                    AnimGraphNode_SightLock;                           // 0x0708(0x01C0)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x08C8(0x0138)()
	struct FAnimNode_BoneRotateToLocation         AnimGraphNode_BoneRotateToLocation;                // 0x0A00(0x0128)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0B28(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_55;                 // 0x0B60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_54;                 // 0x0B88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_53;                 // 0x0BB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_52;                 // 0x0BD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_51;                 // 0x0C00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_50;                 // 0x0C28(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0C50(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_24;                      // 0x0C80(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x0CB8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_23;                      // 0x0D48(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0D80(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_22;                      // 0x0DB0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x0DE8(0x0148)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x0F30(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_49;                 // 0x0F90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_48;                 // 0x0FB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_47;                 // 0x0FE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_46;                 // 0x1008(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_45;                 // 0x1030(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_44;                 // 0x1058(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_43;                 // 0x1080(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_42;                 // 0x10A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_41;                 // 0x10D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_40;                 // 0x10F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_39;                 // 0x1120(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x1148(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_21;                      // 0x11D8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x1210(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_20;                      // 0x12A0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x12D8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_19;                      // 0x1368(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x13A0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_18;                      // 0x1430(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x1468(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x14F8(0x0090)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1588(0x00B0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_17;                      // 0x1638(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x1670(0x0148)()
	uint8                                         Pad_33BF[0x8];                                     // 0x17B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x17C0(0x01B0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1970(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_38;                 // 0x1B20(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_37;                 // 0x1B48(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_36;                 // 0x1B70(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_35;                 // 0x1B98(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_34;                 // 0x1BC0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_33;                 // 0x1BE8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_32;                 // 0x1C10(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_31;                 // 0x1C38(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_30;                 // 0x1C60(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_29;                 // 0x1C88(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_28;                 // 0x1CB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x1CD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x1D00(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x1D28(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x1D50(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x1D78(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x1DA0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x1DC8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1DF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x1E18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x1E40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1E68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1E90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1EB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1EE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1F08(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1F30(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x1F58(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x1FE8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x2078(0x0090)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_4;                   // 0x2108(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_16;                      // 0x21C8(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_15;                      // 0x2200(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x2238(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x22C8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x2358(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x23E8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x2478(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x2508(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x2598(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x2628(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x26B8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x2748(0x0090)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x27D8(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_14;                      // 0x2898(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x28D0(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x28F8(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x2930(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x2968(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x29F8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x2A30(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x2AC0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x2AF8(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x2B88(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x2C18(0x0090)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x2CA8(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x2D68(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x2DA0(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x2E30(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x2EC0(0x0090)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x2F50(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x3010(0x0038)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x3048(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x3070(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x3100(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x3190(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x3220(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x32B0(0x0090)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x3340(0x0090)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x33D0(0x00C0)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x3490(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x34C8(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x34F8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x3530(0x0148)()
	struct FAnimNode_Feedback                     AnimGraphNode_Feedback;                            // 0x3678(0x0268)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x38E0(0x0020)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x3900(0x0020)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x3920(0x00C0)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x39E0(0x0060)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x3A40(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x3BF0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x3C18(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x3C40(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x3C68(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x3C90(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x3CB8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x3CE0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x3D08(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x3D30(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x3DC0(0x0038)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x3DF8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x3E30(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x3EC0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x3EF8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x3F88(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x3FC0(0x0148)()
	uint8                                         Pad_33C0[0x8];                                     // 0x4108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x4110(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x42C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x42E8(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x4310(0x0060)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x4370(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x4400(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x4438(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x4468(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x44A0(0x0148)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x45E8(0x0038)()
	class ATsBaseCharacter_C*                     As_Base_Character;                                 // 0x4620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FSkeletonGroup                         Skeleton_Block_Info;                               // 0x4628(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFK_Shake_AssestData_C*                 FKShakeData;                                       // 0x4648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             NewEventDispatcher_0;                              // 0x4650(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Increment;                                         // 0x4660(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESightLockMode                                CameraMode;                                        // 0x4664(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C1[0x3];                                     // 0x4665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Assist_Limit;                                      // 0x4668(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Sight_Bone_Name;                                   // 0x466C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Begin_Bone_Name;                                   // 0x4678(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   End_Bone_Name;                                     // 0x4684(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeAlpha;                                        // 0x4690(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShakeRange;                                        // 0x4694(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPD_CharacterControllerData_C*>  HitMaterial;                                       // 0x4698(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         __e_______;                                        // 0x46A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ToughDecreaseValue;                                // 0x46AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CachedTagContainer;                                // 0x46B0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          _e0b____;                                          // 0x46D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TestFkBoolean;                                     // 0x46D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C2[0x6];                                     // 0x46D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ShakeCurve;                                        // 0x46D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          _S_Stari;                                          // 0x46E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33C3[0x7];                                     // 0x46E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     _hSM_a;                                            // 0x46E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   Bone_Name;                                         // 0x46F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C4[0x4];                                     // 0x46FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   Ts_____;                                           // 0x4700(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void IKAndFk(const struct FPoseLink& InPose, struct FPoseLink* Param_IKAndFk);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void ________(bool* Output);
	void ______Tag();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_153A75684E72D893961594BC7BB4539D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_BoneRotateToLocation_0CC2D58648A93DA1CC947D9EA2BA1910();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_Feedback_51E4B51A468F1A65E6FF64A9A5F4B5CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_8FE4732440DE2B2FA8F0D19EE564E538();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_148EAF7A4BDBB1686DADE7A597E0A76C();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_6AF484B4431B8C14FE283CB297B6B3EC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_BlendListByEnum_9EC128664376C1966FC2839AF4D0AE15();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_2A58B9C64010468AE65A28A34150184F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_BlendListByEnum_1F0C13D24D7333373C5822AAE6904570();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_BlendListByEnum_53DF7A4143ED6DCCDE5A578F6D50EDEE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_E285C5B644D0C7EDEB0867BB1A35D376();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_BlendListByEnum_CA2785E242C83CE68FE20CAD14389EAE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_BlendListByEnum_FE25BEB0429F80FBB7F8E28F005BCA5E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_B71ADB3B444FCFB74FBE18879D3C0377();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_BBF8CDED4DE5B36B2FB64FBE04E8A785();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_C86EBE6742383CB8E30CA7B0BDE2069D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_452A06324EEF39B25ED9789FC2A2EA6E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_97A0FF9D49F9556E9F2BD682F6A9A901();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_00DAD1AD44A041D8AE0503B2371A84CB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_D3A4A6444A7DE3555091D4A82F1D79C8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_185A4850401F09D0CD7E4586DAC8C9CC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_129B3EFD494A5A1711CF67BC0148E387();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_564317634942ABF91B0F71AB527A2B54();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_258034E6437C7B57D6E043B3453771FB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_C3A658974F16AAA828B01A8E65731035();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_508E62324092C81E138EE3AF4C0F9804();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_5EAB3FBD45D1151C215229AC2C31F126();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_7366C1E545187F21B80550B938A5DFC7();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_F94DE7AB4AD0228868B37B8FF36C0AC4();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_1818FB2944DC831E96348689BFC2E103();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_121708674083B1DE98AABE9895CD6935();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_CAA77B31439383A08DD9A684A49611B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_4CD09B1549F62595BCF402B26D20D1D3();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_FC2F40D248658AA0187D7C8352A6275A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_941D22724432AEF11166288E517E2FBD();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_C8F75FDB4D43B0F22BC55386C196D222();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_2DD95BC34A3508E4DF6823B128E6DE6A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_85596CB24819748E20B7E98B1D415C01();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_8284B9304DC1D9EB88D60CB5D436515F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_4DEA819C457E35E72E5F48A5771FEFD9();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_685FFA67426C7F34E7D82C870BE2E57B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_MonsterCommon_AnimGraphNode_TransitionResult_52DA74EB4EEB034345C1CFBA9BE15A1A();
	void BlueprintInitializeAnimation();
	void PlayShakeFX(int32 Section);
	void AnimNotify__e__();
	void OnComponentStart();
	void AnimNotify_____();
	void AnimNotify______0();
	void AnimNotify______1();
	void AnimNotify__e0b__();
	void AnimNotify___0b__();
	void TestFk();
	void OnMontageStarted_Event_0(class UAnimMontage* Montage);
	void AnimNotify______();
	void ExecuteUbergraph_ABP_MonsterCommon(int32 EntryPoint);
	void NewEventDispatcher_0__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_MonsterCommon_C">();
	}
	static class UABP_MonsterCommon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_MonsterCommon_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(UABP_MonsterCommon_C) == 0x000010, "Wrong alignment on UABP_MonsterCommon_C");
static_assert(sizeof(UABP_MonsterCommon_C) == 0x004710, "Wrong size on UABP_MonsterCommon_C");
static_assert(offsetof(UABP_MonsterCommon_C, UberGraphFrame) == 0x000700, "Member 'UABP_MonsterCommon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SightLock) == 0x000708, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SightLock' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_LinkedInputPose) == 0x0008C8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BoneRotateToLocation) == 0x000A00, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BoneRotateToLocation' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Root_1) == 0x000B28, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_55) == 0x000B60, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_55' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_54) == 0x000B88, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_54' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_53) == 0x000BB0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_53' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_52) == 0x000BD8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_52' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_51) == 0x000C00, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_51' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_50) == 0x000C28, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_50' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_UseCachedPose_3) == 0x000C50, "Member 'UABP_MonsterCommon_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_24) == 0x000C80, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_24' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_37) == 0x000CB8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_23) == 0x000D48, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_23' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_UseCachedPose_2) == 0x000D80, "Member 'UABP_MonsterCommon_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_22) == 0x000DB0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_22' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateMachine_4) == 0x000DE8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Slot_2) == 0x000F30, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_49) == 0x000F90, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_49' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_48) == 0x000FB8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_48' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_47) == 0x000FE0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_47' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_46) == 0x001008, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_46' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_45) == 0x001030, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_45' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_44) == 0x001058, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_44' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_43) == 0x001080, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_43' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_42) == 0x0010A8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_42' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_41) == 0x0010D0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_41' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_40) == 0x0010F8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_40' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_39) == 0x001120, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_39' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_36) == 0x001148, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_21) == 0x0011D8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_21' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_35) == 0x001210, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_20) == 0x0012A0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_20' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_34) == 0x0012D8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_19) == 0x001368, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_19' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_33) == 0x0013A0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_18) == 0x001430, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_18' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_32) == 0x001468, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_31) == 0x0014F8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByBool) == 0x001588, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_17) == 0x001638, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_17' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateMachine_3) == 0x001670, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SaveCachedPose_3) == 0x0017C0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SaveCachedPose_2) == 0x001970, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_38) == 0x001B20, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_38' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_37) == 0x001B48, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_37' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_36) == 0x001B70, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_36' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_35) == 0x001B98, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_35' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_34) == 0x001BC0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_34' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_33) == 0x001BE8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_33' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_32) == 0x001C10, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_32' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_31) == 0x001C38, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_31' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_30) == 0x001C60, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_30' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_29) == 0x001C88, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_29' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_28) == 0x001CB0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_28' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_27) == 0x001CD8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_26) == 0x001D00, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_25) == 0x001D28, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_24) == 0x001D50, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_23) == 0x001D78, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_22) == 0x001DA0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_21) == 0x001DC8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_20) == 0x001DF0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_19) == 0x001E18, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_18) == 0x001E40, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_17) == 0x001E68, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_16) == 0x001E90, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_15) == 0x001EB8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_14) == 0x001EE0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_13) == 0x001F08, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_12) == 0x001F30, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_30) == 0x001F58, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_29) == 0x001FE8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_28) == 0x002078, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByEnum_4) == 0x002108, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByEnum_4' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_16) == 0x0021C8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_16' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_15) == 0x002200, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_15' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_27) == 0x002238, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_26) == 0x0022C8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_25) == 0x002358, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_24) == 0x0023E8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_23) == 0x002478, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_22) == 0x002508, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_21) == 0x002598, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_20) == 0x002628, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_19) == 0x0026B8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_18) == 0x002748, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByEnum_3) == 0x0027D8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_14) == 0x002898, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_14' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_11) == 0x0028D0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_13) == 0x0028F8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_12) == 0x002930, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_17) == 0x002968, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_11) == 0x0029F8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_16) == 0x002A30, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_10) == 0x002AC0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_15) == 0x002AF8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_14) == 0x002B88, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_13) == 0x002C18, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByEnum_2) == 0x002CA8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_9) == 0x002D68, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_12) == 0x002DA0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_11) == 0x002E30, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_10) == 0x002EC0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByEnum_1) == 0x002F50, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_8) == 0x003010, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_10) == 0x003048, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_9) == 0x003070, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_8) == 0x003100, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_7) == 0x003190, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_6) == 0x003220, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_5) == 0x0032B0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_4) == 0x003340, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_BlendListByEnum) == 0x0033D0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_7) == 0x003490, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_UseCachedPose_1) == 0x0034C8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_6) == 0x0034F8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateMachine_2) == 0x003530, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Feedback) == 0x003678, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Feedback' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_ComponentToLocalSpace) == 0x0038E0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_LocalToComponentSpace) == 0x003900, "Member 'UABP_MonsterCommon_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_LinkedAnimLayer) == 0x003920, "Member 'UABP_MonsterCommon_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Slot_1) == 0x0039E0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SaveCachedPose_1) == 0x003A40, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_9) == 0x003BF0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_8) == 0x003C18, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_7) == 0x003C40, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_6) == 0x003C68, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_5) == 0x003C90, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_4) == 0x003CB8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_3) == 0x003CE0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_2) == 0x003D08, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_3) == 0x003D30, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_5) == 0x003DC0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_4) == 0x003DF8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_2) == 0x003E30, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_3) == 0x003EC0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer_1) == 0x003EF8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_2) == 0x003F88, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateMachine_1) == 0x003FC0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SaveCachedPose) == 0x004110, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult_1) == 0x0042C0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_TransitionResult) == 0x0042E8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Slot) == 0x004310, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_SequencePlayer) == 0x004370, "Member 'UABP_MonsterCommon_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult_1) == 0x004400, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_UseCachedPose) == 0x004438, "Member 'UABP_MonsterCommon_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateResult) == 0x004468, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_StateMachine) == 0x0044A0, "Member 'UABP_MonsterCommon_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, AnimGraphNode_Root) == 0x0045E8, "Member 'UABP_MonsterCommon_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, As_Base_Character) == 0x004620, "Member 'UABP_MonsterCommon_C::As_Base_Character' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Skeleton_Block_Info) == 0x004628, "Member 'UABP_MonsterCommon_C::Skeleton_Block_Info' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, FKShakeData) == 0x004648, "Member 'UABP_MonsterCommon_C::FKShakeData' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, NewEventDispatcher_0) == 0x004650, "Member 'UABP_MonsterCommon_C::NewEventDispatcher_0' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Increment) == 0x004660, "Member 'UABP_MonsterCommon_C::Increment' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, CameraMode) == 0x004664, "Member 'UABP_MonsterCommon_C::CameraMode' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Assist_Limit) == 0x004668, "Member 'UABP_MonsterCommon_C::Assist_Limit' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Sight_Bone_Name) == 0x00466C, "Member 'UABP_MonsterCommon_C::Sight_Bone_Name' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Begin_Bone_Name) == 0x004678, "Member 'UABP_MonsterCommon_C::Begin_Bone_Name' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, End_Bone_Name) == 0x004684, "Member 'UABP_MonsterCommon_C::End_Bone_Name' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ShakeAlpha) == 0x004690, "Member 'UABP_MonsterCommon_C::ShakeAlpha' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ShakeRange) == 0x004694, "Member 'UABP_MonsterCommon_C::ShakeRange' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, HitMaterial) == 0x004698, "Member 'UABP_MonsterCommon_C::HitMaterial' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, __e_______) == 0x0046A8, "Member 'UABP_MonsterCommon_C::__e_______' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ToughDecreaseValue) == 0x0046AC, "Member 'UABP_MonsterCommon_C::ToughDecreaseValue' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, CachedTagContainer) == 0x0046B0, "Member 'UABP_MonsterCommon_C::CachedTagContainer' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _e0b____) == 0x0046D0, "Member 'UABP_MonsterCommon_C::_e0b____' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, TestFkBoolean) == 0x0046D1, "Member 'UABP_MonsterCommon_C::TestFkBoolean' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, ShakeCurve) == 0x0046D8, "Member 'UABP_MonsterCommon_C::ShakeCurve' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _S_Stari) == 0x0046E0, "Member 'UABP_MonsterCommon_C::_S_Stari' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, _hSM_a) == 0x0046E8, "Member 'UABP_MonsterCommon_C::_hSM_a' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Bone_Name) == 0x0046F0, "Member 'UABP_MonsterCommon_C::Bone_Name' has a wrong offset!");
static_assert(offsetof(UABP_MonsterCommon_C, Ts_____) == 0x004700, "Member 'UABP_MonsterCommon_C::Ts_____' has a wrong offset!");

}

