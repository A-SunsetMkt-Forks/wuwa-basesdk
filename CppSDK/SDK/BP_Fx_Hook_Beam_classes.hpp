#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Fx_Hook_Beam

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TsBpFxEffect_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Fx_Hook_Beam.BP_Fx_Hook_Beam_C
// 0x0058 (0x0328 - 0x02D0)
class ABP_Fx_Hook_Beam_C final : public ATsBpFxEffect_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Fx_Hook_Beam_C;                  // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNiagaraComponent*                      NS_Hook_Beam;                                      // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Item_Position;                                     // 0x02F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Controller_Position;                               // 0x02FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Controller_Forward;                                // 0x0308(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedUpdate;                                        // 0x0314(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ForceMin;                                          // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForceMax;                                          // 0x031C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LengthAdjust;                                      // 0x0320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Fx_Hook_Beam(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void CalculateTangents(struct FVector* ControllerTangent, struct FVector* ItemTangent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Fx_Hook_Beam_C">();
	}
	static class ABP_Fx_Hook_Beam_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Fx_Hook_Beam_C>();
	}
};
static_assert(alignof(ABP_Fx_Hook_Beam_C) == 0x000008, "Wrong alignment on ABP_Fx_Hook_Beam_C");
static_assert(sizeof(ABP_Fx_Hook_Beam_C) == 0x000328, "Wrong size on ABP_Fx_Hook_Beam_C");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, UberGraphFrame_BP_Fx_Hook_Beam_C) == 0x0002D0, "Member 'ABP_Fx_Hook_Beam_C::UberGraphFrame_BP_Fx_Hook_Beam_C' has a wrong offset!");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, NS_Hook_Beam) == 0x0002D8, "Member 'ABP_Fx_Hook_Beam_C::NS_Hook_Beam' has a wrong offset!");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, Spline) == 0x0002E0, "Member 'ABP_Fx_Hook_Beam_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, Scene) == 0x0002E8, "Member 'ABP_Fx_Hook_Beam_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, Item_Position) == 0x0002F0, "Member 'ABP_Fx_Hook_Beam_C::Item_Position' has a wrong offset!");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, Controller_Position) == 0x0002FC, "Member 'ABP_Fx_Hook_Beam_C::Controller_Position' has a wrong offset!");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, Controller_Forward) == 0x000308, "Member 'ABP_Fx_Hook_Beam_C::Controller_Forward' has a wrong offset!");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, NeedUpdate) == 0x000314, "Member 'ABP_Fx_Hook_Beam_C::NeedUpdate' has a wrong offset!");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, ForceMin) == 0x000318, "Member 'ABP_Fx_Hook_Beam_C::ForceMin' has a wrong offset!");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, ForceMax) == 0x00031C, "Member 'ABP_Fx_Hook_Beam_C::ForceMax' has a wrong offset!");
static_assert(offsetof(ABP_Fx_Hook_Beam_C, LengthAdjust) == 0x000320, "Member 'ABP_Fx_Hook_Beam_C::LengthAdjust' has a wrong offset!");

}

