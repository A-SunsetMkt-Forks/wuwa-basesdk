#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ME1DabuouMd00001_input

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BP_InputComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ME1DabuouMd00001_input.BP_ME1DabuouMd00001_input_C
// 0x0038 (0x0258 - 0x0220)
class UBP_ME1DabuouMd00001_input_C final : public UBP_InputComponent_C
{
public:
	float                                         Cross角度;                                         // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Dot角度;                                           // 0x0224(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          攀岩点位置;                                        // 0x0228(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          自己位置;                                          // 0x0240(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	struct FSInputCommand 攻击按下(float time);
	struct FSInputCommand 技能1按下(float time);
	struct FSInputCommand 幻象1按下(float time);
	struct FSInputCommand 跳跃按下(float time);
	struct FSInputCommand 闪避按下(float time);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ME1DabuouMd00001_input_C">();
	}
	static class UBP_ME1DabuouMd00001_input_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ME1DabuouMd00001_input_C>();
	}
};
static_assert(alignof(UBP_ME1DabuouMd00001_input_C) == 0x000008, "Wrong alignment on UBP_ME1DabuouMd00001_input_C");
static_assert(sizeof(UBP_ME1DabuouMd00001_input_C) == 0x000258, "Wrong size on UBP_ME1DabuouMd00001_input_C");
static_assert(offsetof(UBP_ME1DabuouMd00001_input_C, Cross角度) == 0x000220, "Member 'UBP_ME1DabuouMd00001_input_C::Cross角度' has a wrong offset!");
static_assert(offsetof(UBP_ME1DabuouMd00001_input_C, Dot角度) == 0x000224, "Member 'UBP_ME1DabuouMd00001_input_C::Dot角度' has a wrong offset!");
static_assert(offsetof(UBP_ME1DabuouMd00001_input_C, 攀岩点位置) == 0x000228, "Member 'UBP_ME1DabuouMd00001_input_C::攀岩点位置' has a wrong offset!");
static_assert(offsetof(UBP_ME1DabuouMd00001_input_C, 自己位置) == 0x000240, "Member 'UBP_ME1DabuouMd00001_input_C::自己位置' has a wrong offset!");

}

