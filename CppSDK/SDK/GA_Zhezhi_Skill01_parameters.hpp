#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Zhezhi_Skill01

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "BPST_Zhezhi_He_BornConfig_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Zhezhi_Skill01.GA_Zhezhi_Skill01_C.ExecuteUbergraph_GA_Zhezhi_Skill01
// 0x0848 (0x0848 - 0x0000)
struct GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ___name_Variable;                                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ___name_Variable_1;                                // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable;                                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ___name_Variable_2;                                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ___name_Variable_3;                                // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_1;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ___name_Variable_4;                                // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ___name_Variable_5;                                // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0058(0x0028)(ZeroConstructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0080(0x0028)(ZeroConstructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00A8(0x0028)(ZeroConstructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x00D0(0x0028)(ZeroConstructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00F8(0x0028)(ZeroConstructor)
	struct FGameplayTag                           ___struct_Variable;                                // 0x0120(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc__________;                                // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_2;                                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ___name_Variable_6;                                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ___name_Variable_7;                                // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_____GA______________;                     // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable_3;                                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     ___struct_Variable_1;                              // 0x01B0(0x00B8)()
	class UAnimMontage*                           CallFunc___________1;                              // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue_1;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x02A0(0x00B8)()
	struct FGameplayEventData                     ___struct_Variable_2;                              // 0x0358(0x00B8)()
	float                                         CallFunc__________SpeedRatio;                      // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________2;                              // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc______________;                            // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_421[0x7];                                      // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________3;                              // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________4;                              // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_______________1;                          // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue_1; // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character_1;          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0458(0x0028)(ZeroConstructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc___________5;                              // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x0498(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_____GA_______________1;                   // 0x04C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x04D0(0x0028)(ZeroConstructor)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0508(0x0028)(ZeroConstructor)
	class UAnimMontage*                           CallFunc___________6;                              // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________7;                              // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload_1;                      // 0x0548(0x00B8)()
	bool                                          CallFunc_______________2;                          // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0608(0x0028)(ZeroConstructor)
	class ATsBaseCharacter_C*                     CallFunc___________8;                              // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________9;                              // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc___________10;                             // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_______________3;                          // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64A[0x6];                                      // 0x064A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0650(0x0028)(ZeroConstructor)
	class ATsBaseCharacter_C*                     CallFunc___________11;                             // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0680(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________12;                             // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc___Current_______;                         // 0x0698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x069C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69D[0x3];                                      // 0x069D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________13;                             // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________14;                             // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc___Current________1;                       // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x06C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C5[0x3];                                      // 0x06C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x06C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________15;                             // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________16;                             // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc___Current________2;                       // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_2;    // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6ED[0x3];                                      // 0x06ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________17;                             // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsTag_ReturnValue;                  // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________18;                             // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsTag_ReturnValue_1;                // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709[0x3];                                      // 0x0709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0718(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_2;                           // 0x0724(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0730(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_3;                           // 0x073C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc_____________Target;                       // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_____________FindTarget;                   // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_751[0x3];                                      // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0754(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc_____________Target_1;                     // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_____________FindTarget_1;                 // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_769[0x7];                                      // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________19;                             // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc__________SpeedRatio_1;                    // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77C[0x4];                                      // 0x077C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1; // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainsTag_ReturnValue_2;                // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_78A[0x6];                                      // 0x078A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________20;                             // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc_____________Target_2;                     // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_____________FindTarget_2;                 // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ContainsTag_ReturnValue_3;                // 0x07A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_________InAir;                            // 0x07A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_________InAir_1;                          // 0x07A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x07A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A5[0x3];                                      // 0x07A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x07A8(0x0028)(ZeroConstructor)
	TArray<struct FGameplayTag>                   CallFunc____________;                              // 0x07D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1[0x7];                                      // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x07E8(0x0028)(ZeroConstructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0810(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x081C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc_____________Target_3;                     // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_____________FindTarget_3;                 // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_831[0x7];                                      // 0x0831(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc_____________Target_4;                     // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_____________FindTarget_4;                 // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01");
static_assert(sizeof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01) == 0x000848, "Wrong size on GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, EntryPoint) == 0x000000, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___name_Variable) == 0x000004, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___name_Variable' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___name_Variable_1) == 0x000010, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___name_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___bool_Variable) == 0x00001C, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___name_Variable_2) == 0x000020, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___name_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___name_Variable_3) == 0x00002C, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___name_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___bool_Variable_1) == 0x000038, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___name_Variable_4) == 0x00003C, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___name_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___name_Variable_5) == 0x000048, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___name_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate) == 0x000058, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_1) == 0x000080, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000A8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000D0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000F8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___struct_Variable) == 0x000120, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00012C, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc__________) == 0x000130, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___bool_Variable_2) == 0x000138, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_GetDisplayName_ReturnValue) == 0x000140, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_GetObjectClass_ReturnValue) == 0x000150, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000158, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___name_Variable_6) == 0x00015C, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___name_Variable_6' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___name_Variable_7) == 0x000168, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___name_Variable_7' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____GA______________) == 0x000178, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____GA______________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___bool_Variable_3) == 0x000188, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___bool_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000190, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_Conv_NameToString_ReturnValue) == 0x000198, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_IsValid_ReturnValue) == 0x0001A8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___struct_Variable_1) == 0x0001B0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________1) == 0x000268, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_IsValid_ReturnValue_1) == 0x000270, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000278, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_DynamicCast_AsTs_Base_Character) == 0x000280, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_DynamicCast_AsTs_Base_Character' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_DynamicCast_bSuccess) == 0x000288, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_WaitGameplayEvent_ReturnValue_1) == 0x000290, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_WaitGameplayEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_IsValid_ReturnValue_2) == 0x000298, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CustomEvent_Payload) == 0x0002A0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, ___struct_Variable_2) == 0x000358, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::___struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc__________SpeedRatio) == 0x000410, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc__________SpeedRatio' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________2) == 0x000418, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc______________) == 0x000420, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc______________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________3) == 0x000428, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________4) == 0x000430, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________4' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_______________1) == 0x000438, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_______________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_GetOwningActorFromActorInfo_ReturnValue_1) == 0x000440, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_GetOwningActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_DynamicCast_AsTs_Base_Character_1) == 0x000448, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_DynamicCast_AsTs_Base_Character_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_DynamicCast_bSuccess_1) == 0x000450, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_5) == 0x000458, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000480, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________5) == 0x000488, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________5' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000490, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_GetDisplayName_ReturnValue_1) == 0x000498, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_IsValid_ReturnValue_3) == 0x0004A8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_GetObjectClass_ReturnValue_1) == 0x0004B0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x0004B8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____GA_______________1) == 0x0004C0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____GA_______________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_6) == 0x0004D0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0004F8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_7) == 0x000508, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________6) == 0x000530, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________6' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_IsValid_ReturnValue_4) == 0x000538, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________7) == 0x000540, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________7' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CustomEvent_Payload_1) == 0x000548, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CustomEvent_Payload_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_______________2) == 0x000600, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_______________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_8) == 0x000608, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________8) == 0x000630, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________8' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________9) == 0x000638, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________9' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________10) == 0x000640, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________10' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_______________3) == 0x000648, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_______________3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_IsValid_ReturnValue_5) == 0x000649, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_9) == 0x000650, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________11) == 0x000678, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________11' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_Conv_IntToString_ReturnValue) == 0x000680, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________12) == 0x000690, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________12' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___Current_______) == 0x000698, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___Current_______' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x00069C, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0006A0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________13) == 0x0006B0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________13' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________14) == 0x0006B8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________14' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___Current________1) == 0x0006C0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___Current________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0006C4, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0006C8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________15) == 0x0006D8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________15' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________16) == 0x0006E0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________16' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___Current________2) == 0x0006E8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___Current________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_GreaterEqual_FloatFloat_ReturnValue_2) == 0x0006EC, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_GreaterEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________17) == 0x0006F0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________17' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_ContainsTag_ReturnValue) == 0x0006F8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_ContainsTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________18) == 0x000700, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________18' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_ContainsTag_ReturnValue_1) == 0x000708, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_ContainsTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_Select_Default) == 0x00070C, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_Select_Default_1) == 0x000718, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_Select_Default_2) == 0x000724, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_MakeLiteralName_ReturnValue) == 0x000730, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_Select_Default_3) == 0x00073C, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____________Target) == 0x000748, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____________Target' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____________FindTarget) == 0x000750, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____________FindTarget' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000754, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____________Target_1) == 0x000760, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____________Target_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____________FindTarget_1) == 0x000768, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____________FindTarget_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________19) == 0x000770, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________19' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc__________SpeedRatio_1) == 0x000778, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc__________SpeedRatio_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1) == 0x000780, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_ContainsTag_ReturnValue_2) == 0x000788, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_ContainsTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_IsValid_ReturnValue_6) == 0x000789, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc___________20) == 0x000790, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc___________20' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____________Target_2) == 0x000798, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____________Target_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____________FindTarget_2) == 0x0007A0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____________FindTarget_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_ContainsTag_ReturnValue_3) == 0x0007A1, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_ContainsTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_________InAir) == 0x0007A2, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_________InAir' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_________InAir_1) == 0x0007A3, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_________InAir_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_BooleanOR_ReturnValue) == 0x0007A4, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_10) == 0x0007A8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc____________) == 0x0007D0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc____________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_Array_Contains_ReturnValue) == 0x0007E0, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, K2Node_CreateDelegate_OutputDelegate_11) == 0x0007E8, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000810, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_MakeLiteralName_ReturnValue_3) == 0x00081C, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____________Target_3) == 0x000828, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____________Target_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____________FindTarget_3) == 0x000830, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____________FindTarget_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____________Target_4) == 0x000838, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____________Target_4' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01, CallFunc_____________FindTarget_4) == 0x000840, "Member 'GA_Zhezhi_Skill01_C_ExecuteUbergraph_GA_Zhezhi_Skill01::CallFunc_____________FindTarget_4' has a wrong offset!");

// Function GA_Zhezhi_Skill01.GA_Zhezhi_Skill01_C.EventReceived_18B59F5945020DB23C42FD88DCB75A45
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD88DCB75A45 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD88DCB75A45) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD88DCB75A45");
static_assert(sizeof(GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD88DCB75A45) == 0x0000B8, "Wrong size on GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD88DCB75A45");
static_assert(offsetof(GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD88DCB75A45, Payload) == 0x000000, "Member 'GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD88DCB75A45::Payload' has a wrong offset!");

// Function GA_Zhezhi_Skill01.GA_Zhezhi_Skill01_C.EventReceived_18B59F5945020DB23C42FD887A29D0DA
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD887A29D0DA final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD887A29D0DA) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD887A29D0DA");
static_assert(sizeof(GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD887A29D0DA) == 0x0000B8, "Wrong size on GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD887A29D0DA");
static_assert(offsetof(GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD887A29D0DA, Payload) == 0x000000, "Member 'GA_Zhezhi_Skill01_C_EventReceived_18B59F5945020DB23C42FD887A29D0DA::Payload' has a wrong offset!");

// Function GA_Zhezhi_Skill01.GA_Zhezhi_Skill01_C.激活并获取飞鹤实体
// 0x0040 (0x0040 - 0x0000)
struct GA_Zhezhi_Skill01_C_激活并获取飞鹤实体 final
{
public:
	int32                                         飞鹤序列;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     飞鹤实体;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否找到实体;                                      // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     飞鹤获取实体;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_____ID___ID;                              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCustomEntityId_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc_____ID_______;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_____ID___________;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill01_C_激活并获取飞鹤实体");
static_assert(sizeof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体) == 0x000040, "Wrong size on GA_Zhezhi_Skill01_C_激活并获取飞鹤实体");
static_assert(offsetof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体, 飞鹤序列) == 0x000000, "Member 'GA_Zhezhi_Skill01_C_激活并获取飞鹤实体::飞鹤序列' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体, 飞鹤实体) == 0x000008, "Member 'GA_Zhezhi_Skill01_C_激活并获取飞鹤实体::飞鹤实体' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体, 是否找到实体) == 0x000010, "Member 'GA_Zhezhi_Skill01_C_激活并获取飞鹤实体::是否找到实体' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体, 飞鹤获取实体) == 0x000018, "Member 'GA_Zhezhi_Skill01_C_激活并获取飞鹤实体::飞鹤获取实体' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体, CallFunc__________) == 0x000020, "Member 'GA_Zhezhi_Skill01_C_激活并获取飞鹤实体::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体, CallFunc_____ID___ID) == 0x000028, "Member 'GA_Zhezhi_Skill01_C_激活并获取飞鹤实体::CallFunc_____ID___ID' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体, CallFunc_GetCustomEntityId_ReturnValue) == 0x00002C, "Member 'GA_Zhezhi_Skill01_C_激活并获取飞鹤实体::CallFunc_GetCustomEntityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体, CallFunc_____ID_______) == 0x000030, "Member 'GA_Zhezhi_Skill01_C_激活并获取飞鹤实体::CallFunc_____ID_______' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_激活并获取飞鹤实体, CallFunc_____ID___________) == 0x000038, "Member 'GA_Zhezhi_Skill01_C_激活并获取飞鹤实体::CallFunc_____ID___________' has a wrong offset!");

// Function GA_Zhezhi_Skill01.GA_Zhezhi_Skill01_C.设置飞鹤位置
// 0x0530 (0x0530 - 0x0000)
struct GA_Zhezhi_Skill01_C_设置飞鹤位置 final
{
public:
	class ATsBaseCharacter_C*                     飞鹤实体;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          Offset;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddRot;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddPosition;                                       // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0028(0x0018)()
	class FString                                 CallFunc_D_Conv_VectorToString_ReturnValue;        // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	class FString                                 CallFunc_D_Conv_VectorToString_ReturnValue_1;      // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B8(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00F8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0110(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0120(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0160(0x0018)()
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue_1;          // 0x0178(0x0018)()
	TArray<class AActor*>                         ___object_Variable;                                // 0x0190(0x0010)(ConstParm, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A0(0x0040)(HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x01E0(0x0010)(ConstParm, ReferenceParm)
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F8[0x8];                                      // 0x01F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_D_GetTransform_ReturnValue;               // 0x0200(0x0040)(IsPlainOldData, NoDestructor)
	struct FVectorDouble                          CallFunc_BreakTransformDouble_Location;            // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransformDouble_Rotation;            // 0x0258(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransformDouble_Scale;               // 0x0264(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue;          // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_Add_VectorVector_ReturnValue;           // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_D_LineTraceSingleForObjects_OutHit;       // 0x02B4(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_D_LineTraceSingleForObjects_ReturnValue;  // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35A[0x2];                                      // 0x035A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x037C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue;    // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x03F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_Add_VectorVector_ReturnValue_1;         // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_D_Conv_VectorToString_ReturnValue_2;      // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_SelectVector_ReturnValue;               // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0448(0x0018)()
	class FString                                 CallFunc_D_Conv_VectorToString_ReturnValue_3;      // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0470(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x04B0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x04C8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x0508(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0518(0x0018)()
};
static_assert(alignof(GA_Zhezhi_Skill01_C_设置飞鹤位置) == 0x000010, "Wrong alignment on GA_Zhezhi_Skill01_C_设置飞鹤位置");
static_assert(sizeof(GA_Zhezhi_Skill01_C_设置飞鹤位置) == 0x000530, "Wrong size on GA_Zhezhi_Skill01_C_设置飞鹤位置");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, 飞鹤实体) == 0x000000, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::飞鹤实体' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, Offset) == 0x000008, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::Offset' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, AddRot) == 0x000020, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::AddRot' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, AddPosition) == 0x000024, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::AddPosition' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000028, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_Conv_VectorToString_ReturnValue) == 0x000040, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_Conv_VectorToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_Conv_VectorToString_ReturnValue_1) == 0x0000A8, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_Conv_VectorToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B8, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000F8, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, K2Node_MakeArray_Array) == 0x000110, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, K2Node_MakeStruct_FormatArgumentData_2) == 0x000120, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_Format_ReturnValue) == 0x000160, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_Conv_ObjectToText_ReturnValue_1) == 0x000178, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_Conv_ObjectToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, ___object_Variable) == 0x000190, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::___object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, K2Node_MakeArray_Array_1) == 0x0001E0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc__________) == 0x0001F0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_GetTransform_ReturnValue) == 0x000200, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakTransformDouble_Location) == 0x000240, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakTransformDouble_Location' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakTransformDouble_Rotation) == 0x000258, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakTransformDouble_Rotation' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakTransformDouble_Scale) == 0x000264, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakTransformDouble_Scale' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_TransformLocation_ReturnValue) == 0x000270, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakRotator_Roll) == 0x000288, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakRotator_Pitch) == 0x00028C, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakRotator_Yaw) == 0x000290, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_Add_VectorVector_ReturnValue) == 0x000298, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_Add_FloatFloat_ReturnValue) == 0x0002B0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_LineTraceSingleForObjects_OutHit) == 0x0002B4, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_LineTraceSingleForObjects_ReturnValue) == 0x000348, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_MakeRotator_ReturnValue) == 0x00034C, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_bBlockingHit) == 0x000358, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_bInitialOverlap) == 0x000359, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_Time) == 0x00035C, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_Distance) == 0x000360, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_Location) == 0x000364, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_ImpactPoint) == 0x000370, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_Normal) == 0x00037C, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_ImpactNormal) == 0x000388, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_PhysMat) == 0x000398, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_HitActor) == 0x0003A0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_HitComponent) == 0x0003A8, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_HitBoneName) == 0x0003B0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_HitItem) == 0x0003BC, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_FaceIndex) == 0x0003C0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_TraceStart) == 0x0003C4, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_BreakHitResult_TraceEnd) == 0x0003D0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_Conv_VectorToVectorDouble_ReturnValue) == 0x0003E0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_Conv_VectorToVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_MakeRotator_ReturnValue_1) == 0x0003F8, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_Add_VectorVector_ReturnValue_1) == 0x000408, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_Conv_VectorToString_ReturnValue_2) == 0x000420, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_Conv_VectorToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_SelectVector_ReturnValue) == 0x000430, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000448, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_D_Conv_VectorToString_ReturnValue_3) == 0x000460, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_D_Conv_VectorToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, K2Node_MakeStruct_FormatArgumentData_4) == 0x000470, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_Conv_StringToText_ReturnValue_3) == 0x0004B0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, K2Node_MakeStruct_FormatArgumentData_5) == 0x0004C8, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, K2Node_MakeArray_Array_2) == 0x000508, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置, CallFunc_Format_ReturnValue_1) == 0x000518, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置::CallFunc_Format_ReturnValue_1' has a wrong offset!");

// Function GA_Zhezhi_Skill01.GA_Zhezhi_Skill01_C.根据配置激活并设置飞鹤
// 0x03B0 (0x03B0 - 0x0000)
struct GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤 final
{
public:
	class FName                                   Key;                                               // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     Target;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FindTarget;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           空中的判定类型;                                    // 0x0020(0x0010)(Edit, BlueprintVisible)
	struct FVectorDouble                          飞鹤位置;                                          // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBPST_Zhezhi_He_BornConfig             配置数据;                                          // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     TmpTarget;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_GetActorUpVector_ReturnValue;           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________1;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_GetTargetSocketLocation_ReturnValue;      // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Subtract_VectorVector_ReturnValue;      // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_Dot_VectorVector_ReturnValue;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_FMax_ReturnValue;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Multiply_VectorFloat_ReturnValue;       // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Add_VectorVector_ReturnValue;           // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue;    // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc_______________;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_________________;                         // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ___object_Variable;                                // 0x0158(0x0010)(ConstParm, ReferenceParm)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________2;                              // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________3;                              // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_D_GetTransform_ReturnValue;               // 0x0190(0x0040)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc____________;                              // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_TransformLocation_ReturnValue;          // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0210(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array_1;                          // 0x0228(0x0010)(ReferenceParm)
	struct FHitResult                             CallFunc_D_SphereTraceSingleForObjects_OutHit;     // 0x0238(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_D_SphereTraceSingleForObjects_ReturnValue; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x02CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x02CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CF[0x1];                                      // 0x02CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x02D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0318(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0334(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0340(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________4;                              // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue_1;  // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_____ID___ID;                              // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCustomEntityId_ReturnValue;            // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_____________1;                            // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)
	bool                                          CallFunc_GetEntityEnable_ReturnValue;              // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x2];                                      // 0x038A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBPST_Zhezhi_He_BornConfig             CallFunc_Map_Find_Value;                           // 0x038C(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤) == 0x000010, "Wrong alignment on GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤");
static_assert(sizeof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤) == 0x0003B0, "Wrong size on GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, Key) == 0x000000, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::Key' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, Target) == 0x000010, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::Target' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, FindTarget) == 0x000018, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::FindTarget' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, 空中的判定类型) == 0x000020, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::空中的判定类型' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, 飞鹤位置) == 0x000030, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::飞鹤位置' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, 配置数据) == 0x000048, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::配置数据' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, TmpTarget) == 0x000060, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::TmpTarget' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc__________) == 0x000068, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_GetActorUpVector_ReturnValue) == 0x000070, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_Array_Contains_ReturnValue) == 0x000088, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc___________1) == 0x000090, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_GetTargetSocketLocation_ReturnValue) == 0x0000B0, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_GetTargetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_Subtract_VectorVector_ReturnValue) == 0x0000C8, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_Dot_VectorVector_ReturnValue) == 0x0000E0, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_FMax_ReturnValue) == 0x0000E8, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_Multiply_VectorFloat_ReturnValue) == 0x0000F0, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_Add_VectorVector_ReturnValue) == 0x000108, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_Conv_VectorToVectorDouble_ReturnValue) == 0x000120, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_Conv_VectorToVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_______________) == 0x000138, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_______________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_________________) == 0x000140, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_________________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_Conv_IntToString_ReturnValue) == 0x000148, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, ___object_Variable) == 0x000158, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::___object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_Conv_StringToName_ReturnValue) == 0x000168, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc___________2) == 0x000178, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc___________3) == 0x000180, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc___________3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_GetTransform_ReturnValue) == 0x000190, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc____________) == 0x0001D0, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc____________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_TransformLocation_ReturnValue) == 0x0001D8, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_IsValid_ReturnValue) == 0x0001F0, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x0001F8, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, K2Node_MakeArray_Array) == 0x000210, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000220, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, K2Node_MakeArray_Array_1) == 0x000228, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_SphereTraceSingleForObjects_OutHit) == 0x000238, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_D_SphereTraceSingleForObjects_ReturnValue) == 0x0002CC, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_D_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_bBlockingHit) == 0x0002CD, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_bInitialOverlap) == 0x0002CE, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_Time) == 0x0002D0, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_Distance) == 0x0002D4, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_Location) == 0x0002D8, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_ImpactPoint) == 0x0002E4, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_Normal) == 0x0002F0, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_ImpactNormal) == 0x0002FC, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_PhysMat) == 0x000308, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_HitActor) == 0x000310, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_HitComponent) == 0x000318, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_HitBoneName) == 0x000320, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_HitItem) == 0x00032C, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_FaceIndex) == 0x000330, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_TraceStart) == 0x000334, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_BreakHitResult_TraceEnd) == 0x000340, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc___________4) == 0x000350, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc___________4' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_Conv_VectorToVectorDouble_ReturnValue_1) == 0x000358, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_Conv_VectorToVectorDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_____ID___ID) == 0x000370, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_____ID___ID' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_GetCustomEntityId_ReturnValue) == 0x000374, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_GetCustomEntityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x000378, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_____________1) == 0x000388, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_____________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_GetEntityEnable_ReturnValue) == 0x000389, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_GetEntityEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_Map_Find_Value) == 0x00038C, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤, CallFunc_Map_Find_ReturnValue) == 0x0003A4, "Member 'GA_Zhezhi_Skill01_C_根据配置激活并设置飞鹤::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function GA_Zhezhi_Skill01.GA_Zhezhi_Skill01_C.飞鹤是否在空中
// 0x0060 (0x0060 - 0x0000)
struct GA_Zhezhi_Skill01_C_飞鹤是否在空中 final
{
public:
	int32                                         Pos;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InAir;                                             // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0008(0x0020)()
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCustomEntityId_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEntityEnable_ReturnValue;              // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc_____ID_______;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_____ID___________;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Zhezhi_Skill01_C_飞鹤是否在空中) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill01_C_飞鹤是否在空中");
static_assert(sizeof(GA_Zhezhi_Skill01_C_飞鹤是否在空中) == 0x000060, "Wrong size on GA_Zhezhi_Skill01_C_飞鹤是否在空中");
static_assert(offsetof(GA_Zhezhi_Skill01_C_飞鹤是否在空中, Pos) == 0x000000, "Member 'GA_Zhezhi_Skill01_C_飞鹤是否在空中::Pos' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_飞鹤是否在空中, InAir) == 0x000004, "Member 'GA_Zhezhi_Skill01_C_飞鹤是否在空中::InAir' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_飞鹤是否在空中, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000008, "Member 'GA_Zhezhi_Skill01_C_飞鹤是否在空中::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_飞鹤是否在空中, CallFunc__________) == 0x000028, "Member 'GA_Zhezhi_Skill01_C_飞鹤是否在空中::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_飞鹤是否在空中, CallFunc_GetCustomEntityId_ReturnValue) == 0x000030, "Member 'GA_Zhezhi_Skill01_C_飞鹤是否在空中::CallFunc_GetCustomEntityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_飞鹤是否在空中, CallFunc_GetEntityEnable_ReturnValue) == 0x000034, "Member 'GA_Zhezhi_Skill01_C_飞鹤是否在空中::CallFunc_GetEntityEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_飞鹤是否在空中, CallFunc_____ID_______) == 0x000038, "Member 'GA_Zhezhi_Skill01_C_飞鹤是否在空中::CallFunc_____ID_______' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_飞鹤是否在空中, CallFunc_____ID___________) == 0x000040, "Member 'GA_Zhezhi_Skill01_C_飞鹤是否在空中::CallFunc_____ID___________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_飞鹤是否在空中, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000048, "Member 'GA_Zhezhi_Skill01_C_飞鹤是否在空中::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_飞鹤是否在空中, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000058, "Member 'GA_Zhezhi_Skill01_C_飞鹤是否在空中::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_Zhezhi_Skill01.GA_Zhezhi_Skill01_C.设置飞鹤位置New
// 0x0198 (0x0198 - 0x0000)
struct GA_Zhezhi_Skill01_C_设置飞鹤位置New final
{
public:
	class ATsBaseCharacter_C*                     飞鹤实体;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          TargetLocation;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddRot;                                            // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         地面探测高度;                                      // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_FixActorLocation_ReturnValue;             // 0x0034(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc________ReturnValue;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x1];                                       // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue;    // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc________ReturnValue_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetActorRotationWithContext_ReturnValue;  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Zhezhi_Skill01_C_设置飞鹤位置New) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill01_C_设置飞鹤位置New");
static_assert(sizeof(GA_Zhezhi_Skill01_C_设置飞鹤位置New) == 0x000198, "Wrong size on GA_Zhezhi_Skill01_C_设置飞鹤位置New");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, 飞鹤实体) == 0x000000, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::飞鹤实体' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, TargetLocation) == 0x000008, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::TargetLocation' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, AddRot) == 0x000020, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::AddRot' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, 地面探测高度) == 0x000024, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::地面探测高度' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_FixActorLocation_ReturnValue) == 0x000034, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_FixActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc________ReturnValue) == 0x0000C8, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc________ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C9, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000CA, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_Time) == 0x0000CC, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_Distance) == 0x0000D0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_Location) == 0x0000D4, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E0, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_Normal) == 0x0000EC, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F8, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_PhysMat) == 0x000108, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_HitActor) == 0x000110, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_HitComponent) == 0x000118, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_HitBoneName) == 0x000120, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_HitItem) == 0x00012C, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_FaceIndex) == 0x000130, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_TraceStart) == 0x000134, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_BreakHitResult_TraceEnd) == 0x000140, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_Conv_VectorToVectorDouble_ReturnValue) == 0x000150, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_Conv_VectorToVectorDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc________ReturnValue_1) == 0x000168, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc________ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc__________) == 0x000170, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000178, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_ComposeRotators_ReturnValue) == 0x000184, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill01_C_设置飞鹤位置New, CallFunc_SetActorRotationWithContext_ReturnValue) == 0x000190, "Member 'GA_Zhezhi_Skill01_C_设置飞鹤位置New::CallFunc_SetActorRotationWithContext_ReturnValue' has a wrong offset!");

}

