#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Role_Bianshen

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SVisionData_structs.hpp"
#include "GA_Base_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Role_Bianshen.GA_Role_Bianshen_C
// 0x0110 (0x0668 - 0x0558)
class UGA_Role_Bianshen_C final : public UGA_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Role_Bianshen_C;                 // 0x0558(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ATsBaseCharacter_C*                     角色;                                              // 0x0560(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_BaseVision_C*                       幻象;                                              // 0x0568(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FSVisionData                           幻象数据;                                          // 0x0570(0x0098)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class UBaseAbilitySystemComponent*            AbilitySystemComponent;                            // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         幻象ID;                                            // 0x0610(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         幻象Level;                                         // 0x0614(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         召唤实体ID;                                        // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          召唤成功;                                          // 0x061C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61D[0x3];                                      // 0x061D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagRemoved*    异步任务_变身结束;                                 // 0x0620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitDelay*                 异步任务_隐藏玩家;                                 // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否可以空战;                                      // 0x0630(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          执行空中释放;                                      // 0x0631(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_632[0x2];                                      // 0x0632(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaterialDataID;                                    // 0x0634(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Deprecated, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          混出结束;                                          // 0x0638(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_639[0x7];                                      // 0x0639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                材质_渐变消失;                                     // 0x0640(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                材质_渐变显示;                                     // 0x0648(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         混出动画Index;                                     // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                幻象出现材质;                                      // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                幻象出现粒子;                                      // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Role_Bianshen(int32 EntryPoint);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void 获取幻象数据(int32 幻象ID_0, struct FSVisionData* 幻象数据_0);
	void 计算施法技能ID(int32 技能序号, class FName* 计算结果);
	void 获取施法Skill_ID(class FString* Skill_ID);
	void 角色添加渐变消失材质(int32* MaterialDataID_0);
	void 角色添加渐变显示材质(int32* MaterialDataID_0);
	void 结束通用逻辑();
	void 计算幻象位置(class ACharacter* 目标幻象, struct FTransformDouble* NewParam);
	void 角色关闭碰撞();
	void 角色开启碰撞();
	void 继承移动模式(class UCharacterMovementComponent* Base, class UCharacterMovementComponent* Target);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Role_Bianshen_C">();
	}
	static class UGA_Role_Bianshen_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Role_Bianshen_C>();
	}
};
static_assert(alignof(UGA_Role_Bianshen_C) == 0x000008, "Wrong alignment on UGA_Role_Bianshen_C");
static_assert(sizeof(UGA_Role_Bianshen_C) == 0x000668, "Wrong size on UGA_Role_Bianshen_C");
static_assert(offsetof(UGA_Role_Bianshen_C, UberGraphFrame_GA_Role_Bianshen_C) == 0x000558, "Member 'UGA_Role_Bianshen_C::UberGraphFrame_GA_Role_Bianshen_C' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 角色) == 0x000560, "Member 'UGA_Role_Bianshen_C::角色' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 幻象) == 0x000568, "Member 'UGA_Role_Bianshen_C::幻象' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 幻象数据) == 0x000570, "Member 'UGA_Role_Bianshen_C::幻象数据' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, AbilitySystemComponent) == 0x000608, "Member 'UGA_Role_Bianshen_C::AbilitySystemComponent' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 幻象ID) == 0x000610, "Member 'UGA_Role_Bianshen_C::幻象ID' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 幻象Level) == 0x000614, "Member 'UGA_Role_Bianshen_C::幻象Level' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 召唤实体ID) == 0x000618, "Member 'UGA_Role_Bianshen_C::召唤实体ID' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 召唤成功) == 0x00061C, "Member 'UGA_Role_Bianshen_C::召唤成功' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 异步任务_变身结束) == 0x000620, "Member 'UGA_Role_Bianshen_C::异步任务_变身结束' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 异步任务_隐藏玩家) == 0x000628, "Member 'UGA_Role_Bianshen_C::异步任务_隐藏玩家' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 是否可以空战) == 0x000630, "Member 'UGA_Role_Bianshen_C::是否可以空战' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 执行空中释放) == 0x000631, "Member 'UGA_Role_Bianshen_C::执行空中释放' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, MaterialDataID) == 0x000634, "Member 'UGA_Role_Bianshen_C::MaterialDataID' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 混出结束) == 0x000638, "Member 'UGA_Role_Bianshen_C::混出结束' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 材质_渐变消失) == 0x000640, "Member 'UGA_Role_Bianshen_C::材质_渐变消失' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 材质_渐变显示) == 0x000648, "Member 'UGA_Role_Bianshen_C::材质_渐变显示' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 混出动画Index) == 0x000650, "Member 'UGA_Role_Bianshen_C::混出动画Index' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 幻象出现材质) == 0x000658, "Member 'UGA_Role_Bianshen_C::幻象出现材质' has a wrong offset!");
static_assert(offsetof(UGA_Role_Bianshen_C, 幻象出现粒子) == 0x000660, "Member 'UGA_Role_Bianshen_C::幻象出现粒子' has a wrong offset!");

}

