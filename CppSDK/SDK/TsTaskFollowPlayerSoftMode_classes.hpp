#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsTaskFollowPlayerSoftMode

#include "Basic.hpp"

#include "SFollowRotateInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TsTaskAbortImmediatelyBase_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsTaskFollowPlayerSoftMode.TsTaskFollowPlayerSoftMode_C
// 0x0058 (0x0110 - 0x00B8)
class UTsTaskFollowPlayerSoftMode_C final : public UTsTaskAbortImmediatelyBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_TsTaskFollowPlayerSoftMode_C;       // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         DistanceMin;                                       // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceMax;                                       // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceForceMove;                                 // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveSpeed;                                         // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x00D0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSFollowRotateInfo                     RotateInfo;                                        // 0x00E0(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ExecuteUbergraph_TsTaskFollowPlayerSoftMode(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsTaskFollowPlayerSoftMode_C">();
	}
	static class UTsTaskFollowPlayerSoftMode_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsTaskFollowPlayerSoftMode_C>();
	}
};
static_assert(alignof(UTsTaskFollowPlayerSoftMode_C) == 0x000008, "Wrong alignment on UTsTaskFollowPlayerSoftMode_C");
static_assert(sizeof(UTsTaskFollowPlayerSoftMode_C) == 0x000110, "Wrong size on UTsTaskFollowPlayerSoftMode_C");
static_assert(offsetof(UTsTaskFollowPlayerSoftMode_C, UberGraphFrame_TsTaskFollowPlayerSoftMode_C) == 0x0000B8, "Member 'UTsTaskFollowPlayerSoftMode_C::UberGraphFrame_TsTaskFollowPlayerSoftMode_C' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowPlayerSoftMode_C, DistanceMin) == 0x0000C0, "Member 'UTsTaskFollowPlayerSoftMode_C::DistanceMin' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowPlayerSoftMode_C, DistanceMax) == 0x0000C4, "Member 'UTsTaskFollowPlayerSoftMode_C::DistanceMax' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowPlayerSoftMode_C, DistanceForceMove) == 0x0000C8, "Member 'UTsTaskFollowPlayerSoftMode_C::DistanceForceMove' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowPlayerSoftMode_C, MoveSpeed) == 0x0000CC, "Member 'UTsTaskFollowPlayerSoftMode_C::MoveSpeed' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowPlayerSoftMode_C, Offset) == 0x0000D0, "Member 'UTsTaskFollowPlayerSoftMode_C::Offset' has a wrong offset!");
static_assert(offsetof(UTsTaskFollowPlayerSoftMode_C, RotateInfo) == 0x0000E0, "Member 'UTsTaskFollowPlayerSoftMode_C::RotateInfo' has a wrong offset!");

}

