#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Chun_Special

#include "Basic.hpp"

#include "KuroAnim_classes.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Chun_Special.ABP_Chun_Special_C
// 0x0260 (0x0960 - 0x0700)
class UABP_Chun_Special_C final : public UKuroAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0700(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0708(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0740(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x07D0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0808(0x0148)()
	class UABP_BaseRole_C*                        BaseRole;                                          // 0x0950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          技能状态_待机;                                     // 0x0958(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Chun_Special(int32 EntryPoint);
	void OnComponentStart();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Chun_Special_C">();
	}
	static class UABP_Chun_Special_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Chun_Special_C>();
	}
};
static_assert(alignof(UABP_Chun_Special_C) == 0x000010, "Wrong alignment on UABP_Chun_Special_C");
static_assert(sizeof(UABP_Chun_Special_C) == 0x000960, "Wrong size on UABP_Chun_Special_C");
static_assert(offsetof(UABP_Chun_Special_C, UberGraphFrame) == 0x000700, "Member 'UABP_Chun_Special_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Chun_Special_C, AnimGraphNode_Root) == 0x000708, "Member 'UABP_Chun_Special_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Chun_Special_C, AnimGraphNode_SequencePlayer) == 0x000740, "Member 'UABP_Chun_Special_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_Chun_Special_C, AnimGraphNode_StateResult) == 0x0007D0, "Member 'UABP_Chun_Special_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_Chun_Special_C, AnimGraphNode_StateMachine) == 0x000808, "Member 'UABP_Chun_Special_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_Chun_Special_C, BaseRole) == 0x000950, "Member 'UABP_Chun_Special_C::BaseRole' has a wrong offset!");
static_assert(offsetof(UABP_Chun_Special_C, 技能状态_待机) == 0x000958, "Member 'UABP_Chun_Special_C::技能状态_待机' has a wrong offset!");

}

