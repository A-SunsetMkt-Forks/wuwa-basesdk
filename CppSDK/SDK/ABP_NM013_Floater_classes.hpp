#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NM013_Floater

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_NM013_Floater.ABP_NM013_Floater_C
// 0x03D0 (0x0780 - 0x03B0)
class UABP_NM013_Floater_C final : public UAnimInstance
{
public:
	uint8                                         Pad_3A8[0x8];                                      // 0x03A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03B8(0x0038)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x03F0(0x0060)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0450(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0478(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x04A0(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0530(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0568(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x05F8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0630(0x0148)()
	float                                         GroundSpeed;                                       // 0x0778(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NM013_Floater_AnimGraphNode_TransitionResult_BCAD437645CE53A45F0876856566C406();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NM013_Floater_AnimGraphNode_TransitionResult_F18F4BC54DB04CB2A7DEE38EEABFF96B();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_NM013_Floater(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_NM013_Floater_C">();
	}
	static class UABP_NM013_Floater_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_NM013_Floater_C>();
	}
};
static_assert(alignof(UABP_NM013_Floater_C) == 0x000010, "Wrong alignment on UABP_NM013_Floater_C");
static_assert(sizeof(UABP_NM013_Floater_C) == 0x000780, "Wrong size on UABP_NM013_Floater_C");
static_assert(offsetof(UABP_NM013_Floater_C, UberGraphFrame) == 0x0003B0, "Member 'UABP_NM013_Floater_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_NM013_Floater_C, AnimGraphNode_Root) == 0x0003B8, "Member 'UABP_NM013_Floater_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_NM013_Floater_C, AnimGraphNode_Slot) == 0x0003F0, "Member 'UABP_NM013_Floater_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_NM013_Floater_C, AnimGraphNode_TransitionResult_1) == 0x000450, "Member 'UABP_NM013_Floater_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NM013_Floater_C, AnimGraphNode_TransitionResult) == 0x000478, "Member 'UABP_NM013_Floater_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_NM013_Floater_C, AnimGraphNode_SequencePlayer_1) == 0x0004A0, "Member 'UABP_NM013_Floater_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_NM013_Floater_C, AnimGraphNode_StateResult_1) == 0x000530, "Member 'UABP_NM013_Floater_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_NM013_Floater_C, AnimGraphNode_SequencePlayer) == 0x000568, "Member 'UABP_NM013_Floater_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_NM013_Floater_C, AnimGraphNode_StateResult) == 0x0005F8, "Member 'UABP_NM013_Floater_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_NM013_Floater_C, AnimGraphNode_StateMachine) == 0x000630, "Member 'UABP_NM013_Floater_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_NM013_Floater_C, GroundSpeed) == 0x000778, "Member 'UABP_NM013_Floater_C::GroundSpeed' has a wrong offset!");

}

