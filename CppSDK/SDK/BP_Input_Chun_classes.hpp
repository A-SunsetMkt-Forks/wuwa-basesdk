#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Input_Chun

#include "Basic.hpp"

#include "sInputCommand_structs.hpp"
#include "BP_InputComponent_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Input_Chun.BP_Input_Chun_C
// 0x0040 (0x0260 - 0x0220)
class UBP_Input_Chun_C final : public UBP_InputComponent_C
{
public:
	struct FSInputCommand                         输出值;                                            // 0x0220(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         长按跳跃;                                          // 0x0234(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         闪避输出;                                          // 0x0248(0x0014)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	struct FSInputCommand 攻击按下(float time);
	struct FSInputCommand 技能1按下(float time);
	struct FSInputCommand 攻击长按(float time);
	struct FSInputCommand 攻击抬起(float time);
	struct FSInputCommand 大招按下(float time);
	struct FSInputCommand 跳跃按下(float time);
	struct FSInputCommand 跳跃长按(float time);
	struct FSInputCommand 闪避按下(float time);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Input_Chun_C">();
	}
	static class UBP_Input_Chun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Input_Chun_C>();
	}
};
static_assert(alignof(UBP_Input_Chun_C) == 0x000008, "Wrong alignment on UBP_Input_Chun_C");
static_assert(sizeof(UBP_Input_Chun_C) == 0x000260, "Wrong size on UBP_Input_Chun_C");
static_assert(offsetof(UBP_Input_Chun_C, 输出值) == 0x000220, "Member 'UBP_Input_Chun_C::输出值' has a wrong offset!");
static_assert(offsetof(UBP_Input_Chun_C, 长按跳跃) == 0x000234, "Member 'UBP_Input_Chun_C::长按跳跃' has a wrong offset!");
static_assert(offsetof(UBP_Input_Chun_C, 闪避输出) == 0x000248, "Member 'UBP_Input_Chun_C::闪避输出' has a wrong offset!");

}

