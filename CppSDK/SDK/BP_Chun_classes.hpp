#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Chun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TsBaseCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Chun.BP_Chun_C
// 0x0050 (0x0800 - 0x07B0)
class ABP_Chun_C final : public ATsBaseCharacter_C
{
public:
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Chun_C;                          // 0x07A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UKuroAdjustableCapsuleComponent*        Bip001RThighTwist;                                 // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKuroAdjustableCapsuleComponent*        Bip001Spine2;                                      // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKuroAdjustableCapsuleComponent*        Bip001LThighTwist;                                 // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OtherCase4;                                        // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OtherCase3;                                        // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OtherCase2;                                        // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OtherCase1;                                        // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WeaponCase1;                                       // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WeaponCase0;                                       // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Chun(int32 EntryPoint);
	void ReceiveBeginPlay();
	void FightCommand(bool isInAir);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Chun_C">();
	}
	static class ABP_Chun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Chun_C>();
	}
};
static_assert(alignof(ABP_Chun_C) == 0x000010, "Wrong alignment on ABP_Chun_C");
static_assert(sizeof(ABP_Chun_C) == 0x000800, "Wrong size on ABP_Chun_C");
static_assert(offsetof(ABP_Chun_C, UberGraphFrame_BP_Chun_C) == 0x0007A8, "Member 'ABP_Chun_C::UberGraphFrame_BP_Chun_C' has a wrong offset!");
static_assert(offsetof(ABP_Chun_C, Bip001RThighTwist) == 0x0007B0, "Member 'ABP_Chun_C::Bip001RThighTwist' has a wrong offset!");
static_assert(offsetof(ABP_Chun_C, Bip001Spine2) == 0x0007B8, "Member 'ABP_Chun_C::Bip001Spine2' has a wrong offset!");
static_assert(offsetof(ABP_Chun_C, Bip001LThighTwist) == 0x0007C0, "Member 'ABP_Chun_C::Bip001LThighTwist' has a wrong offset!");
static_assert(offsetof(ABP_Chun_C, OtherCase4) == 0x0007C8, "Member 'ABP_Chun_C::OtherCase4' has a wrong offset!");
static_assert(offsetof(ABP_Chun_C, OtherCase3) == 0x0007D0, "Member 'ABP_Chun_C::OtherCase3' has a wrong offset!");
static_assert(offsetof(ABP_Chun_C, OtherCase2) == 0x0007D8, "Member 'ABP_Chun_C::OtherCase2' has a wrong offset!");
static_assert(offsetof(ABP_Chun_C, OtherCase1) == 0x0007E0, "Member 'ABP_Chun_C::OtherCase1' has a wrong offset!");
static_assert(offsetof(ABP_Chun_C, WeaponCase1) == 0x0007E8, "Member 'ABP_Chun_C::WeaponCase1' has a wrong offset!");
static_assert(offsetof(ABP_Chun_C, WeaponCase0) == 0x0007F0, "Member 'ABP_Chun_C::WeaponCase0' has a wrong offset!");

}

