#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroTraceCloud

#include "Basic.hpp"

#include "BP_KuroTraceCloud_classes.hpp"
#include "BP_KuroTraceCloud_parameters.hpp"


namespace SDK
{

// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.ExecuteUbergraph_BP_KuroTraceCloud
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroTraceCloud_C::ExecuteUbergraph_BP_KuroTraceCloud(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroTraceCloud_C", "ExecuteUbergraph_BP_KuroTraceCloud");

	Params::BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroTraceCloud_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroTraceCloud_C", "ReceiveTick");

	Params::BP_KuroTraceCloud_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.EditorTick
// (BlueprintCallable, BlueprintEvent)

void ABP_KuroTraceCloud_C::EditorTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroTraceCloud_C", "EditorTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_KuroTraceCloud_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroTraceCloud_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.UpdateCloudTransform
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UStaticMeshComponent*             CloudCube                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroTraceCloud_C::UpdateCloudTransform(const class UStaticMeshComponent* CloudCube)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroTraceCloud_C", "UpdateCloudTransform");

	Params::BP_KuroTraceCloud_C_UpdateCloudTransform Parms{};

	Parms.CloudCube = CloudCube;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.UpdateCloudLighting
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMaterialInstanceDynamic*         Material                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroTraceCloud_C::UpdateCloudLighting(class UMaterialInstanceDynamic* Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroTraceCloud_C", "UpdateCloudLighting");

	Params::BP_KuroTraceCloud_C_UpdateCloudLighting Parms{};

	Parms.Material = Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.GetLerpGIData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FSD_KuroTraceCloudData           LerpData_0                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroTraceCloud_C::GetLerpGIData(float Time, struct FSD_KuroTraceCloudData* LerpData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroTraceCloud_C", "GetLerpGIData");

	Params::BP_KuroTraceCloud_C_GetLerpGIData Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);

	if (LerpData_0 != nullptr)
		*LerpData_0 = std::move(Parms.LerpData_0);
}


// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.Update Cloud Fade
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_KuroTraceCloud_C::Update_Cloud_Fade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroTraceCloud_C", "Update Cloud Fade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.ShowCloud
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_KuroTraceCloud_C::ShowCloud(bool bNewVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroTraceCloud_C", "ShowCloud");

	Params::BP_KuroTraceCloud_C_ShowCloud Parms{};

	Parms.bNewVisibility = bNewVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.DistanceFromBox
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          P                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Box                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   dist                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_KuroTraceCloud_C::DistanceFromBox(const struct FVector& P, const struct FVector& Box, float* dist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_KuroTraceCloud_C", "DistanceFromBox");

	Params::BP_KuroTraceCloud_C_DistanceFromBox Parms{};

	Parms.P = std::move(P);
	Parms.Box = std::move(Box);

	UObject::ProcessEvent(Func, &Parms);

	if (dist != nullptr)
		*dist = Parms.dist;
}

}

