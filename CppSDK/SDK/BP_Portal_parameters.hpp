#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Portal

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"


namespace SDK::Params
{

// Function BP_Portal.BP_Portal_C.ExecuteUbergraph_BP_Portal
// 0x0010 (0x0010 - 0x0000)
struct BP_Portal_C_ExecuteUbergraph_BP_Portal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EKuroFeatureLevel                             CallFunc_GetWorldFeatureLevel_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_ExecuteUbergraph_BP_Portal) == 0x000004, "Wrong alignment on BP_Portal_C_ExecuteUbergraph_BP_Portal");
static_assert(sizeof(BP_Portal_C_ExecuteUbergraph_BP_Portal) == 0x000010, "Wrong size on BP_Portal_C_ExecuteUbergraph_BP_Portal");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, EntryPoint) == 0x000000, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_GetWorldFeatureLevel_ReturnValue) == 0x000004, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_GetWorldFeatureLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ExecuteUbergraph_BP_Portal, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_Portal_C_ExecuteUbergraph_BP_Portal::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Portal_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Portal_C_ReceiveTick");
static_assert(sizeof(BP_Portal_C_ReceiveTick) == 0x000004, "Wrong size on BP_Portal_C_ReceiveTick");
static_assert(offsetof(BP_Portal_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Portal_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.UserConstructionScript
// 0x0010 (0x0010 - 0x0000)
struct BP_Portal_C_UserConstructionScript final
{
public:
	bool                                          IsPortalA;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureComponent2D*               CaptureComp;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Portal_C_UserConstructionScript");
static_assert(sizeof(BP_Portal_C_UserConstructionScript) == 0x000010, "Wrong size on BP_Portal_C_UserConstructionScript");
static_assert(offsetof(BP_Portal_C_UserConstructionScript, IsPortalA) == 0x000000, "Member 'BP_Portal_C_UserConstructionScript::IsPortalA' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UserConstructionScript, CaptureComp) == 0x000008, "Member 'BP_Portal_C_UserConstructionScript::CaptureComp' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.1
// 0x0030 (0x0030 - 0x0000)
struct BP_Portal_C_One final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_One) == 0x000010, "Wrong alignment on BP_Portal_C_One");
static_assert(sizeof(BP_Portal_C_One) == 0x000030, "Wrong size on BP_Portal_C_One");
static_assert(offsetof(BP_Portal_C_One, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_Portal_C_One::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetPortal1Bounds
// 0x0024 (0x0024 - 0x0000)
struct BP_Portal_C_SetPortal1Bounds final
{
public:
	struct FVector                                Bounds;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_SetPortal1Bounds) == 0x000004, "Wrong alignment on BP_Portal_C_SetPortal1Bounds");
static_assert(sizeof(BP_Portal_C_SetPortal1Bounds) == 0x000024, "Wrong size on BP_Portal_C_SetPortal1Bounds");
static_assert(offsetof(BP_Portal_C_SetPortal1Bounds, Bounds) == 0x000000, "Member 'BP_Portal_C_SetPortal1Bounds::Bounds' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Bounds, CallFunc_BreakVector_X) == 0x00000C, "Member 'BP_Portal_C_SetPortal1Bounds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Bounds, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_Portal_C_SetPortal1Bounds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Bounds, CallFunc_BreakVector_Z) == 0x000014, "Member 'BP_Portal_C_SetPortal1Bounds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Bounds, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_Portal_C_SetPortal1Bounds::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetPortal2Bounds
// 0x0024 (0x0024 - 0x0000)
struct BP_Portal_C_SetPortal2Bounds final
{
public:
	struct FVector                                Bounds;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_SetPortal2Bounds) == 0x000004, "Wrong alignment on BP_Portal_C_SetPortal2Bounds");
static_assert(sizeof(BP_Portal_C_SetPortal2Bounds) == 0x000024, "Wrong size on BP_Portal_C_SetPortal2Bounds");
static_assert(offsetof(BP_Portal_C_SetPortal2Bounds, Bounds) == 0x000000, "Member 'BP_Portal_C_SetPortal2Bounds::Bounds' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Bounds, CallFunc_BreakVector_X) == 0x00000C, "Member 'BP_Portal_C_SetPortal2Bounds::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Bounds, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_Portal_C_SetPortal2Bounds::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Bounds, CallFunc_BreakVector_Z) == 0x000014, "Member 'BP_Portal_C_SetPortal2Bounds::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Bounds, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_Portal_C_SetPortal2Bounds::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetPortal1Transform
// 0x0060 (0x0060 - 0x0000)
struct BP_Portal_C_SetPortal1Transform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             CaptureTransform;                                  // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_SetPortal1Transform) == 0x000010, "Wrong alignment on BP_Portal_C_SetPortal1Transform");
static_assert(sizeof(BP_Portal_C_SetPortal1Transform) == 0x000060, "Wrong size on BP_Portal_C_SetPortal1Transform");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, Transform) == 0x000000, "Member 'BP_Portal_C_SetPortal1Transform::Transform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal1Transform, CaptureTransform) == 0x000030, "Member 'BP_Portal_C_SetPortal1Transform::CaptureTransform' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetPortal2Transform
// 0x0060 (0x0060 - 0x0000)
struct BP_Portal_C_SetPortal2Transform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             CaptureTransform;                                  // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_SetPortal2Transform) == 0x000010, "Wrong alignment on BP_Portal_C_SetPortal2Transform");
static_assert(sizeof(BP_Portal_C_SetPortal2Transform) == 0x000060, "Wrong size on BP_Portal_C_SetPortal2Transform");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, Transform) == 0x000000, "Member 'BP_Portal_C_SetPortal2Transform::Transform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetPortal2Transform, CaptureTransform) == 0x000030, "Member 'BP_Portal_C_SetPortal2Transform::CaptureTransform' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.2
// 0x0030 (0x0030 - 0x0000)
struct BP_Portal_C_Two final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_Two) == 0x000010, "Wrong alignment on BP_Portal_C_Two");
static_assert(sizeof(BP_Portal_C_Two) == 0x000030, "Wrong size on BP_Portal_C_Two");
static_assert(offsetof(BP_Portal_C_Two, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_Portal_C_Two::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetCaptureShowingActors
// 0x0030 (0x0030 - 0x0000)
struct BP_Portal_C_SetCaptureShowingActors final
{
public:
	bool                                          IsCapture1;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         HiddenActors;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class AActor*>                         ForceShowActors;                                   // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class USceneCaptureComponent2D*               CaptureComp;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_SetCaptureShowingActors) == 0x000008, "Wrong alignment on BP_Portal_C_SetCaptureShowingActors");
static_assert(sizeof(BP_Portal_C_SetCaptureShowingActors) == 0x000030, "Wrong size on BP_Portal_C_SetCaptureShowingActors");
static_assert(offsetof(BP_Portal_C_SetCaptureShowingActors, IsCapture1) == 0x000000, "Member 'BP_Portal_C_SetCaptureShowingActors::IsCapture1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowingActors, HiddenActors) == 0x000008, "Member 'BP_Portal_C_SetCaptureShowingActors::HiddenActors' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowingActors, ForceShowActors) == 0x000018, "Member 'BP_Portal_C_SetCaptureShowingActors::ForceShowActors' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowingActors, CaptureComp) == 0x000028, "Member 'BP_Portal_C_SetCaptureShowingActors::CaptureComp' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetCaptureMaxViewDistance
// 0x0008 (0x0008 - 0x0000)
struct BP_Portal_C_SetCaptureMaxViewDistance final
{
public:
	bool                                          IsCapture1;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MaxViewDistance;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_SetCaptureMaxViewDistance) == 0x000004, "Wrong alignment on BP_Portal_C_SetCaptureMaxViewDistance");
static_assert(sizeof(BP_Portal_C_SetCaptureMaxViewDistance) == 0x000008, "Wrong size on BP_Portal_C_SetCaptureMaxViewDistance");
static_assert(offsetof(BP_Portal_C_SetCaptureMaxViewDistance, IsCapture1) == 0x000000, "Member 'BP_Portal_C_SetCaptureMaxViewDistance::IsCapture1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureMaxViewDistance, MaxViewDistance) == 0x000004, "Member 'BP_Portal_C_SetCaptureMaxViewDistance::MaxViewDistance' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.SetCaptureShowFlags
// 0x0160 (0x0160 - 0x0000)
struct BP_Portal_C_SetCaptureShowFlags final
{
public:
	bool                                          IsCapture1;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FDA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, bool>                     ShowFlags;                                         // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TSet<class FString>                           ExistFlagNameSet;                                  // 0x0058(0x0050)(Edit, BlueprintVisible)
	class USceneCaptureComponent2D*               CaptureComp;                                       // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable_1;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDB[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FDC[0x3];                                     // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable_1;                     // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FDD[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEngineShowFlagsSetting                CallFunc_Array_Get_Item;                           // 0x00E8(0x0018)()
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FDE[0x6];                                     // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEngineShowFlagsSetting                K2Node_MakeStruct_EngineShowFlagsSetting;          // 0x0118(0x0018)()
	bool                                          CallFunc_Map_Find_Value_1;                         // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FDF[0x2];                                     // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEngineShowFlagsSetting                K2Node_SetFieldsInStruct_StructOut;                // 0x0138(0x0018)()
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE0[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_SetCaptureShowFlags) == 0x000008, "Wrong alignment on BP_Portal_C_SetCaptureShowFlags");
static_assert(sizeof(BP_Portal_C_SetCaptureShowFlags) == 0x000160, "Wrong size on BP_Portal_C_SetCaptureShowFlags");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, IsCapture1) == 0x000000, "Member 'BP_Portal_C_SetCaptureShowFlags::IsCapture1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ShowFlags) == 0x000008, "Member 'BP_Portal_C_SetCaptureShowFlags::ShowFlags' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ExistFlagNameSet) == 0x000058, "Member 'BP_Portal_C_SetCaptureShowFlags::ExistFlagNameSet' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CaptureComp) == 0x0000A8, "Member 'BP_Portal_C_SetCaptureShowFlags::CaptureComp' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ___int_Loop_Counter_Variable) == 0x0000B0, "Member 'BP_Portal_C_SetCaptureShowFlags::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ___int_Array_Index_Variable) == 0x0000B8, "Member 'BP_Portal_C_SetCaptureShowFlags::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ___int_Loop_Counter_Variable_1) == 0x0000BC, "Member 'BP_Portal_C_SetCaptureShowFlags::___int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Keys_Keys) == 0x0000C8, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, ___int_Array_Index_Variable_1) == 0x0000E0, "Member 'BP_Portal_C_SetCaptureShowFlags::___int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Find_Value) == 0x000110, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Find_ReturnValue) == 0x000111, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, K2Node_MakeStruct_EngineShowFlagsSetting) == 0x000118, "Member 'BP_Portal_C_SetCaptureShowFlags::K2Node_MakeStruct_EngineShowFlagsSetting' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Find_Value_1) == 0x000130, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Map_Find_ReturnValue_1) == 0x000131, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Add_ReturnValue) == 0x000134, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, K2Node_SetFieldsInStruct_StructOut) == 0x000138, "Member 'BP_Portal_C_SetCaptureShowFlags::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Set_Contains_ReturnValue) == 0x000150, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Array_Length_ReturnValue_1) == 0x000154, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_SetCaptureShowFlags, CallFunc_Less_IntInt_ReturnValue_1) == 0x000158, "Member 'BP_Portal_C_SetCaptureShowFlags::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.UpdatePortalAnimation
// 0x0068 (0x0068 - 0x0000)
struct BP_Portal_C_UpdatePortalAnimation final
{
public:
	float                                         ShowLen;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeLen;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShown;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            ShowCurve;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FadeCurve;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Counter;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE2[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   SM;                                                // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DMI;                                               // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutputCounter;                                     // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Factor;                                            // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp;                                              // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_UpdatePortalAnimation) == 0x000008, "Wrong alignment on BP_Portal_C_UpdatePortalAnimation");
static_assert(sizeof(BP_Portal_C_UpdatePortalAnimation) == 0x000068, "Wrong size on BP_Portal_C_UpdatePortalAnimation");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, ShowLen) == 0x000000, "Member 'BP_Portal_C_UpdatePortalAnimation::ShowLen' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, FadeLen) == 0x000004, "Member 'BP_Portal_C_UpdatePortalAnimation::FadeLen' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, IsShown) == 0x000008, "Member 'BP_Portal_C_UpdatePortalAnimation::IsShown' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, ShowCurve) == 0x000010, "Member 'BP_Portal_C_UpdatePortalAnimation::ShowCurve' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, FadeCurve) == 0x000018, "Member 'BP_Portal_C_UpdatePortalAnimation::FadeCurve' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, Counter) == 0x000020, "Member 'BP_Portal_C_UpdatePortalAnimation::Counter' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, SM) == 0x000028, "Member 'BP_Portal_C_UpdatePortalAnimation::SM' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, DMI) == 0x000030, "Member 'BP_Portal_C_UpdatePortalAnimation::DMI' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, OutputCounter) == 0x000038, "Member 'BP_Portal_C_UpdatePortalAnimation::OutputCounter' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, Factor) == 0x00003C, "Member 'BP_Portal_C_UpdatePortalAnimation::Factor' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, Temp) == 0x000040, "Member 'BP_Portal_C_UpdatePortalAnimation::Temp' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_FClamp_ReturnValue) == 0x000044, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_FClamp_ReturnValue_1) == 0x000048, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00004C, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000050, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_GetFloatValue_ReturnValue) == 0x000054, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_GetFloatValue_ReturnValue_1) == 0x000058, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00005C, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalAnimation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000060, "Member 'BP_Portal_C_UpdatePortalAnimation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.UpdatePortalsCameraPosition
// 0x0A90 (0x0A90 - 0x0000)
struct BP_Portal_C_UpdatePortalsCameraPosition final
{
public:
	struct FVector                                ScaledPortalBounds2;                               // 0x0000(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ScaledPortalBounds1;                               // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PortalEdgeFarPoint2;                               // 0x0018(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PortalEdgeFarPoint1;                               // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CameraTempTrans2;                                  // 0x0030(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             CameraTempTrans1;                                  // 0x0060(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_4;      // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE3[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0150(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_5;      // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_6;      // 0x018C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_7;      // 0x0198(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x01A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x01B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE4[0x8];                                     // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0200(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE5[0xC];                                     // 0x0224(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0230(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue;                  // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_1;                // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0280(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_2;                // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_3;                // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x02A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x02AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x02B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_8;      // 0x02C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_9;      // 0x02D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x02DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE6[0x4];                                     // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x0324(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE7[0xC];                                     // 0x0354(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0360(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0390(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_7;                // 0x03C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_7;                // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_7;                   // 0x03D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x03E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_6;                          // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_6;                          // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_6;                          // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_4;                // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue;       // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenVector_Angle;              // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_5;                // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0438(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_7;                          // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_7;                          // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_7;                          // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0464(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0472(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0473(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0477(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FE8[0x3];                                     // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x047C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_1;     // 0x0488(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenVector_Angle_1;            // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue_1;                    // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_8;                          // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_8;                          // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_8;                          // 0x04AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_6;                // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SignOfFloat_ReturnValue_7;                // 0x04BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x04C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x04D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_2;     // 0x04DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x04EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_3;                      // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_4;                      // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_LookRotation_ForwardFirst_ReturnValue;    // 0x0504(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue;            // 0x0514(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAsin_ReturnValue;                      // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE9[0xC];                                     // 0x0524(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_5;              // 0x0530(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult;      // 0x0564(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_4;        // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_5;        // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_1;          // 0x0608(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_1;          // 0x0614(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_6;              // 0x0620(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0650(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_8;                // 0x065C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_8;                // 0x0668(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_8;                   // 0x0674(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_9;                // 0x0680(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_9;                // 0x068C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_9;                   // 0x0698(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x06A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x06B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x06BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_3;     // 0x06C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_9;                          // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_9;                          // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_9;                          // 0x06DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_5;                      // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FEA[0x3];                                     // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FEB[0x3];                                     // 0x06ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAcos_ReturnValue_2;                    // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x06F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x06F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x06F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x06F7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x06F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x06FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FEC[0x1];                                     // 0x06FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAngleBetweenVector_Angle_2;            // 0x06FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_6;        // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_4;            // 0x0708(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_5;            // 0x0714(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0720(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_4;     // 0x0750(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_6;                      // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAngleBetweenVector_Angle_3;            // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_6;          // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue_3;                    // 0x0768(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_7;        // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_8;        // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FED[0x8];                                     // 0x0778(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x0780(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_6;            // 0x07B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ProjectVectorOnToPlane_ReturnValue_5;     // 0x07BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_7;            // 0x07C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_7;                      // 0x07D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue_1;         // 0x07D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_8;                      // 0x07E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_9;                      // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_9;        // 0x07EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_LookRotation_ForwardFirst_ReturnValue_1;  // 0x07F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_7;          // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue_1;          // 0x0800(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegAsin_ReturnValue_1;                    // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_7;              // 0x0810(0x0030)(IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegCos_ReturnValue_1;                     // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldTransform_SweepHitResult_1;    // 0x0844(0x0094)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_10;       // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_11;       // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_2;     // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_3;     // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_2;          // 0x08F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue_3;          // 0x08FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_2;          // 0x0908(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_3;          // 0x0914(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_8;              // 0x0920(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_9;              // 0x0950(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetMappingTransformToOtherPortal_TargetTransform; // 0x0980(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetMappingTransformToOtherPortal_TargetTransform_1; // 0x09B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_10;               // 0x09E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_10;               // 0x09EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_10;                  // 0x09F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_11;               // 0x0A04(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_11;               // 0x0A10(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_11;                  // 0x0A1C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FEE[0x8];                                     // 0x0A28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_10;             // 0x0A30(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_11;             // 0x0A60(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_UpdatePortalsCameraPosition) == 0x000010, "Wrong alignment on BP_Portal_C_UpdatePortalsCameraPosition");
static_assert(sizeof(BP_Portal_C_UpdatePortalsCameraPosition) == 0x000A90, "Wrong size on BP_Portal_C_UpdatePortalsCameraPosition");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, ScaledPortalBounds2) == 0x000000, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::ScaledPortalBounds2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, ScaledPortalBounds1) == 0x00000C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::ScaledPortalBounds1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, PortalEdgeFarPoint2) == 0x000018, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::PortalEdgeFarPoint2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, PortalEdgeFarPoint1) == 0x000024, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::PortalEdgeFarPoint1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CameraTempTrans2) == 0x000030, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CameraTempTrans2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CameraTempTrans1) == 0x000060, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CameraTempTrans1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location) == 0x000090, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation) == 0x00009C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale) == 0x0000A8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X) == 0x0000B4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z) == 0x0000BC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_1) == 0x0000C4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_1) == 0x0000C8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_1) == 0x0000CC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_2) == 0x0000D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_2) == 0x0000D4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_2) == 0x0000D8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0000DC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000E8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000EC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000F8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000104, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_3) == 0x000110, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_3) == 0x000114, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_3) == 0x000118, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_4) == 0x00011C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_1) == 0x000128, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_1) == 0x000134, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_1) == 0x000140, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue) == 0x000150, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_5) == 0x000180, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_6) == 0x00018C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_7) == 0x000198, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_2) == 0x0001A4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_2) == 0x0001B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_2) == 0x0001BC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_1) == 0x0001D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_3) == 0x000200, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_3) == 0x00020C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_3) == 0x000218, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_2) == 0x000230, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_4) == 0x000260, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_4) == 0x000264, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_4) == 0x000268, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue) == 0x00026C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_1) == 0x000270, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000274, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000280, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_5) == 0x00028C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_5) == 0x000290, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_5) == 0x000294, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_2) == 0x000298, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_3) == 0x00029C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_4) == 0x0002A0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_4) == 0x0002AC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_4) == 0x0002B8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_8) == 0x0002C4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorVector_ReturnValue_9) == 0x0002D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorVector_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_5) == 0x0002DC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_5) == 0x0002E8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_5) == 0x0002F4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeVector_ReturnValue) == 0x000300, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000310, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraRotation_ReturnValue) == 0x000318, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_6) == 0x000324, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_6) == 0x000330, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_6) == 0x00033C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraLocation_ReturnValue) == 0x000348, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_3) == 0x000360, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_4) == 0x000390, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_7) == 0x0003C0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_7) == 0x0003CC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_7) == 0x0003D8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_InverseTransformLocation_ReturnValue) == 0x0003E4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_6) == 0x0003F0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_6) == 0x0003F4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_6) == 0x0003F8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003FC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_4) == 0x000408, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue) == 0x00040C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000418, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue) == 0x000424, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetAngleBetweenVector_Angle) == 0x000428, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetAngleBetweenVector_Angle' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00042C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_5) == 0x000430, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAcos_ReturnValue) == 0x000434, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000438, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000444, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000448, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000454, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_7) == 0x000458, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_7) == 0x00045C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_7) == 0x000460, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue) == 0x000464, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000470, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000471, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Not_PreBool_ReturnValue) == 0x000472, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Not_PreBool_ReturnValue_1) == 0x000473, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue) == 0x000474, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_1) == 0x000475, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_2) == 0x000476, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_3) == 0x000477, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000478, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x00047C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue_1) == 0x000488, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_1) == 0x000494, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetAngleBetweenVector_Angle_1) == 0x000498, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetAngleBetweenVector_Angle_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00049C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAcos_ReturnValue_1) == 0x0004A0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAcos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_8) == 0x0004A4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_8) == 0x0004A8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_8) == 0x0004AC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x0004B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_6) == 0x0004B4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0004B8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_SignOfFloat_ReturnValue_7) == 0x0004BC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_SignOfFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0004C0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x0004C4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x0004D0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue_2) == 0x0004DC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_2) == 0x0004E8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Cross_VectorVector_ReturnValue) == 0x0004EC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_3) == 0x0004F8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_4) == 0x0004FC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000500, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_LookRotation_ForwardFirst_ReturnValue) == 0x000504, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_LookRotation_ForwardFirst_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x000510, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_TransformRotation_ReturnValue) == 0x000514, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAsin_ReturnValue) == 0x000520, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAsin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_5) == 0x000530, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegCos_ReturnValue) == 0x000560, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_K2_SetWorldTransform_SweepHitResult) == 0x000564, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_K2_SetWorldTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_4) == 0x0005F8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_5) == 0x0005FC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000600, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraRotation_ReturnValue_1) == 0x000608, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraLocation_ReturnValue_1) == 0x000614, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_6) == 0x000620, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeVector_ReturnValue_1) == 0x000650, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_8) == 0x00065C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_8) == 0x000668, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_8) == 0x000674, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_9) == 0x000680, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_9) == 0x00068C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_9) == 0x000698, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x0006A4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x0006B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0006BC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue_3) == 0x0006C8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_X_9) == 0x0006D4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Y_9) == 0x0006D8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakVector_Z_9) == 0x0006DC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_5) == 0x0006E0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0006E4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x0006E8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Not_PreBool_ReturnValue_2) == 0x0006EC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAcos_ReturnValue_2) == 0x0006F0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAcos_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x0006F4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0006F5, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_4) == 0x0006F6, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Not_PreBool_ReturnValue_3) == 0x0006F7, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_5) == 0x0006F8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_6) == 0x0006F9, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BooleanAND_ReturnValue_7) == 0x0006FA, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetAngleBetweenVector_Angle_2) == 0x0006FC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetAngleBetweenVector_Angle_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000700, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_6) == 0x000704, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_4) == 0x000708, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_5) == 0x000714, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000720, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue_4) == 0x000750, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_6) == 0x00075C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetAngleBetweenVector_Angle_3) == 0x000760, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetAngleBetweenVector_Angle_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_6) == 0x000764, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAcos_ReturnValue_3) == 0x000768, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAcos_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x00076C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_7) == 0x000770, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_8) == 0x000774, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x000780, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_6) == 0x0007B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_ProjectVectorOnToPlane_ReturnValue_5) == 0x0007BC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_ProjectVectorOnToPlane_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_RotateAngleAxis_ReturnValue_7) == 0x0007C8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_RotateAngleAxis_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_7) == 0x0007D4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Cross_VectorVector_ReturnValue_1) == 0x0007D8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Cross_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_8) == 0x0007E4, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_VSize_ReturnValue_9) == 0x0007E8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_VSize_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_9) == 0x0007EC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_LookRotation_ForwardFirst_ReturnValue_1) == 0x0007F0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_LookRotation_ForwardFirst_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Divide_FloatFloat_ReturnValue_7) == 0x0007FC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Divide_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_TransformRotation_ReturnValue_1) == 0x000800, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_TransformRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegAsin_ReturnValue_1) == 0x00080C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegAsin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_7) == 0x000810, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_DegCos_ReturnValue_1) == 0x000840, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_DegCos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_K2_SetWorldTransform_SweepHitResult_1) == 0x000844, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_K2_SetWorldTransform_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_10) == 0x0008D8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_Multiply_FloatFloat_ReturnValue_11) == 0x0008DC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_Multiply_FloatFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetPlayerCameraManager_ReturnValue_2) == 0x0008E0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetPlayerCameraManager_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetPlayerCameraManager_ReturnValue_3) == 0x0008E8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetPlayerCameraManager_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraRotation_ReturnValue_2) == 0x0008F0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraRotation_ReturnValue_3) == 0x0008FC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraLocation_ReturnValue_2) == 0x000908, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetCameraLocation_ReturnValue_3) == 0x000914, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetCameraLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_8) == 0x000920, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_9) == 0x000950, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetMappingTransformToOtherPortal_TargetTransform) == 0x000980, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetMappingTransformToOtherPortal_TargetTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_GetMappingTransformToOtherPortal_TargetTransform_1) == 0x0009B0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_GetMappingTransformToOtherPortal_TargetTransform_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_10) == 0x0009E0, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_10' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_10) == 0x0009EC, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_10' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_10) == 0x0009F8, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_10' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Location_11) == 0x000A04, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Location_11' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Rotation_11) == 0x000A10, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Rotation_11' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_BreakTransform_Scale_11) == 0x000A1C, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_BreakTransform_Scale_11' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_10) == 0x000A30, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_UpdatePortalsCameraPosition, CallFunc_MakeTransform_ReturnValue_11) == 0x000A60, "Member 'BP_Portal_C_UpdatePortalsCameraPosition::CallFunc_MakeTransform_ReturnValue_11' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.GetMappingTransformToOtherPortal
// 0x01C0 (0x01C0 - 0x0000)
struct BP_Portal_C_GetMappingTransformToOtherPortal final
{
public:
	struct FTransform                             SourceTransform;                                   // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	bool                                          bA2B;                                              // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FEF[0xF];                                     // 0x0031(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TargetTransform;                                   // 0x0040(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor)
	struct FTransform                             TargetPortalTransform;                             // 0x0070(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             SourcePortalTransform;                             // 0x00A0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_1;          // 0x0160(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue_2;          // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_GetMappingTransformToOtherPortal) == 0x000010, "Wrong alignment on BP_Portal_C_GetMappingTransformToOtherPortal");
static_assert(sizeof(BP_Portal_C_GetMappingTransformToOtherPortal) == 0x0001C0, "Wrong size on BP_Portal_C_GetMappingTransformToOtherPortal");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, SourceTransform) == 0x000000, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::SourceTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, bA2B) == 0x000030, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::bA2B' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, TargetTransform) == 0x000040, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::TargetTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, TargetPortalTransform) == 0x000070, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::TargetPortalTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, SourcePortalTransform) == 0x0000A0, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::SourcePortalTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, CallFunc_InvertTransform_ReturnValue) == 0x0000D0, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, CallFunc_ComposeTransforms_ReturnValue) == 0x000100, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, CallFunc_ComposeTransforms_ReturnValue_1) == 0x000160, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::CallFunc_ComposeTransforms_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetMappingTransformToOtherPortal, CallFunc_ComposeTransforms_ReturnValue_2) == 0x000190, "Member 'BP_Portal_C_GetMappingTransformToOtherPortal::CallFunc_ComposeTransforms_ReturnValue_2' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.DrawDebugFrustum
// 0x00F0 (0x00F0 - 0x0000)
struct BP_Portal_C_DrawDebugFrustum final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         FovX;                                              // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NearClipPlane;                                     // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AspectRatio;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NearPlaneBound;                                    // 0x003C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegTan_ReturnValue;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_2;          // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_3;          // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_DrawDebugFrustum) == 0x000010, "Wrong alignment on BP_Portal_C_DrawDebugFrustum");
static_assert(sizeof(BP_Portal_C_DrawDebugFrustum) == 0x0000F0, "Wrong size on BP_Portal_C_DrawDebugFrustum");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, Transform) == 0x000000, "Member 'BP_Portal_C_DrawDebugFrustum::Transform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, FovX) == 0x000030, "Member 'BP_Portal_C_DrawDebugFrustum::FovX' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, NearClipPlane) == 0x000034, "Member 'BP_Portal_C_DrawDebugFrustum::NearClipPlane' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, AspectRatio) == 0x000038, "Member 'BP_Portal_C_DrawDebugFrustum::AspectRatio' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, NearPlaneBound) == 0x00003C, "Member 'BP_Portal_C_DrawDebugFrustum::NearPlaneBound' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_DegTan_ReturnValue) == 0x00004C, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_DegTan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000050, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_BreakTransform_Location) == 0x000054, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_BreakTransform_Rotation) == 0x000060, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_BreakTransform_Scale) == 0x00006C, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000078, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000084, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_TransformLocation_ReturnValue) == 0x000090, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_TransformLocation_ReturnValue_1) == 0x00009C, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x0000A8, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x0000B4, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_TransformLocation_ReturnValue_2) == 0x0000C0, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_TransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_TransformLocation_ReturnValue_3) == 0x0000CC, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_TransformLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000D8, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000DC, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugFrustum, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'BP_Portal_C_DrawDebugFrustum::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.GetAngleBetweenVector
// 0x0040 (0x0040 - 0x0000)
struct BP_Portal_C_GetAngleBetweenVector final
{
public:
	struct FVector                                Vector1;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Vector2;                                           // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue_2;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAsin_ReturnValue;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_GetAngleBetweenVector) == 0x000004, "Wrong alignment on BP_Portal_C_GetAngleBetweenVector");
static_assert(sizeof(BP_Portal_C_GetAngleBetweenVector) == 0x000040, "Wrong size on BP_Portal_C_GetAngleBetweenVector");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, Vector1) == 0x000000, "Member 'BP_Portal_C_GetAngleBetweenVector::Vector1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, Vector2) == 0x00000C, "Member 'BP_Portal_C_GetAngleBetweenVector::Vector2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, Angle) == 0x000018, "Member 'BP_Portal_C_GetAngleBetweenVector::Angle' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_VSize_ReturnValue) == 0x00001C, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_Cross_VectorVector_ReturnValue) == 0x000020, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_VSize_ReturnValue_1) == 0x00002C, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_VSize_ReturnValue_2) == 0x000030, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000038, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_GetAngleBetweenVector, CallFunc_DegAsin_ReturnValue) == 0x00003C, "Member 'BP_Portal_C_GetAngleBetweenVector::CallFunc_DegAsin_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.ApplyCapturePerformace
// 0x0030 (0x0030 - 0x0000)
struct BP_Portal_C_ApplyCapturePerformace final
{
public:
	bool                                          IsPortalA;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ConfigLevel;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CaptureMaxViewDistance;                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF1[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneCaptureComponent2D*               CaptureComp;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSceneCaptureComponent2DParams         Tmep_config;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_ApplyCapturePerformace) == 0x000008, "Wrong alignment on BP_Portal_C_ApplyCapturePerformace");
static_assert(sizeof(BP_Portal_C_ApplyCapturePerformace) == 0x000030, "Wrong size on BP_Portal_C_ApplyCapturePerformace");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, IsPortalA) == 0x000000, "Member 'BP_Portal_C_ApplyCapturePerformace::IsPortalA' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, ConfigLevel) == 0x000004, "Member 'BP_Portal_C_ApplyCapturePerformace::ConfigLevel' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, CaptureMaxViewDistance) == 0x000008, "Member 'BP_Portal_C_ApplyCapturePerformace::CaptureMaxViewDistance' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, CaptureComp) == 0x000010, "Member 'BP_Portal_C_ApplyCapturePerformace::CaptureComp' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, Tmep_config) == 0x000018, "Member 'BP_Portal_C_ApplyCapturePerformace::Tmep_config' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, K2Node_SwitchInteger_CmpSuccess) == 0x000028, "Member 'BP_Portal_C_ApplyCapturePerformace::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_ApplyCapturePerformace, K2Node_SwitchInteger_CmpSuccess_1) == 0x000029, "Member 'BP_Portal_C_ApplyCapturePerformace::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.CheckCapturePerformanceLevel
// 0x00E0 (0x00E0 - 0x0000)
struct BP_Portal_C_CheckCapturePerformanceLevel final
{
public:
	bool                                          IsPortalA;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF2[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TargetTrans;                                       // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	int32                                         Temp_level;                                        // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_distance;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF3[0x8];                                     // 0x0048(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TempTrans;                                         // 0x0050(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF4[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF5[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Portal_C_CheckCapturePerformanceLevel) == 0x000010, "Wrong alignment on BP_Portal_C_CheckCapturePerformanceLevel");
static_assert(sizeof(BP_Portal_C_CheckCapturePerformanceLevel) == 0x0000E0, "Wrong size on BP_Portal_C_CheckCapturePerformanceLevel");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, IsPortalA) == 0x000000, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::IsPortalA' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, TargetTrans) == 0x000010, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::TargetTrans' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, Temp_level) == 0x000040, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::Temp_level' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, Temp_distance) == 0x000044, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::Temp_distance' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, TempTrans) == 0x000050, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::TempTrans' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransform_Location) == 0x000084, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransform_Rotation) == 0x000090, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransform_Scale) == 0x00009C, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransform_Location_1) == 0x0000AC, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransform_Rotation_1) == 0x0000B8, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_BreakTransform_Scale_1) == 0x0000C4, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_Vector_Distance_ReturnValue) == 0x0000D0, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0000D5, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_CheckCapturePerformanceLevel, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0000D6, "Member 'BP_Portal_C_CheckCapturePerformanceLevel::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.PrintDebugCaptureParams
// 0x0310 (0x0310 - 0x0000)
struct BP_Portal_C_PrintDebugCaptureParams final
{
public:
	bool                                          IsCapture1;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF6[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSceneCaptureComponent2DParams         CaptureParam;                                      // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_2FF7[0xC];                                     // 0x0014(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             PortalTransform;                                   // 0x0020(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                DebugTextPos;                                      // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LogColor;                                          // 0x005C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FF8[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0070(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x00C8(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_2;            // 0x00E0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00F8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0138(0x0040)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_3;            // 0x0178(0x0018)()
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_4;            // 0x0190(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x01A8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x01E8(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x0228(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0268(0x0040)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_7;            // 0x02A8(0x0040)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02E8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02F8(0x0018)()
};
static_assert(alignof(BP_Portal_C_PrintDebugCaptureParams) == 0x000010, "Wrong alignment on BP_Portal_C_PrintDebugCaptureParams");
static_assert(sizeof(BP_Portal_C_PrintDebugCaptureParams) == 0x000310, "Wrong size on BP_Portal_C_PrintDebugCaptureParams");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, IsCapture1) == 0x000000, "Member 'BP_Portal_C_PrintDebugCaptureParams::IsCapture1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CaptureParam) == 0x000004, "Member 'BP_Portal_C_PrintDebugCaptureParams::CaptureParam' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, PortalTransform) == 0x000020, "Member 'BP_Portal_C_PrintDebugCaptureParams::PortalTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, DebugTextPos) == 0x000050, "Member 'BP_Portal_C_PrintDebugCaptureParams::DebugTextPos' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, LogColor) == 0x00005C, "Member 'BP_Portal_C_PrintDebugCaptureParams::LogColor' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Conv_BoolToText_ReturnValue) == 0x000070, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x0000C8, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Conv_BoolToText_ReturnValue_2) == 0x0000E0, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Conv_BoolToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000F8, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_2) == 0x000138, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Conv_BoolToText_ReturnValue_3) == 0x000178, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Conv_BoolToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Conv_BoolToText_ReturnValue_4) == 0x000190, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Conv_BoolToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_3) == 0x0001A8, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_4) == 0x0001E8, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_5) == 0x000228, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_6) == 0x000268, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeStruct_FormatArgumentData_7) == 0x0002A8, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeStruct_FormatArgumentData_7' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, K2Node_MakeArray_Array) == 0x0002E8, "Member 'BP_Portal_C_PrintDebugCaptureParams::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_PrintDebugCaptureParams, CallFunc_Format_ReturnValue) == 0x0002F8, "Member 'BP_Portal_C_PrintDebugCaptureParams::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function BP_Portal.BP_Portal_C.DrawDebugPortalBounds
// 0x00A0 (0x00A0 - 0x0000)
struct BP_Portal_C_DrawDebugPortalBounds final
{
public:
	bool                                          IsPortal1;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FF9[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PortalBounds;                                      // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             PortalTransform;                                   // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_1;          // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_2;          // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue_3;          // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Portal_C_DrawDebugPortalBounds) == 0x000010, "Wrong alignment on BP_Portal_C_DrawDebugPortalBounds");
static_assert(sizeof(BP_Portal_C_DrawDebugPortalBounds) == 0x0000A0, "Wrong size on BP_Portal_C_DrawDebugPortalBounds");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, IsPortal1) == 0x000000, "Member 'BP_Portal_C_DrawDebugPortalBounds::IsPortal1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, PortalBounds) == 0x000004, "Member 'BP_Portal_C_DrawDebugPortalBounds::PortalBounds' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, PortalTransform) == 0x000010, "Member 'BP_Portal_C_DrawDebugPortalBounds::PortalTransform' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000040, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x00004C, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000058, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000064, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_TransformLocation_ReturnValue) == 0x000070, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_TransformLocation_ReturnValue_1) == 0x00007C, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_TransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_TransformLocation_ReturnValue_2) == 0x000088, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_TransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Portal_C_DrawDebugPortalBounds, CallFunc_TransformLocation_ReturnValue_3) == 0x000094, "Member 'BP_Portal_C_DrawDebugPortalBounds::CallFunc_TransformLocation_ReturnValue_3' has a wrong offset!");

}

