#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Input_Zhezhi

#include "Basic.hpp"

#include "SInputCommand_structs.hpp"
#include "SSkillInfo_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_Input_Zhezhi.BP_Input_Zhezhi_C.€ý1¬w‹ö
// 0x0004 (0x0004 - 0x0000)
struct BP_Input_Zhezhi_C___1_w__ final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Zhezhi_C___1_w__) == 0x000004, "Wrong alignment on BP_Input_Zhezhi_C___1_w__");
static_assert(sizeof(BP_Input_Zhezhi_C___1_w__) == 0x000004, "Wrong size on BP_Input_Zhezhi_C___1_w__");
static_assert(offsetof(BP_Input_Zhezhi_C___1_w__, Time) == 0x000000, "Member 'BP_Input_Zhezhi_C___1_w__::Time' has a wrong offset!");

// Function BP_Input_Zhezhi.BP_Input_Zhezhi_C.Þd(z-
// 0x0038 (0x0038 - 0x0000)
struct BP_Input_Zhezhi_C__d_zMinus final
{
public:
	bool                                          _zMinus;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc______Int__;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetActorByEntityId_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Zhezhi_C__d_zMinus) == 0x000008, "Wrong alignment on BP_Input_Zhezhi_C__d_zMinus");
static_assert(sizeof(BP_Input_Zhezhi_C__d_zMinus) == 0x000038, "Wrong size on BP_Input_Zhezhi_C__d_zMinus");
static_assert(offsetof(BP_Input_Zhezhi_C__d_zMinus, _zMinus) == 0x000000, "Member 'BP_Input_Zhezhi_C__d_zMinus::_zMinus' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C__d_zMinus, CallFunc______Int__) == 0x000004, "Member 'BP_Input_Zhezhi_C__d_zMinus::CallFunc______Int__' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C__d_zMinus, CallFunc_GetActorByEntityId_ReturnValue) == 0x000008, "Member 'BP_Input_Zhezhi_C__d_zMinus::CallFunc_GetActorByEntityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C__d_zMinus, K2Node_DynamicCast_AsTs_Base_Character) == 0x000010, "Member 'BP_Input_Zhezhi_C__d_zMinus::K2Node_DynamicCast_AsTs_Base_Character' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C__d_zMinus, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Input_Zhezhi_C__d_zMinus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C__d_zMinus, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000020, "Member 'BP_Input_Zhezhi_C__d_zMinus::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C__d_zMinus, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000030, "Member 'BP_Input_Zhezhi_C__d_zMinus::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_Input_Zhezhi.BP_Input_Zhezhi_C.'Û	
// 0x0470 (0x0470 - 0x0000)
struct BP_Input_Zhezhi_C_Func______16 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0044(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x0068(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00A8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0223(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0228(0x0020)()
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x024C(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue;     // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0268(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x0278(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAttributeCurrentValue_ReturnValue_1;   // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x02C8(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x043A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x043B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x043D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x043E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x043F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0443(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_445[0x3];                                      // 0x0445(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x3];                                      // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x045C(0x0014)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Input_Zhezhi_C_____) == 0x000008, "Wrong alignment on BP_Input_Zhezhi_C_____");
static_assert(sizeof(BP_Input_Zhezhi_C_____) == 0x000470, "Wrong size on BP_Input_Zhezhi_C_____");
static_assert(offsetof(BP_Input_Zhezhi_C_____, Time) == 0x000000, "Member 'BP_Input_Zhezhi_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Zhezhi_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable) == 0x000018, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_1) == 0x00002C, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000040, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand) == 0x000044, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x000068, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x00007C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000090, "Member 'BP_Input_Zhezhi_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue) == 0x000094, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x000098, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x0000A8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000218, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x00021C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00021D, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue) == 0x00021E, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x00021F, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000220, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000221, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x000222, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000223, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x000224, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000228, "Member 'BP_Input_Zhezhi_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000248, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_2) == 0x00024C, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetAttributeCurrentValue_ReturnValue) == 0x000260, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetAttributeCurrentValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000268, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_3) == 0x000278, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000290, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetAttributeCurrentValue_ReturnValue_1) == 0x0002A0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetAttributeCurrentValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_1) == 0x0002A4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0002A8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x0002B0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_1) == 0x0002C0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_1) == 0x0002C8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x000438, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x000439, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00043A, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00043B, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_1) == 0x00043C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x00043D, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_4) == 0x00043E, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_5) == 0x00043F, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000440, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x000441, "Member 'BP_Input_Zhezhi_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000442, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_2) == 0x000443, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_6) == 0x000444, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000448, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000458, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc______ReturnValue) == 0x00045C, "Member 'BP_Input_Zhezhi_C_____::CallFunc______ReturnValue' has a wrong offset!");

// Function BP_Input_Zhezhi.BP_Input_Zhezhi_C.ÞdX(ÀK
// 0x000C (0x000C - 0x0000)
struct BP_Input_Zhezhi_C__dX__K final
{
public:
	bool                                          X_;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc______Int__;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEntityEnable_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Zhezhi_C__dX__K) == 0x000004, "Wrong alignment on BP_Input_Zhezhi_C__dX__K");
static_assert(sizeof(BP_Input_Zhezhi_C__dX__K) == 0x00000C, "Wrong size on BP_Input_Zhezhi_C__dX__K");
static_assert(offsetof(BP_Input_Zhezhi_C__dX__K, X_) == 0x000000, "Member 'BP_Input_Zhezhi_C__dX__K::X_' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C__dX__K, CallFunc______Int__) == 0x000004, "Member 'BP_Input_Zhezhi_C__dX__K::CallFunc______Int__' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C__dX__K, CallFunc_GetEntityEnable_ReturnValue) == 0x000008, "Member 'BP_Input_Zhezhi_C__dX__K::CallFunc_GetEntityEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C__dX__K, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000009, "Member 'BP_Input_Zhezhi_C__dX__K::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Input_Zhezhi.BP_Input_Zhezhi_C.€ý1	
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Input_Zhezhi_C___1___0 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x001C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0030(0x0020)()
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0058(0x0020)()
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0078(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_self_CastInput; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAllMatchingGameplayTags_ReturnValue;   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Zhezhi_C___1__) == 0x000008, "Wrong alignment on BP_Input_Zhezhi_C___1__");
static_assert(sizeof(BP_Input_Zhezhi_C___1__) == 0x0000C0, "Wrong size on BP_Input_Zhezhi_C___1__");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, Time) == 0x000000, "Member 'BP_Input_Zhezhi_C___1__::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, ReturnValue) == 0x000004, "Member 'BP_Input_Zhezhi_C___1__::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc___1___ReturnValue) == 0x00001C, "Member 'BP_Input_Zhezhi_C___1__::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000030, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_CanResponseInput_ReturnValue) == 0x000050, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000058, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, K2Node_MakeStruct_SInputCommand) == 0x000078, "Member 'BP_Input_Zhezhi_C___1__::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008C, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_HasAllMatchingGameplayTags_self_CastInput) == 0x000090, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_HasAllMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_HasAllMatchingGameplayTags_ReturnValue) == 0x0000A0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_HasAllMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000A1, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_IsMovingOnGround_ReturnValue) == 0x0000A2, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanAND_ReturnValue) == 0x0000A3, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue) == 0x0000A4, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0000A8, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0000B8, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function BP_Input_Zhezhi.BP_Input_Zhezhi_C.;û	
// 0x0CE8 (0x0CE8 - 0x0000)
struct BP_Input_Zhezhi_C_Func______17 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x002C(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0040(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x006C(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x0094(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00D0(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0245(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0246(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0247(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x0248(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x025C(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_2;                            // 0x0280(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x02A8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x041D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x041E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x041F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0420(0x0020)()
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0443(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0445(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x0446(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_447[0x1];                                      // 0x0447(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_4;                 // 0x0448(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_3;                            // 0x0470(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_4;                            // 0x0484(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_5;                 // 0x0498(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x04B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_2;                // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2; // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_2;      // 0x04C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_2;               // 0x04D8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_2;          // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x064D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x064E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x064F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_6;                 // 0x0650(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x0668(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3; // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_679[0x3];                                      // 0x0679(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_7;                 // 0x067C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_691[0x7];                                      // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x0698(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_3;                // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_3;        // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AD[0x3];                                      // 0x06AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_3;      // 0x06B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_3;               // 0x06C0(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_3;          // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x0834(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0835(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0836(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0837(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0839(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x083A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_4;        // 0x083B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x083C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x083D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x083E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x083F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4; // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_841[0x3];                                      // 0x0841(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_8;                 // 0x0844(0x0014)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0858(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_869[0x7];                                      // 0x0869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_8;           // 0x0870(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0880(0x0020)()
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_9;                 // 0x08A0(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B4[0x4];                                      // 0x08B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x08B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9[0x7];                                      // 0x08C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_9;           // 0x08D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_5;        // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x08E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_5; // 0x08E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x08E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x08E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8E5[0x3];                                      // 0x08E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_4;                // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x08EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8ED[0x3];                                      // 0x08ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_4;      // 0x08F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_4;          // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0x4];                                      // 0x0904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_4;               // 0x0908(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_4;      // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0A7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x0A7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0A7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0A7D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0A7E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x0A7F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0A80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A91[0x3];                                      // 0x0A91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_10;                // 0x0A94(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_10;          // 0x0AA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_11;                // 0x0AB8(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ACC[0x4];                                      // 0x0ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_11;          // 0x0AD0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_5;                            // 0x0AE0(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_5;                // 0x0AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_5;      // 0x0AF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_5;               // 0x0B08(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_5;          // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_5;      // 0x0C7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0C7D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0C7E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0C7F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x0C81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x0C82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x0C83(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C84[0x4];                                      // 0x0C84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2;  // 0x0C88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x0C98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C99[0x7];                                      // 0x0C99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3;  // 0x0CA0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x0CB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0CB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0CB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0CB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0CB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_18;                 // 0x0CB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0CB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB7[0x1];                                      // 0x0CB7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4;  // 0x0CB8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC9[0x7];                                      // 0x0CC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x0CD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x0CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Zhezhi_C_____) == 0x000008, "Wrong alignment on BP_Input_Zhezhi_C_____");
static_assert(sizeof(BP_Input_Zhezhi_C_____) == 0x000CE8, "Wrong size on BP_Input_Zhezhi_C_____");
static_assert(offsetof(BP_Input_Zhezhi_C_____, Time) == 0x000000, "Member 'BP_Input_Zhezhi_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Zhezhi_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable) == 0x000018, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc______ReturnValue) == 0x00002C, "Member 'BP_Input_Zhezhi_C_____::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand) == 0x000040, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000068, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x00006C, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000090, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_2) == 0x000094, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000A8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue) == 0x0000B8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000C0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x0000D0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000240, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000244, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000245, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000246, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x000247, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_1) == 0x000248, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_3) == 0x00025C, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000270, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_2) == 0x000280, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_1) == 0x000294, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x000298, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_1) == 0x0002A8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_1) == 0x000418, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00041C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00041D, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00041E, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_1) == 0x00041F, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000420, "Member 'BP_Input_Zhezhi_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000440, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x000441, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000442, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue) == 0x000443, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x000444, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x000445, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x000446, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_4) == 0x000448, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000460, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_3) == 0x000470, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_4) == 0x000484, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_5) == 0x000498, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0004B0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_2) == 0x0004C0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2) == 0x0004C4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_2) == 0x0004C8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_2) == 0x0004D8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_2) == 0x000648, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x00064C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00064D, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x00064E, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_2) == 0x00064F, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_6) == 0x000650, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_6) == 0x000668, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3) == 0x000678, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_7) == 0x00067C, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x000690, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_7) == 0x000698, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_3) == 0x0006A8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_3) == 0x0006AC, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_3) == 0x0006B0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_3) == 0x0006C0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_3) == 0x000830, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x000834, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000835, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x000836, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_3) == 0x000837, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000838, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_4) == 0x000839, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_5) == 0x00083A, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_4) == 0x00083B, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_6) == 0x00083C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_2) == 0x00083D, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_7) == 0x00083E, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_8) == 0x00083F, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4) == 0x000840, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_8) == 0x000844, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000858, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000868, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_8) == 0x000870, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000880, "Member 'BP_Input_Zhezhi_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_9) == 0x0008A0, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x0008B8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0008C8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_9) == 0x0008D0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_5) == 0x0008E0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_3) == 0x0008E1, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_5) == 0x0008E2, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_9) == 0x0008E3, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_10) == 0x0008E4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_4) == 0x0008E8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_11) == 0x0008EC, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_4) == 0x0008F0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_4) == 0x000900, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_4) == 0x000908, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_4) == 0x000A78, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_4) == 0x000A79, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000A7A, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x000A7B, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_4) == 0x000A7C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_12) == 0x000A7D, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_13) == 0x000A7E, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_14) == 0x000A7F, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000A80, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000A90, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_10) == 0x000A94, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_10) == 0x000AA8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_11) == 0x000AB8, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_11) == 0x000AD0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_5) == 0x000AE0, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_5) == 0x000AF4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_5) == 0x000AF8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_5) == 0x000B08, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_5) == 0x000C78, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_5) == 0x000C7C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000C7D, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_5) == 0x000C7E, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_5) == 0x000C7F, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x000C80, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_15) == 0x000C81, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_16) == 0x000C82, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_17) == 0x000C83, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x000C88, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x000C98, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x000CA0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x000CB0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000CB1, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x000CB2, "Member 'BP_Input_Zhezhi_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000CB3, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_6) == 0x000CB4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_18) == 0x000CB5, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x000CB6, "Member 'BP_Input_Zhezhi_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_4) == 0x000CB8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x000CC8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x000CD0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x000CE0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");

// Function BP_Input_Zhezhi.BP_Input_Zhezhi_C.€ý1	
// 0x08B0 (0x08B0 - 0x0000)
struct BP_Input_Zhezhi_C___1___1 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc___1___ReturnValue;                        // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0030(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0058(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x006C(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagCount_ReturnValue;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x00B8(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x00F0(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x3];                                      // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x0264(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2; // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x027A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x027B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0280(0x0020)()
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x02A0(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x02B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3; // 0x02CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2CD[0x3];                                      // 0x02CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x02D0(0x0020)()
	struct FSInputCommand                         ___wildcard_Variable_2;                            // 0x02F0(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_3;                            // 0x0304(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_4;                 // 0x0318(0x0014)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTagCount_ReturnValue_1;                // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_5;                 // 0x0334(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4; // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x0370(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x04E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x04E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x04E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x04EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EB[0x1];                                      // 0x04EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_2;                // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4F1[0x7];                                      // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_2;      // 0x04F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_2;          // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_2;               // 0x0510(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x0681(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0682(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0683(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_685[0x3];                                      // 0x0685(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_6;                 // 0x0688(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_3;        // 0x069C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69D[0x3];                                      // 0x069D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x06A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B1[0x3];                                      // 0x06B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_7;                 // 0x06B4(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CA[0x6];                                      // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x06D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_4;        // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x06E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x06E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x06E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x06E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x06E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x06E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E9[0x3];                                      // 0x06E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_3;                // 0x06EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_3;      // 0x06F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_3;               // 0x0700(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_3;          // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x0874(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0875(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0876(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0877(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x087A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_87B[0x5];                                      // 0x087B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0880(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0891(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc__________;                                // 0x0892(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x0893(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc___________1;                              // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc___________2;                              // 0x0895(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_896[0x2];                                      // 0x0896(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x0898(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Zhezhi_C___1__) == 0x000008, "Wrong alignment on BP_Input_Zhezhi_C___1__");
static_assert(sizeof(BP_Input_Zhezhi_C___1__) == 0x0008B0, "Wrong size on BP_Input_Zhezhi_C___1__");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, Time) == 0x000000, "Member 'BP_Input_Zhezhi_C___1__::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, ReturnValue) == 0x000004, "Member 'BP_Input_Zhezhi_C___1__::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc___1___ReturnValue) == 0x000018, "Member 'BP_Input_Zhezhi_C___1__::CallFunc___1___ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x00002C, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, K2Node_MakeStruct_SInputCommand) == 0x000030, "Member 'BP_Input_Zhezhi_C___1__::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, ___wildcard_Variable) == 0x000058, "Member 'BP_Input_Zhezhi_C___1__::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, K2Node_MakeStruct_SInputCommand_1) == 0x00006C, "Member 'BP_Input_Zhezhi_C___1__::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000080, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x000090, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x000091, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetPriority_ReturnValue) == 0x000094, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetTagCount_ReturnValue) == 0x000098, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetTagCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000A0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Add_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetActivePriority_ReturnValue) == 0x0000B4, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, K2Node_MakeStruct_SInputCommand_2) == 0x0000B8, "Member 'BP_Input_Zhezhi_C___1__::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000CC, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000CD, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000D0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0000E0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillInfo_ReturnValue) == 0x0000F0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000260, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, ___wildcard_Variable_1) == 0x000264, "Member 'BP_Input_Zhezhi_C___1__::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Not_PreBool_ReturnValue) == 0x000278, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2) == 0x000279, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x00027A, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue) == 0x00027B, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x00027C, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000280, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, K2Node_MakeStruct_SInputCommand_3) == 0x0002A0, "Member 'BP_Input_Zhezhi_C___1__::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x0002B8, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetActivePriority_ReturnValue_1) == 0x0002C8, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3) == 0x0002CC, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x0002D0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, ___wildcard_Variable_2) == 0x0002F0, "Member 'BP_Input_Zhezhi_C___1__::___wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, ___wildcard_Variable_3) == 0x000304, "Member 'BP_Input_Zhezhi_C___1__::___wildcard_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, K2Node_MakeStruct_SInputCommand_4) == 0x000318, "Member 'BP_Input_Zhezhi_C___1__::K2Node_MakeStruct_SInputCommand_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetTagCount_ReturnValue_1) == 0x00032C, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetTagCount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Add_IntInt_ReturnValue_1) == 0x000330, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, K2Node_MakeStruct_SInputCommand_5) == 0x000334, "Member 'BP_Input_Zhezhi_C___1__::K2Node_MakeStruct_SInputCommand_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4) == 0x000348, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_1) == 0x000349, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Conv_IntToString_ReturnValue_4) == 0x000350, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Conv_IntToString_ReturnValue_5) == 0x000360, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillInfo_ReturnValue_1) == 0x000370, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetPriority_ReturnValue_1) == 0x0004E0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0004E4, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0004E5, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanAND_ReturnValue) == 0x0004E6, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Not_PreBool_ReturnValue_1) == 0x0004E7, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x0004E8, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_2) == 0x0004E9, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_3) == 0x0004EA, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetPriority_ReturnValue_2) == 0x0004EC, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetPriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_4) == 0x0004F0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue_2) == 0x0004F8, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetActivePriority_ReturnValue_2) == 0x000508, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetActivePriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillInfo_ReturnValue_2) == 0x000510, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x000680, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x000681, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000682, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_5) == 0x000683, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Not_PreBool_ReturnValue_2) == 0x000684, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, K2Node_MakeStruct_SInputCommand_6) == 0x000688, "Member 'BP_Input_Zhezhi_C___1__::K2Node_MakeStruct_SInputCommand_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue_3) == 0x00069C, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Conv_IntToString_ReturnValue_6) == 0x0006A0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanAND_ReturnValue_1) == 0x0006B0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, K2Node_MakeStruct_SInputCommand_7) == 0x0006B4, "Member 'BP_Input_Zhezhi_C___1__::K2Node_MakeStruct_SInputCommand_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_6) == 0x0006C8, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_7) == 0x0006C9, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Conv_IntToString_ReturnValue_7) == 0x0006D0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillAcceptInput_ReturnValue_4) == 0x0006E0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillAcceptInput_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanAND_ReturnValue_2) == 0x0006E1, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0006E2, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_8) == 0x0006E3, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_9) == 0x0006E4, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0006E5, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanAND_ReturnValue_3) == 0x0006E6, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_IsMovingOnGround_ReturnValue) == 0x0006E7, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_10) == 0x0006E8, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetPriority_ReturnValue_3) == 0x0006EC, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetPriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillIdWithGroupId_ReturnValue_3) == 0x0006F0, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillIdWithGroupId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetSkillInfo_ReturnValue_3) == 0x000700, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetSkillInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_GetActivePriority_ReturnValue_3) == 0x000870, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_GetActivePriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x000874, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000875, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanAND_ReturnValue_4) == 0x000876, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Not_PreBool_ReturnValue_3) == 0x000877, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x000878, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_11) == 0x000879, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_12) == 0x00087A, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000880, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000890, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_BooleanOR_ReturnValue_13) == 0x000891, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc__________) == 0x000892, "Member 'BP_Input_Zhezhi_C___1__::CallFunc__________' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_CanResponseInput_ReturnValue) == 0x000893, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc___________1) == 0x000894, "Member 'BP_Input_Zhezhi_C___1__::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc___________2) == 0x000895, "Member 'BP_Input_Zhezhi_C___1__::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x000898, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C___1__, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x0008A8, "Member 'BP_Input_Zhezhi_C___1__::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");

// Function BP_Input_Zhezhi.BP_Input_Zhezhi_C.;û	
// 0x11A0 (0x11A0 - 0x0000)
struct BP_Input_Zhezhi_C_Func______18 final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ReturnValue;                                       // 0x0004(0x0014)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         CallFunc______ReturnValue;                         // 0x0018(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable;                              // 0x0030(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue; // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0048(0x0020)()
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand;                   // 0x0068(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_1;        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_1;                            // 0x0090(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_1;                 // 0x00A4(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_2;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTagCount_ReturnValue;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_2;                            // 0x00D0(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ___int_Array_Index_Variable;                       // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue;                  // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue;        // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue;                 // 0x0100(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue;            // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0276(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0277(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_3;        // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_2;                 // 0x0284(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_3;                 // 0x02A8(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_3;                            // 0x02D0(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_1;                // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_1;      // 0x02E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_1;               // 0x02F8(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_1;          // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x046C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x046D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x046E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x046F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1; // 0x0470(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2; // 0x0490(0x0020)()
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_4;                 // 0x04B0(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1; // 0x04C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C5[0x3];                                      // 0x04C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_4;           // 0x04C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_5;                 // 0x04D8(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2; // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_5;           // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         ___int_Variable;                                   // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_4;                            // 0x0504(0x0014)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_2;                // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3; // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51D[0x3];                                      // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_2;      // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActivePriority_ReturnValue_2;          // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_2;               // 0x0538(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_2;      // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x06AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x06AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x06AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x06AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6AE[0x2];                                      // 0x06AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_6;                 // 0x06B0(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x06C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C5[0x3];                                      // 0x06C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_6;           // 0x06C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D9[0x3];                                      // 0x06D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_7;                 // 0x06DC(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_7;           // 0x06F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3; // 0x0700(0x0020)()
	TArray<struct FGameplayTag>                   CallFunc_BreakGameplayTagContainer_GameplayTags;   // 0x0720(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0730(0x000C)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPriority_ReturnValue_3;                // 0x073C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_3;      // 0x0740(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_3;               // 0x0750(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_3;          // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_3;      // 0x08C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x08C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x08C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x08C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_3;         // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8C9[0x3];                                      // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x08D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x08D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_4;        // 0x08D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_True_if_break_was_hit_Variable;            // 0x08D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x08D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x08D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x08D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x08DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8DB[0x1];                                      // 0x08DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_8;                 // 0x08DC(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_8;           // 0x08F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_9;                 // 0x0900(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_914[0x4];                                      // 0x0914(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_9;           // 0x0918(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4; // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         ___wildcard_Variable_5;                            // 0x092C(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_5; // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_942[0x2];                                      // 0x0942(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_4;                // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_5;        // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_949[0x7];                                      // 0x0949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_4;      // 0x0950(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_4;               // 0x0960(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_4;          // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_4;      // 0x0AD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0AD5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_4;         // 0x0AD6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x0AD7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_10;                // 0x0AD8(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AEC[0x4];                                      // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_10;          // 0x0AF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_6; // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_6;        // 0x0B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B02[0x2];                                      // 0x0B02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_11;                // 0x0B04(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_6;                            // 0x0B18(0x0014)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2C[0x4];                                      // 0x0B2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_11;          // 0x0B30(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_7;        // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B41[0x3];                                      // 0x0B41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_5;                // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B49[0x7];                                      // 0x0B49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_5;      // 0x0B50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B61[0x3];                                      // 0x0B61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActivePriority_ReturnValue_5;          // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_5;      // 0x0B69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0B6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_5;         // 0x0B6B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B6C[0x4];                                      // 0x0B6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_5;               // 0x0B70(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0CE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x0CE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0CE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x0CE3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x0CE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0CE5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0CE6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0CE7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         ___int_Variable_1;                                 // 0x0CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0CEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CED[0x3];                                      // 0x0CED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_12;                // 0x0CF0(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x0D04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D05[0x3];                                      // 0x0D05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_12;          // 0x0D08(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_13;          // 0x0D18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4; // 0x0D28(0x0020)()
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_13;                // 0x0D48(0x0014)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_7; // 0x0D5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x0D5D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5E[0x2];                                      // 0x0D5E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_6;                // 0x0D60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D64[0x4];                                      // 0x0D64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_6;      // 0x0D68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_6;               // 0x0D78(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_GetActivePriority_ReturnValue_6;          // 0x0EE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_6;      // 0x0EEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0EED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0EEE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0EEF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_6;         // 0x0EF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x0EF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_18;                 // 0x0EF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EF3[0x5];                                      // 0x0EF3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0EF8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_19;                 // 0x0F09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F0A[0x2];                                      // 0x0F0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_14;                // 0x0F0C(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_14;          // 0x0F20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSInputCommand                         ___wildcard_Variable_7;                            // 0x0F30(0x0014)(NoDestructor, HasGetValueTypeHash)
	struct FSInputCommand                         K2Node_MakeStruct_SInputCommand_15;                // 0x0F44(0x0014)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_15;          // 0x0F58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSkillAcceptInput_ReturnValue_8;        // 0x0F68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F69[0x3];                                      // 0x0F69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPriority_ReturnValue_7;                // 0x0F6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F71[0x7];                                      // 0x0F71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSkillIdWithGroupId_ReturnValue_7;      // 0x0F78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_20;                 // 0x0F88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F89[0x3];                                      // 0x0F89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActivePriority_ReturnValue_7;          // 0x0F8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_21;                 // 0x0F90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_7;      // 0x0F91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0F92(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_7;         // 0x0F93(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F94[0x4];                                      // 0x0F94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSSkillInfo                            CallFunc_GetSkillInfo_ReturnValue_7;               // 0x0F98(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_22;                 // 0x1108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_23;                 // 0x1109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x110A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x110B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_24;                 // 0x110C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_110D[0x3];                                     // 0x110D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x1110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x1120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1121[0x7];                                     // 0x1121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1; // 0x1128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1; // 0x1138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanResponseInput_ReturnValue;             // 0x1139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_113A[0x6];                                     // 0x113A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x1140(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x1150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1154[0x4];                                     // 0x1154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2; // 0x1158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2; // 0x1168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x1169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_116A[0x6];                                     // 0x116A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3; // 0x1170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3; // 0x1180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1181[0x7];                                     // 0x1181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x1188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x1198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Input_Zhezhi_C_____) == 0x000008, "Wrong alignment on BP_Input_Zhezhi_C_____");
static_assert(sizeof(BP_Input_Zhezhi_C_____) == 0x0011A0, "Wrong size on BP_Input_Zhezhi_C_____");
static_assert(offsetof(BP_Input_Zhezhi_C_____, Time) == 0x000000, "Member 'BP_Input_Zhezhi_C_____::Time' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ReturnValue) == 0x000004, "Member 'BP_Input_Zhezhi_C_____::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc______ReturnValue) == 0x000018, "Member 'BP_Input_Zhezhi_C_____::CallFunc______ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue) == 0x00002C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable) == 0x000030, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue) == 0x000044, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000048, "Member 'BP_Input_Zhezhi_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand) == 0x000068, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_1) == 0x00007C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue) == 0x000080, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_1) == 0x000090, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_1) == 0x0000A4, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000B8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_2) == 0x0000C8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetTagCount_ReturnValue) == 0x0000CC, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetTagCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_2) == 0x0000D0, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Less_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___int_Array_Index_Variable) == 0x0000E8, "Member 'BP_Input_Zhezhi_C_____::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue) == 0x0000EC, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue) == 0x0000F0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue) == 0x000100, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue) == 0x000270, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x000274, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000275, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000276, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue) == 0x000277, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___int_Loop_Counter_Variable) == 0x000278, "Member 'BP_Input_Zhezhi_C_____::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Add_IntInt_ReturnValue) == 0x00027C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_3) == 0x000280, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_2) == 0x000284, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000298, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_3) == 0x0002A8, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_3) == 0x0002C0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_3) == 0x0002D0, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_1) == 0x0002E4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_1) == 0x0002E8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_1) == 0x0002F8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_1) == 0x000468, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x00046C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00046D, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x00046E, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_1) == 0x00046F, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1) == 0x000470, "Member 'BP_Input_Zhezhi_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2) == 0x000490, "Member 'BP_Input_Zhezhi_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_4) == 0x0004B0, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1) == 0x0004C4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_4) == 0x0004C8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_5) == 0x0004D8, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2) == 0x0004EC, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_5) == 0x0004F0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___int_Variable) == 0x000500, "Member 'BP_Input_Zhezhi_C_____::___int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_4) == 0x000504, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_2) == 0x000518, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3) == 0x00051C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_2) == 0x000520, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue) == 0x000530, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_2) == 0x000534, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_2) == 0x000538, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_2) == 0x0006A8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue) == 0x0006A9, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0006AA, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0006AB, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_2) == 0x0006AC, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_1) == 0x0006AD, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_6) == 0x0006B0, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_2) == 0x0006C4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_6) == 0x0006C8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_3) == 0x0006D8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_7) == 0x0006DC, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_7) == 0x0006F0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3) == 0x000700, "Member 'BP_Input_Zhezhi_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BreakGameplayTagContainer_GameplayTags) == 0x000720, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BreakGameplayTagContainer_GameplayTags' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Array_Get_Item) == 0x000730, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_3) == 0x00073C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_3) == 0x000740, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_3) == 0x000750, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_3) == 0x0008C0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_3) == 0x0008C4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0008C5, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_1) == 0x0008C6, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_3) == 0x0008C7, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_3) == 0x0008C8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Array_Length_ReturnValue) == 0x0008CC, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_4) == 0x0008D0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Less_IntInt_ReturnValue_1) == 0x0008D1, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_5) == 0x0008D2, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_6) == 0x0008D3, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_4) == 0x0008D4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___bool_True_if_break_was_hit_Variable) == 0x0008D5, "Member 'BP_Input_Zhezhi_C_____::___bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_2) == 0x0008D6, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_7) == 0x0008D7, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_4) == 0x0008D8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_8) == 0x0008D9, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_3) == 0x0008DA, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_8) == 0x0008DC, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_8) == 0x0008F0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_9) == 0x000900, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_9) == 0x000918, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4) == 0x000928, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_5) == 0x00092C, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_5) == 0x000940, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_9) == 0x000941, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_4) == 0x000944, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_5) == 0x000948, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_4) == 0x000950, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_4) == 0x000960, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_4) == 0x000AD0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_4) == 0x000AD4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000AD5, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_4) == 0x000AD6, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_5) == 0x000AD7, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_10) == 0x000AD8, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_10) == 0x000AF0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_6) == 0x000B00, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_6) == 0x000B01, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_11) == 0x000B04, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_6) == 0x000B18, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_11) == 0x000B30, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_7) == 0x000B40, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_5) == 0x000B44, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_4) == 0x000B48, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_5) == 0x000B50, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_10) == 0x000B60, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_5) == 0x000B64, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_11) == 0x000B68, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_5) == 0x000B69, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_5) == 0x000B6A, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_5) == 0x000B6B, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_5) == 0x000B70, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_12) == 0x000CE0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_13) == 0x000CE1, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000CE2, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_6) == 0x000CE3, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_14) == 0x000CE4, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000CE5, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_IsMovingOnGround_ReturnValue) == 0x000CE6, "Member 'BP_Input_Zhezhi_C_____::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000CE7, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___int_Variable_1) == 0x000CE8, "Member 'BP_Input_Zhezhi_C_____::___int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_6) == 0x000CEC, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_12) == 0x000CF0, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_12' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_15) == 0x000D04, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_12) == 0x000D08, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_13) == 0x000D18, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4) == 0x000D28, "Member 'BP_Input_Zhezhi_C_____::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_13) == 0x000D48, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_13' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_7) == 0x000D5C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetCommonSkillCanBeInterrupt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_16) == 0x000D5D, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_6) == 0x000D60, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_6) == 0x000D68, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_6) == 0x000D78, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_6) == 0x000EE8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_6) == 0x000EEC, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000EED, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_7) == 0x000EEE, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_7) == 0x000EEF, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_6) == 0x000EF0, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_17) == 0x000EF1, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_18) == 0x000EF2, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000EF8, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000F08, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_19) == 0x000F09, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_14) == 0x000F0C, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_14' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_14) == 0x000F20, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, ___wildcard_Variable_7) == 0x000F30, "Member 'BP_Input_Zhezhi_C_____::___wildcard_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeStruct_SInputCommand_15) == 0x000F44, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeStruct_SInputCommand_15' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Conv_IntToString_ReturnValue_15) == 0x000F58, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Conv_IntToString_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillAcceptInput_ReturnValue_8) == 0x000F68, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillAcceptInput_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetPriority_ReturnValue_7) == 0x000F6C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetPriority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_8) == 0x000F70, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillIdWithGroupId_ReturnValue_7) == 0x000F78, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillIdWithGroupId_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_20) == 0x000F88, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetActivePriority_ReturnValue_7) == 0x000F8C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetActivePriority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_21) == 0x000F90, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_FloatFloat_ReturnValue_7) == 0x000F91, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanAND_ReturnValue_9) == 0x000F92, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Greater_FloatFloat_ReturnValue_7) == 0x000F93, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Greater_FloatFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_GetSkillInfo_ReturnValue_7) == 0x000F98, "Member 'BP_Input_Zhezhi_C_____::CallFunc_GetSkillInfo_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_22) == 0x001108, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_23) == 0x001109, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x00110A, "Member 'BP_Input_Zhezhi_C_____::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Not_PreBool_ReturnValue_8) == 0x00110B, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_BooleanOR_ReturnValue_24) == 0x00110C, "Member 'BP_Input_Zhezhi_C_____::CallFunc_BooleanOR_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x001110, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x001120, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1) == 0x001128, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1) == 0x001138, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_CanResponseInput_ReturnValue) == 0x001139, "Member 'BP_Input_Zhezhi_C_____::CallFunc_CanResponseInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, K2Node_MakeArray_Array) == 0x001140, "Member 'BP_Input_Zhezhi_C_____::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Array_Get_Item_1) == 0x001150, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2) == 0x001158, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2) == 0x001168, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_Array_IsValidIndex_ReturnValue) == 0x001169, "Member 'BP_Input_Zhezhi_C_____::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3) == 0x001170, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3) == 0x001180, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasAnyMatchingGameplayTags_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x001188, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_Input_Zhezhi_C_____, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x001198, "Member 'BP_Input_Zhezhi_C_____::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");

}

