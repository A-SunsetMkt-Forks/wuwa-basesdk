#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_VolumeCloudTrail

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_VolumeCloudTrail.BPC_VolumeCloudTrail_C
// 0x00F0 (0x0310 - 0x0220)
class UBPC_VolumeCloudTrail_C final : public USceneComponent
{
public:
	uint8                                         Pad_218[0x8];                                      // 0x0218(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                LastMotionOffset;                                  // 0x0228(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               RTMaterial;                                        // 0x0238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 BindActor;                                         // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               RTMaterial_Pre;                                    // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          LastPostion;                                       // 0x0258(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFadeWhenStop;                                     // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bFirstTick;                                        // 0x0271(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CloudMask;                                         // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDrawBound;                                        // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BoundSize;                                         // 0x0284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               lowCloudMaterial;                                  // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               bottomMaterial;                                    // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          targetPosition;                                    // 0x0298(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         radialSize;                                        // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         radialSize_boat;                                   // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoundSize_boat;                                    // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoundSize_man;                                     // 0x02BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinHeight;                                         // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BoatOffset;                                        // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          LastPostion_raw;                                   // 0x02D0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          targetPosition_raw;                                // 0x02E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeMinSpeed;                                      // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StaticMinSpeed;                                    // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BPC_VolumeCloudTrail(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void TrailTick();
	bool Is_on_Boat();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_VolumeCloudTrail_C">();
	}
	static class UBPC_VolumeCloudTrail_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPC_VolumeCloudTrail_C>();
	}
};
static_assert(alignof(UBPC_VolumeCloudTrail_C) == 0x000010, "Wrong alignment on UBPC_VolumeCloudTrail_C");
static_assert(sizeof(UBPC_VolumeCloudTrail_C) == 0x000310, "Wrong size on UBPC_VolumeCloudTrail_C");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, UberGraphFrame) == 0x000220, "Member 'UBPC_VolumeCloudTrail_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, LastMotionOffset) == 0x000228, "Member 'UBPC_VolumeCloudTrail_C::LastMotionOffset' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, RTMaterial) == 0x000238, "Member 'UBPC_VolumeCloudTrail_C::RTMaterial' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, BindActor) == 0x000240, "Member 'UBPC_VolumeCloudTrail_C::BindActor' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, Value) == 0x000248, "Member 'UBPC_VolumeCloudTrail_C::Value' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, RTMaterial_Pre) == 0x000250, "Member 'UBPC_VolumeCloudTrail_C::RTMaterial_Pre' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, LastPostion) == 0x000258, "Member 'UBPC_VolumeCloudTrail_C::LastPostion' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, bFadeWhenStop) == 0x000270, "Member 'UBPC_VolumeCloudTrail_C::bFadeWhenStop' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, bFirstTick) == 0x000271, "Member 'UBPC_VolumeCloudTrail_C::bFirstTick' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, CloudMask) == 0x000278, "Member 'UBPC_VolumeCloudTrail_C::CloudMask' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, bDrawBound) == 0x000280, "Member 'UBPC_VolumeCloudTrail_C::bDrawBound' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, BoundSize) == 0x000284, "Member 'UBPC_VolumeCloudTrail_C::BoundSize' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, lowCloudMaterial) == 0x000288, "Member 'UBPC_VolumeCloudTrail_C::lowCloudMaterial' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, bottomMaterial) == 0x000290, "Member 'UBPC_VolumeCloudTrail_C::bottomMaterial' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, targetPosition) == 0x000298, "Member 'UBPC_VolumeCloudTrail_C::targetPosition' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, radialSize) == 0x0002B0, "Member 'UBPC_VolumeCloudTrail_C::radialSize' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, radialSize_boat) == 0x0002B4, "Member 'UBPC_VolumeCloudTrail_C::radialSize_boat' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, BoundSize_boat) == 0x0002B8, "Member 'UBPC_VolumeCloudTrail_C::BoundSize_boat' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, BoundSize_man) == 0x0002BC, "Member 'UBPC_VolumeCloudTrail_C::BoundSize_man' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, MinHeight) == 0x0002C0, "Member 'UBPC_VolumeCloudTrail_C::MinHeight' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, BoatOffset) == 0x0002C8, "Member 'UBPC_VolumeCloudTrail_C::BoatOffset' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, LastPostion_raw) == 0x0002D0, "Member 'UBPC_VolumeCloudTrail_C::LastPostion_raw' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, targetPosition_raw) == 0x0002E8, "Member 'UBPC_VolumeCloudTrail_C::targetPosition_raw' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, FadeMinSpeed) == 0x000300, "Member 'UBPC_VolumeCloudTrail_C::FadeMinSpeed' has a wrong offset!");
static_assert(offsetof(UBPC_VolumeCloudTrail_C, StaticMinSpeed) == 0x000304, "Member 'UBPC_VolumeCloudTrail_C::StaticMinSpeed' has a wrong offset!");

}

