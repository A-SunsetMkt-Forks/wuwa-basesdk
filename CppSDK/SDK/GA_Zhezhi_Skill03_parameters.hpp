#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Zhezhi_Skill03

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Zhezhi_Skill03.GA_Zhezhi_Skill03_C.ExecuteUbergraph_GA_Zhezhi_Skill03
// 0x0380 (0x0380 - 0x0000)
struct GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0008(0x00B8)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0028)(ZeroConstructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E8(0x0028)(ZeroConstructor)
	class FString                                 CallFunc_____GA______________;                     // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0120(0x0028)(ZeroConstructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0148(0x0028)(ZeroConstructor)
	class UAnimMontage*                           CallFunc__________;                                // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x01A0(0x0028)(ZeroConstructor)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     K2Node_DynamicCast_AsTs_Base_Character;            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc___________1;                              // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________2;                              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc______________;                            // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F2[0x6];                                      // 0x01F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________3;                              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_______________1;                          // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_______________2;                          // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0208(0x0028)(ZeroConstructor)
	class ATsBaseCharacter_C*                     CallFunc___________4;                              // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________5;                              // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________6;                              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_______________3;                          // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc__________SpeedRatio;                      // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWait*        CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue; // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     ___struct_Variable;                                // 0x0280(0x00B8)()
	class ATsBaseCharacter_C*                     CallFunc___________7;                              // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________8;                              // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Zhezhi_C*                           K2Node_DynamicCast_AsBP_Zhezhi;                    // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_351[0x7];                                      // 0x0351(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________9;                              // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________10;                             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_____ID___ID;                              // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_____ID___ID_1;                            // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03");
static_assert(sizeof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03) == 0x000380, "Wrong size on GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, EntryPoint) == 0x000000, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_CustomEvent_Payload) == 0x000008, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E8, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_____GA______________) == 0x000110, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_____GA______________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_CreateDelegate_OutputDelegate_2) == 0x000120, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_CreateDelegate_OutputDelegate_3) == 0x000148, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc__________) == 0x000170, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000178, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_GetDisplayName_ReturnValue) == 0x000180, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_GetObjectClass_ReturnValue) == 0x000190, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000198, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001A0, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x0001C8, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_DynamicCast_AsTs_Base_Character) == 0x0001D0, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_DynamicCast_AsTs_Base_Character' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_DynamicCast_bSuccess) == 0x0001D8, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc___________1) == 0x0001E0, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc___________2) == 0x0001E8, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_IsValid_ReturnValue) == 0x0001F0, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc______________) == 0x0001F1, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc______________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc___________3) == 0x0001F8, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc___________3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_______________1) == 0x000200, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_______________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_______________2) == 0x000204, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_______________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_CreateDelegate_OutputDelegate_5) == 0x000208, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc___________4) == 0x000230, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc___________4' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc___________5) == 0x000238, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc___________5' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000240, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_Conv_NameToString_ReturnValue) == 0x000248, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_IsValid_ReturnValue_1) == 0x000258, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc___________6) == 0x000260, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc___________6' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_______________3) == 0x000268, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_______________3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc__________SpeedRatio) == 0x00026C, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc__________SpeedRatio' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue) == 0x000270, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_IsValid_ReturnValue_2) == 0x000278, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, ___struct_Variable) == 0x000280, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::___struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc___________7) == 0x000338, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc___________7' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc___________8) == 0x000340, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc___________8' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_DynamicCast_AsBP_Zhezhi) == 0x000348, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_DynamicCast_AsBP_Zhezhi' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, K2Node_DynamicCast_bSuccess_1) == 0x000350, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc___________9) == 0x000358, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc___________9' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc___________10) == 0x000360, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc___________10' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_____ID___ID) == 0x000368, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_____ID___ID' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_____ID___ID_1) == 0x00036C, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_____ID___ID_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03, CallFunc_Conv_IntToString_ReturnValue) == 0x000370, "Member 'GA_Zhezhi_Skill03_C_ExecuteUbergraph_GA_Zhezhi_Skill03::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");

// Function GA_Zhezhi_Skill03.GA_Zhezhi_Skill03_C.EventReceived_18B59F5945020DB23C42FD88711A9140
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Zhezhi_Skill03_C_EventReceived_18B59F5945020DB23C42FD88711A9140 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B8)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Zhezhi_Skill03_C_EventReceived_18B59F5945020DB23C42FD88711A9140) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill03_C_EventReceived_18B59F5945020DB23C42FD88711A9140");
static_assert(sizeof(GA_Zhezhi_Skill03_C_EventReceived_18B59F5945020DB23C42FD88711A9140) == 0x0000B8, "Wrong size on GA_Zhezhi_Skill03_C_EventReceived_18B59F5945020DB23C42FD88711A9140");
static_assert(offsetof(GA_Zhezhi_Skill03_C_EventReceived_18B59F5945020DB23C42FD88711A9140, Payload) == 0x000000, "Member 'GA_Zhezhi_Skill03_C_EventReceived_18B59F5945020DB23C42FD88711A9140::Payload' has a wrong offset!");

// Function GA_Zhezhi_Skill03.GA_Zhezhi_Skill03_C.筛选飞鹤实体
// 0x0098 (0x0098 - 0x0000)
struct GA_Zhezhi_Skill03_C_筛选飞鹤实体 final
{
public:
	class ATsBaseCharacter_C*                     对象;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          是否找到对象;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         伴生物序列号;                                      // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 IndexArray;                                        // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     TmpTarget;                                         // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ZhezhiPos;                                         // 0x0030(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________1;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc______Int__;                               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCustomEntityId_ReturnValue;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc_____ID_______;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_____ID___________;                        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________2;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCustomEntityId_ReturnValue_1;          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________3;                              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCustomEntityId_ReturnValue_2;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Zhezhi_Skill03_C_筛选飞鹤实体) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill03_C_筛选飞鹤实体");
static_assert(sizeof(GA_Zhezhi_Skill03_C_筛选飞鹤实体) == 0x000098, "Wrong size on GA_Zhezhi_Skill03_C_筛选飞鹤实体");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, 对象) == 0x000000, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::对象' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, 是否找到对象) == 0x000008, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::是否找到对象' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, 伴生物序列号) == 0x00000C, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::伴生物序列号' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, IndexArray) == 0x000010, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::IndexArray' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, Index_0) == 0x000020, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::Index_0' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, TmpTarget) == 0x000028, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::TmpTarget' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, ZhezhiPos) == 0x000030, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::ZhezhiPos' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, Length) == 0x00003C, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::Length' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc__________) == 0x000040, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc___________1) == 0x000048, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc______Int__) == 0x000050, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc______Int__' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc_Array_Find_ReturnValue) == 0x000054, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc_GetCustomEntityId_ReturnValue) == 0x000058, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc_GetCustomEntityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc_____ID_______) == 0x000060, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc_____ID_______' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc_____ID___________) == 0x000068, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc_____ID___________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc___________2) == 0x000070, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc_GetCustomEntityId_ReturnValue_1) == 0x000078, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc_GetCustomEntityId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc___________3) == 0x000080, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc___________3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc_Array_Add_ReturnValue_1) == 0x000088, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc_GetCustomEntityId_ReturnValue_2) == 0x00008C, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc_GetCustomEntityId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_筛选飞鹤实体, CallFunc_Array_Add_ReturnValue_2) == 0x000090, "Member 'GA_Zhezhi_Skill03_C_筛选飞鹤实体::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");

// Function GA_Zhezhi_Skill03.GA_Zhezhi_Skill03_C.设置子弹对象
// 0x0040 (0x0040 - 0x0000)
struct GA_Zhezhi_Skill03_C_设置子弹对象 final
{
public:
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_____ID___ID;                              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_____ID___ID_1;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCustomEntityId_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCustomEntityId_ReturnValue_1;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________2;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_____ID___ID_2;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________3;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCustomEntityId_ReturnValue_2;          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Zhezhi_Skill03_C_设置子弹对象) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill03_C_设置子弹对象");
static_assert(sizeof(GA_Zhezhi_Skill03_C_设置子弹对象) == 0x000040, "Wrong size on GA_Zhezhi_Skill03_C_设置子弹对象");
static_assert(offsetof(GA_Zhezhi_Skill03_C_设置子弹对象, CallFunc__________) == 0x000000, "Member 'GA_Zhezhi_Skill03_C_设置子弹对象::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_设置子弹对象, CallFunc___________1) == 0x000008, "Member 'GA_Zhezhi_Skill03_C_设置子弹对象::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_设置子弹对象, CallFunc_____ID___ID) == 0x000010, "Member 'GA_Zhezhi_Skill03_C_设置子弹对象::CallFunc_____ID___ID' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_设置子弹对象, CallFunc_____ID___ID_1) == 0x000014, "Member 'GA_Zhezhi_Skill03_C_设置子弹对象::CallFunc_____ID___ID_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_设置子弹对象, CallFunc_GetCustomEntityId_ReturnValue) == 0x000018, "Member 'GA_Zhezhi_Skill03_C_设置子弹对象::CallFunc_GetCustomEntityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_设置子弹对象, CallFunc_GetCustomEntityId_ReturnValue_1) == 0x00001C, "Member 'GA_Zhezhi_Skill03_C_设置子弹对象::CallFunc_GetCustomEntityId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_设置子弹对象, CallFunc___________2) == 0x000020, "Member 'GA_Zhezhi_Skill03_C_设置子弹对象::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_设置子弹对象, CallFunc_____ID___ID_2) == 0x000028, "Member 'GA_Zhezhi_Skill03_C_设置子弹对象::CallFunc_____ID___ID_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_设置子弹对象, CallFunc___________3) == 0x000030, "Member 'GA_Zhezhi_Skill03_C_设置子弹对象::CallFunc___________3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_设置子弹对象, CallFunc_GetCustomEntityId_ReturnValue_2) == 0x000038, "Member 'GA_Zhezhi_Skill03_C_设置子弹对象::CallFunc_GetCustomEntityId_ReturnValue_2' has a wrong offset!");

// Function GA_Zhezhi_Skill03.GA_Zhezhi_Skill03_C.镜头处理
// 0x0090 (0x0090 - 0x0000)
struct GA_Zhezhi_Skill03_C_镜头处理 final
{
public:
	class UBP_QTE_Camera_C*                       ApplyCamera;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_QTE_Camera_C*                       QTECamera_Skill05;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_QTE_Camera_C*                       QTECamera_Skill04_L;                               // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_QTE_Camera_C*                       QTECamera_Skill03_L;                               // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ___struct_Variable;                                // 0x0020(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ___struct_Variable_1;                              // 0x002C(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc____________;                              // 0x0038(0x0010)(ReferenceParm)
	TArray<struct FGameplayTag>                   CallFunc_____________1;                            // 0x0048(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_____________2;                            // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ___struct_Variable_2;                              // 0x0074(0x000C)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Zhezhi_Skill03_C_镜头处理) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill03_C_镜头处理");
static_assert(sizeof(GA_Zhezhi_Skill03_C_镜头处理) == 0x000090, "Wrong size on GA_Zhezhi_Skill03_C_镜头处理");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, ApplyCamera) == 0x000000, "Member 'GA_Zhezhi_Skill03_C_镜头处理::ApplyCamera' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, QTECamera_Skill05) == 0x000008, "Member 'GA_Zhezhi_Skill03_C_镜头处理::QTECamera_Skill05' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, QTECamera_Skill04_L) == 0x000010, "Member 'GA_Zhezhi_Skill03_C_镜头处理::QTECamera_Skill04_L' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, QTECamera_Skill03_L) == 0x000018, "Member 'GA_Zhezhi_Skill03_C_镜头处理::QTECamera_Skill03_L' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, ___struct_Variable) == 0x000020, "Member 'GA_Zhezhi_Skill03_C_镜头处理::___struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, ___struct_Variable_1) == 0x00002C, "Member 'GA_Zhezhi_Skill03_C_镜头处理::___struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, CallFunc____________) == 0x000038, "Member 'GA_Zhezhi_Skill03_C_镜头处理::CallFunc____________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, CallFunc_____________1) == 0x000048, "Member 'GA_Zhezhi_Skill03_C_镜头处理::CallFunc_____________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, CallFunc_Array_Contains_ReturnValue) == 0x000058, "Member 'GA_Zhezhi_Skill03_C_镜头处理::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, CallFunc_____________2) == 0x000060, "Member 'GA_Zhezhi_Skill03_C_镜头处理::CallFunc_____________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, CallFunc_Array_Contains_ReturnValue_1) == 0x000070, "Member 'GA_Zhezhi_Skill03_C_镜头处理::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, ___struct_Variable_2) == 0x000074, "Member 'GA_Zhezhi_Skill03_C_镜头处理::___struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, CallFunc_Array_Contains_ReturnValue_2) == 0x000080, "Member 'GA_Zhezhi_Skill03_C_镜头处理::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_镜头处理, CallFunc__________) == 0x000088, "Member 'GA_Zhezhi_Skill03_C_镜头处理::CallFunc__________' has a wrong offset!");

// Function GA_Zhezhi_Skill03.GA_Zhezhi_Skill03_C.飞行特效处理
// 0x0210 (0x0210 - 0x0000)
struct GA_Zhezhi_Skill03_C_飞行特效处理 final
{
public:
	struct FVectorDouble                          ZhezhiLoc;                                         // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          HeLoc;                                             // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          SkillTargetLoc;                                    // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Subtract_VectorVector_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Subtract_VectorVector_ReturnValue_1;    // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Normal_ReturnValue;                     // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_D_VSize_ReturnValue;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_DoubleToFloat_ReturnValue;           // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_D_FindLookAtRotation_ReturnValue;         // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_Subtract_VectorVector_ReturnValue_2;    // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_Normal_ReturnValue_1;                   // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue_1;  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc____________;                              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Quat_FindBetween_ReturnValue;             // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_145[0x3];                                      // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       CallFunc_MakeTransformDouble_ReturnValue;          // 0x0170(0x0040)(IsPlainOldData, NoDestructor)
	class ATsBaseCharacter_C*                     CallFunc___________1;                              // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_2;      // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________2;                              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_SpawnEffect_ReturnValue;                  // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Zhezhi_Skill03_C_飞行特效处理) == 0x000010, "Wrong alignment on GA_Zhezhi_Skill03_C_飞行特效处理");
static_assert(sizeof(GA_Zhezhi_Skill03_C_飞行特效处理) == 0x000210, "Wrong size on GA_Zhezhi_Skill03_C_飞行特效处理");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, ZhezhiLoc) == 0x000000, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::ZhezhiLoc' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, HeLoc) == 0x000018, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::HeLoc' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, SkillTargetLoc) == 0x000030, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::SkillTargetLoc' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_D_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_D_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_D_Subtract_VectorVector_ReturnValue_1) == 0x000060, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_D_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_D_Normal_ReturnValue) == 0x000078, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_D_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_D_VSize_ReturnValue) == 0x000090, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_D_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x000098, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_Conv_DoubleToFloat_ReturnValue) == 0x0000A4, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_Conv_DoubleToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_D_FindLookAtRotation_ReturnValue) == 0x0000A8, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_D_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B4, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_BreakRotator_Roll) == 0x0000B8, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_BreakRotator_Pitch) == 0x0000BC, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_BreakRotator_Yaw) == 0x0000C0, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C4, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_D_Subtract_VectorVector_ReturnValue_2) == 0x0000C8, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_D_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_MakeRotator_ReturnValue) == 0x0000E0, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_D_Normal_ReturnValue_1) == 0x0000F0, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_D_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc__________) == 0x000108, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_Conv_VectorDoubleToVector_ReturnValue_1) == 0x000110, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_Conv_VectorDoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc____________) == 0x000120, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc____________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_Quat_FindBetween_ReturnValue) == 0x000128, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_Quat_FindBetween_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_IsValid_ReturnValue) == 0x000134, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_BreakRotator_Roll_1) == 0x000138, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_BreakRotator_Pitch_1) == 0x00013C, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_BreakRotator_Yaw_1) == 0x000140, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000144, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000148, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_SelectFloat_ReturnValue) == 0x000160, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_MakeVector_ReturnValue) == 0x000164, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_MakeTransformDouble_ReturnValue) == 0x000170, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_MakeTransformDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc___________1) == 0x0001B0, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x0001B8, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_D_K2_GetActorLocation_ReturnValue_2) == 0x0001D0, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_D_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc___________2) == 0x0001E8, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_GetPathName_ReturnValue) == 0x0001F0, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞行特效处理, CallFunc_SpawnEffect_ReturnValue) == 0x000200, "Member 'GA_Zhezhi_Skill03_C_飞行特效处理::CallFunc_SpawnEffect_ReturnValue' has a wrong offset!");

// Function GA_Zhezhi_Skill03.GA_Zhezhi_Skill03_C.飞鹤触发次数处理
// 0x0078 (0x0078 - 0x0000)
struct GA_Zhezhi_Skill03_C_飞鹤触发次数处理 final
{
public:
	int32                                         Selection;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc__________;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________1;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________2;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_____ID___ID;                              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc______________;                            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATsBaseCharacter_C*                     CallFunc___________3;                              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_____ID___ID_1;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ATsBaseCharacter_C*                     CallFunc___________4;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_____ID___ID_2;                            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理) == 0x000008, "Wrong alignment on GA_Zhezhi_Skill03_C_飞鹤触发次数处理");
static_assert(sizeof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理) == 0x000078, "Wrong size on GA_Zhezhi_Skill03_C_飞鹤触发次数处理");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, Selection) == 0x000000, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::Selection' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, K2Node_SwitchInteger_CmpSuccess) == 0x000004, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc__________) == 0x000008, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc__________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc___________1) == 0x000020, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc___________1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc___________2) == 0x000028, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc___________2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc_____ID___ID) == 0x000030, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc_____ID___ID' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc______________) == 0x000034, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc______________' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc___________3) == 0x000038, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc___________3' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000040, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc_____ID___ID_1) == 0x000050, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc_____ID___ID_1' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000058, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc___________4) == 0x000068, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc___________4' has a wrong offset!");
static_assert(offsetof(GA_Zhezhi_Skill03_C_飞鹤触发次数处理, CallFunc_____ID___ID_2) == 0x000070, "Member 'GA_Zhezhi_Skill03_C_飞鹤触发次数处理::CallFunc_____ID___ID_2' has a wrong offset!");

}

