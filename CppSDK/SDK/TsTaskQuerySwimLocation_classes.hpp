#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TsTaskQuerySwimLocation

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TsTaskAbortImmediatelyBase_classes.hpp"


namespace SDK
{

// TypeScriptGeneratedClass TsTaskQuerySwimLocation.TsTaskQuerySwimLocation_C
// 0x0018 (0x00D0 - 0x00B8)
class UTsTaskQuerySwimLocation_C final : public UTsTaskAbortImmediatelyBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_TsTaskQuerySwimLocation_C;          // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Angle;                                             // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         InnerDiameter;                                     // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         OuterDiameter;                                     // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          DebugMode;                                         // 0x00CC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper)

public:
	void ExecuteUbergraph_TsTaskQuerySwimLocation(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TsTaskQuerySwimLocation_C">();
	}
	static class UTsTaskQuerySwimLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTsTaskQuerySwimLocation_C>();
	}
};
static_assert(alignof(UTsTaskQuerySwimLocation_C) == 0x000008, "Wrong alignment on UTsTaskQuerySwimLocation_C");
static_assert(sizeof(UTsTaskQuerySwimLocation_C) == 0x0000D0, "Wrong size on UTsTaskQuerySwimLocation_C");
static_assert(offsetof(UTsTaskQuerySwimLocation_C, UberGraphFrame_TsTaskQuerySwimLocation_C) == 0x0000B8, "Member 'UTsTaskQuerySwimLocation_C::UberGraphFrame_TsTaskQuerySwimLocation_C' has a wrong offset!");
static_assert(offsetof(UTsTaskQuerySwimLocation_C, Angle) == 0x0000C0, "Member 'UTsTaskQuerySwimLocation_C::Angle' has a wrong offset!");
static_assert(offsetof(UTsTaskQuerySwimLocation_C, InnerDiameter) == 0x0000C4, "Member 'UTsTaskQuerySwimLocation_C::InnerDiameter' has a wrong offset!");
static_assert(offsetof(UTsTaskQuerySwimLocation_C, OuterDiameter) == 0x0000C8, "Member 'UTsTaskQuerySwimLocation_C::OuterDiameter' has a wrong offset!");
static_assert(offsetof(UTsTaskQuerySwimLocation_C, DebugMode) == 0x0000CC, "Member 'UTsTaskQuerySwimLocation_C::DebugMode' has a wrong offset!");

}

