#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_KuroTraceCloud

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "KuroRenderingRuntimeBPPlugin_structs.hpp"
#include "SD_KuroTraceCloudData_structs.hpp"


namespace SDK::Params
{

// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.ExecuteUbergraph_BP_KuroTraceCloud
// 0x01D0 (0x01D0 - 0x0000)
struct BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ___bool_Variable;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCameraLocation_Success;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_GetCameraLocation_Location;               // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLevelEditorCameraLocationAndForward_Position; // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetLevelEditorCameraLocationAndForward_Rotation; // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetLevelEditorCameraLocationAndForward_ReturnValue; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBP_EWorldType                                CallFunc_GetWorldType_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As______;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBP_EWorldType                                CallFunc_GetWorldType_ReturnValue_1;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As_______1;                     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetComponentLocation_ReturnValue;    // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       CallFunc_D_K2_GetComponentToWorld_ReturnValue;     // 0x00B0(0x0040)(IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_TransformDoubleToTransform_ReturnValue; // 0x0100(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                CallFunc_Conv_TransformToMatrix_ReturnValue;       // 0x0140(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DistanceFromBox_dist;                     // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0xC];                                      // 0x0184(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector4                               CallFunc_Matrix_TransformVector_ReturnValue;       // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector4ToVector_ReturnValue;         // 0x01A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_Conv_VectorToVectorDouble_ReturnValue;    // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud) == 0x000010, "Wrong alignment on BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud");
static_assert(sizeof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud) == 0x0001D0, "Wrong size on BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, EntryPoint) == 0x000000, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, ___bool_Variable) == 0x000004, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::___bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_GetCameraLocation_Success) == 0x00000C, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_GetCameraLocation_Success' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_GetCameraLocation_Location) == 0x000010, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_GetCameraLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_GetLevelEditorCameraLocationAndForward_Position) == 0x000028, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_GetLevelEditorCameraLocationAndForward_Position' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_GetLevelEditorCameraLocationAndForward_Rotation) == 0x000034, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_GetLevelEditorCameraLocationAndForward_Rotation' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_GetLevelEditorCameraLocationAndForward_ReturnValue) == 0x000040, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_GetLevelEditorCameraLocationAndForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x000044, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_GetWorldType_ReturnValue) == 0x000050, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_GetWorldType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000051, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_GetMaterial_ReturnValue) == 0x000058, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, K2Node_Select_Default) == 0x000060, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, K2Node_DynamicCast_As______) == 0x000070, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_GetWorldType_ReturnValue_1) == 0x000079, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_GetWorldType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00007A, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_BooleanAND_ReturnValue) == 0x00007B, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_MapRangeClamped_ReturnValue) == 0x00007C, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_GetMaterial_ReturnValue_1) == 0x000080, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, K2Node_DynamicCast_As_______1) == 0x000088, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::K2Node_DynamicCast_As_______1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_D_K2_GetComponentLocation_ReturnValue) == 0x000098, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_D_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_D_K2_GetComponentToWorld_ReturnValue) == 0x0000B0, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_D_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000F0, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_Conv_TransformDoubleToTransform_ReturnValue) == 0x000100, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_Conv_TransformDoubleToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_InverseTransformLocation_ReturnValue) == 0x000130, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_Conv_TransformToMatrix_ReturnValue) == 0x000140, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_Conv_TransformToMatrix_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_DistanceFromBox_dist) == 0x000180, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_DistanceFromBox_dist' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_Matrix_TransformVector_ReturnValue) == 0x000190, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_Matrix_TransformVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_Conv_Vector4ToVector_ReturnValue) == 0x0001A0, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_Conv_Vector4ToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0001AC, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud, CallFunc_Conv_VectorToVectorDouble_ReturnValue) == 0x0001B8, "Member 'BP_KuroTraceCloud_C_ExecuteUbergraph_BP_KuroTraceCloud::CallFunc_Conv_VectorToVectorDouble_ReturnValue' has a wrong offset!");

// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_KuroTraceCloud_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroTraceCloud_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_KuroTraceCloud_C_ReceiveTick");
static_assert(sizeof(BP_KuroTraceCloud_C_ReceiveTick) == 0x000004, "Wrong size on BP_KuroTraceCloud_C_ReceiveTick");
static_assert(offsetof(BP_KuroTraceCloud_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_KuroTraceCloud_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.UserConstructionScript
// 0x00A0 (0x00A0 - 0x0000)
struct BP_KuroTraceCloud_C_UserConstructionScript final
{
public:
	EBP_EWorldType                                Editor_Type;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ___struct_Variable;                                // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Variable;                                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As______;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue_1;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As_______1;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceConstant*              K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroTraceCloud_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_KuroTraceCloud_C_UserConstructionScript");
static_assert(sizeof(BP_KuroTraceCloud_C_UserConstructionScript) == 0x0000A0, "Wrong size on BP_KuroTraceCloud_C_UserConstructionScript");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, Editor_Type) == 0x000000, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::Editor_Type' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, ___struct_Variable) == 0x000010, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::___struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, ___bool_Variable) == 0x000040, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::___bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000048, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue) == 0x000058, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, K2Node_DynamicCast_As______) == 0x000060, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, CallFunc_GetMaterial_ReturnValue_1) == 0x000070, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::CallFunc_GetMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000078, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, K2Node_DynamicCast_As_______1) == 0x000080, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::K2Node_DynamicCast_As_______1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, K2Node_Select_Default) == 0x000090, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000098, "Member 'BP_KuroTraceCloud_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.UpdateCloudTransform
// 0x01A0 (0x01A0 - 0x0000)
struct BP_KuroTraceCloud_C_UpdateCloudTransform final
{
public:
	const class UStaticMeshComponent*             CloudCube;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBP_EWorldType                                Editor_Type;                                       // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CastResult;                                        // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ___bool_Variable;                                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_DynamicCast_As______;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntVector                             CallFunc_GetWorldOriginLocation_ReturnValue;       // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntVectorToVector_ReturnValue;       // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransformDouble                       CallFunc_D_GetTransform_ReturnValue;               // 0x0050(0x0040)(IsPlainOldData, NoDestructor)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_TransformDoubleToTransform_ReturnValue; // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMatrix                                CallFunc_Conv_TransformToMatrix_ReturnValue;       // 0x00F0(0x0040)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Matrix_GetScaledAxes_X;                   // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Matrix_GetScaledAxes_Y;                   // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Matrix_GetScaledAxes_Z;                   // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroTraceCloud_C_UpdateCloudTransform) == 0x000010, "Wrong alignment on BP_KuroTraceCloud_C_UpdateCloudTransform");
static_assert(sizeof(BP_KuroTraceCloud_C_UpdateCloudTransform) == 0x0001A0, "Wrong size on BP_KuroTraceCloud_C_UpdateCloudTransform");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CloudCube) == 0x000000, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CloudCube' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, Editor_Type) == 0x000008, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::Editor_Type' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CastResult) == 0x000009, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CastResult' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, ___bool_Variable) == 0x00000A, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::___bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_GetMaterial_ReturnValue) == 0x000010, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, K2Node_DynamicCast_As______) == 0x000020, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::K2Node_DynamicCast_As______' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_GetWorldOriginLocation_ReturnValue) == 0x00002C, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_GetWorldOriginLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Conv_IntVectorToVector_ReturnValue) == 0x000038, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Conv_IntVectorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, K2Node_Select_Default) == 0x000048, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_D_GetTransform_ReturnValue) == 0x000050, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_D_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Conv_TransformDoubleToTransform_ReturnValue) == 0x0000B0, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Conv_TransformDoubleToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x0000E0, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Conv_TransformToMatrix_ReturnValue) == 0x0000F0, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Conv_TransformToMatrix_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000130, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Matrix_GetScaledAxes_X) == 0x00013C, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Matrix_GetScaledAxes_X' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Matrix_GetScaledAxes_Y) == 0x000148, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Matrix_GetScaledAxes_Y' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Matrix_GetScaledAxes_Z) == 0x000154, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Matrix_GetScaledAxes_Z' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000160, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000170, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000180, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudTransform, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x000190, "Member 'BP_KuroTraceCloud_C_UpdateCloudTransform::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");

// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.UpdateCloudLighting
// 0x0340 (0x0340 - 0x0000)
struct BP_KuroTraceCloud_C_UpdateCloudLighting final
{
public:
	class UMaterialInstanceDynamic*               Material;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_1;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_2;   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_D_K2_GetComponentToWorld_ReturnValue;     // 0x0080(0x0040)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0xF];                                       // 0x00C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_TransformDoubleToTransform_ReturnValue; // 0x00D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue;        // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue;    // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_SetFieldsInStruct_StructOut;                // 0x0144(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0154(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue_2;                // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_1;      // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue_1;  // 0x01A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x01B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVectorDouble                          CallFunc_D_K2_GetActorLocation_ReturnValue_2;      // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_VectorDoubleToVector_ReturnValue_2;  // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x01EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_D_K2_GetComponentToWorld_ReturnValue_1;   // 0x0200(0x0040)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_Conv_TransformDoubleToTransform_ReturnValue_1; // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransformDouble                       CallFunc_D_K2_GetComponentToWorld_ReturnValue_2;   // 0x0280(0x0040)(IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_4;   // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Conv_TransformDoubleToTransform_ReturnValue_2; // 0x02D0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_2;   // 0x0300(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_5;   // 0x030C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 CallFunc_GetLerpGIData_LerpData;                   // 0x0320(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroTraceCloud_C_UpdateCloudLighting) == 0x000010, "Wrong alignment on BP_KuroTraceCloud_C_UpdateCloudLighting");
static_assert(sizeof(BP_KuroTraceCloud_C_UpdateCloudLighting) == 0x000340, "Wrong size on BP_KuroTraceCloud_C_UpdateCloudLighting");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, Material) == 0x000000, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::Material' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000008, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_RandomFloat_ReturnValue) == 0x000014, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x00001C, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x00002C, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_LinearColorLerp_ReturnValue) == 0x000038, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_RandomFloat_ReturnValue_1) == 0x000048, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_RandomFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x00004C, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_LinearColorToVector_ReturnValue_2) == 0x000050, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_LinearColorToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x00005C, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_LinearColorLerp_ReturnValue_1) == 0x00006C, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_D_K2_GetComponentToWorld_ReturnValue) == 0x000080, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_D_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_TransformDoubleToTransform_ReturnValue) == 0x0000D0, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_TransformDoubleToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_InverseTransformLocation_ReturnValue) == 0x000100, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_D_K2_GetActorLocation_ReturnValue) == 0x000110, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_D_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000128, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_VectorDoubleToVector_ReturnValue) == 0x000138, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_VectorDoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, K2Node_SetFieldsInStruct_StructOut) == 0x000144, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000154, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_RandomFloat_ReturnValue_2) == 0x000164, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_RandomFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x000168, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_IsValid_ReturnValue_1) == 0x00016C, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x000170, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_LinearColorLerp_ReturnValue_2) == 0x000180, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_D_K2_GetActorLocation_ReturnValue_1) == 0x000190, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_D_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_VectorDoubleToVector_ReturnValue_1) == 0x0001A8, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_VectorDoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x0001B4, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_IsValid_ReturnValue_2) == 0x0001C4, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_D_K2_GetActorLocation_ReturnValue_2) == 0x0001C8, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_D_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_VectorDoubleToVector_ReturnValue_2) == 0x0001E0, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_VectorDoubleToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x0001EC, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_D_K2_GetComponentToWorld_ReturnValue_1) == 0x000200, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_D_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_TransformDoubleToTransform_ReturnValue_1) == 0x000240, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_TransformDoubleToTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x000270, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_D_K2_GetComponentToWorld_ReturnValue_2) == 0x000280, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_D_K2_GetComponentToWorld_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_VectorToLinearColor_ReturnValue_4) == 0x0002C0, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_VectorToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_TransformDoubleToTransform_ReturnValue_2) == 0x0002D0, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_TransformDoubleToTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_InverseTransformLocation_ReturnValue_2) == 0x000300, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_InverseTransformLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_Conv_VectorToLinearColor_ReturnValue_5) == 0x00030C, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_Conv_VectorToLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_GetScalarParameterValue_ReturnValue) == 0x00031C, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_UpdateCloudLighting, CallFunc_GetLerpGIData_LerpData) == 0x000320, "Member 'BP_KuroTraceCloud_C_UpdateCloudLighting::CallFunc_GetLerpGIData_LerpData' has a wrong offset!");

// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.GetLerpGIData
// 0x00F8 (0x00F8 - 0x0000)
struct BP_KuroTraceCloud_C_GetLerpGIData final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 LerpData_0;                                        // 0x0004(0x0014)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Array_Index_Variable;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSD_KuroTraceCloudData                 CallFunc_Array_Get_Item;                           // 0x0024(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ___int_Loop_Counter_Variable;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 CallFunc_Array_Get_Item_1;                         // 0x003C(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 CallFunc_Array_Get_Item_2;                         // 0x0058(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 CallFunc_Array_Get_Item_3;                         // 0x0070(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 CallFunc_Array_Get_Item_4;                         // 0x00A0(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSD_KuroTraceCloudData                 K2Node_MakeStruct_SD_KuroTraceCloudData;           // 0x00B4(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSD_KuroTraceCloudData                 K2Node_MakeStruct_SD_KuroTraceCloudData_1;         // 0x00E4(0x0014)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroTraceCloud_C_GetLerpGIData) == 0x000004, "Wrong alignment on BP_KuroTraceCloud_C_GetLerpGIData");
static_assert(sizeof(BP_KuroTraceCloud_C_GetLerpGIData) == 0x0000F8, "Wrong size on BP_KuroTraceCloud_C_GetLerpGIData");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, Time) == 0x000000, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::Time' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, LerpData_0) == 0x000004, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::LerpData_0' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, ___int_Array_Index_Variable) == 0x000018, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::___int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, ___int_Loop_Counter_Variable) == 0x000038, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::___int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Array_Get_Item_1) == 0x00003C, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Array_Get_Item_2) == 0x000058, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00006C, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Array_Get_Item_3) == 0x000070, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000084, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_MapRangeClamped_ReturnValue) == 0x000088, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_SelectInt_ReturnValue) == 0x00008C, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_LinearColorLerp_ReturnValue) == 0x000090, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Array_Get_Item_4) == 0x0000A0, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, K2Node_MakeStruct_SD_KuroTraceCloudData) == 0x0000B4, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::K2Node_MakeStruct_SD_KuroTraceCloudData' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000C8, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Array_Length_ReturnValue_1) == 0x0000CC, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_LinearColorLerp_ReturnValue_1) == 0x0000D0, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E0, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_GetLerpGIData, K2Node_MakeStruct_SD_KuroTraceCloudData_1) == 0x0000E4, "Member 'BP_KuroTraceCloud_C_GetLerpGIData::K2Node_MakeStruct_SD_KuroTraceCloudData_1' has a wrong offset!");

// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.Update Cloud Fade
// 0x0002 (0x0002 - 0x0000)
struct BP_KuroTraceCloud_C_Update_Cloud_Fade final
{
public:
	EBP_EWorldType                                Editor_Type;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCastResult;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroTraceCloud_C_Update_Cloud_Fade) == 0x000001, "Wrong alignment on BP_KuroTraceCloud_C_Update_Cloud_Fade");
static_assert(sizeof(BP_KuroTraceCloud_C_Update_Cloud_Fade) == 0x000002, "Wrong size on BP_KuroTraceCloud_C_Update_Cloud_Fade");
static_assert(offsetof(BP_KuroTraceCloud_C_Update_Cloud_Fade, Editor_Type) == 0x000000, "Member 'BP_KuroTraceCloud_C_Update_Cloud_Fade::Editor_Type' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_Update_Cloud_Fade, bCastResult) == 0x000001, "Member 'BP_KuroTraceCloud_C_Update_Cloud_Fade::bCastResult' has a wrong offset!");

// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.ShowCloud
// 0x0001 (0x0001 - 0x0000)
struct BP_KuroTraceCloud_C_ShowCloud final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_KuroTraceCloud_C_ShowCloud) == 0x000001, "Wrong alignment on BP_KuroTraceCloud_C_ShowCloud");
static_assert(sizeof(BP_KuroTraceCloud_C_ShowCloud) == 0x000001, "Wrong size on BP_KuroTraceCloud_C_ShowCloud");
static_assert(offsetof(BP_KuroTraceCloud_C_ShowCloud, bNewVisibility) == 0x000000, "Member 'BP_KuroTraceCloud_C_ShowCloud::bNewVisibility' has a wrong offset!");

// Function BP_KuroTraceCloud.BP_KuroTraceCloud_C.DistanceFromBox
// 0x005C (0x005C - 0x0000)
struct BP_KuroTraceCloud_C_DistanceFromBox final
{
public:
	struct FVector                                P;                                                 // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Box;                                               // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         dist;                                              // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_GetAbs_ReturnValue;                // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_GetAbs_ReturnValue_1;              // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_ComponentMax_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxElement_ReturnValue;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_KuroTraceCloud_C_DistanceFromBox) == 0x000004, "Wrong alignment on BP_KuroTraceCloud_C_DistanceFromBox");
static_assert(sizeof(BP_KuroTraceCloud_C_DistanceFromBox) == 0x00005C, "Wrong size on BP_KuroTraceCloud_C_DistanceFromBox");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, P) == 0x000000, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::P' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, Box) == 0x00000C, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::Box' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, dist) == 0x000018, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::dist' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, CallFunc_Vector_GetAbs_ReturnValue) == 0x00001C, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::CallFunc_Vector_GetAbs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, CallFunc_Vector_GetAbs_ReturnValue_1) == 0x000028, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::CallFunc_Vector_GetAbs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, CallFunc_Vector_ComponentMax_ReturnValue) == 0x000040, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::CallFunc_Vector_ComponentMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, CallFunc_GetMaxElement_ReturnValue) == 0x00004C, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::CallFunc_GetMaxElement_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, CallFunc_VSize_ReturnValue) == 0x000050, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, CallFunc_FMin_ReturnValue) == 0x000054, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_KuroTraceCloud_C_DistanceFromBox, CallFunc_Add_FloatFloat_ReturnValue) == 0x000058, "Member 'BP_KuroTraceCloud_C_DistanceFromBox::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

}

