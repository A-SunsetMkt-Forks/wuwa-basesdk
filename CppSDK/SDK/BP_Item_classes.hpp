#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Item

#include "Basic.hpp"

#include "EEntityType_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Item.BP_Item_C
// 0x0018 (0x00D8 - 0x00C0)
class UBP_Item_C final : public UActorComponent
{
public:
	int32                                         注视优先级;                                        // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEntityType                                   实体类型;                                          // 0x00C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           可被注视的骨骼;                                    // 0x00C8(0x0010)(Edit, BlueprintVisible)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Item_C">();
	}
	static class UBP_Item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Item_C>();
	}
};
static_assert(alignof(UBP_Item_C) == 0x000008, "Wrong alignment on UBP_Item_C");
static_assert(sizeof(UBP_Item_C) == 0x0000D8, "Wrong size on UBP_Item_C");
static_assert(offsetof(UBP_Item_C, 注视优先级) == 0x0000C0, "Member 'UBP_Item_C::注视优先级' has a wrong offset!");
static_assert(offsetof(UBP_Item_C, 实体类型) == 0x0000C4, "Member 'UBP_Item_C::实体类型' has a wrong offset!");
static_assert(offsetof(UBP_Item_C, 可被注视的骨骼) == 0x0000C8, "Member 'UBP_Item_C::可被注视的骨骼' has a wrong offset!");

}

