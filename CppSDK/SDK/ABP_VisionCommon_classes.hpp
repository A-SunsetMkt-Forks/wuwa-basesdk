#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_VisionCommon

#include "Basic.hpp"

#include "EWalkingPosture_structs.hpp"
#include "EMovementDirection_structs.hpp"
#include "KuroAnim_structs.hpp"
#include "KuroAnim_classes.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ECharState_structs.hpp"
#include "ECharParentMoveState_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_VisionCommon.ABP_VisionCommon_C
// 0x1ED0 (0x25D0 - 0x0700)
class UABP_VisionCommon_C : public UKuroAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0700(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0708(0x0038)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0740(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0760(0x0020)()
	struct FAnimNode_Feedback                     AnimGraphNode_Feedback;                            // 0x0780(0x0268)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x09E8(0x0138)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0B20(0x0038)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0B58(0x0060)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x0BB8(0x00C0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x0C78(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0CA8(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_4;                      // 0x0CE0(0x0148)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x0E28(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x0E58(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_3;                      // 0x0E90(0x0148)()
	uint8                                         Pad_FD8[0x8];                                      // 0x0FD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x0FE0(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x1190(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x11B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x11E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x1208(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x1230(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x1258(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1280(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x12B0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x12E8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x1378(0x0038)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x13B0(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x13E0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x1418(0x0148)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x1560(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x1710(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x1738(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x1760(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x1788(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x17B0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x17D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x1800(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x1828(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x1850(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x1878(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x18A0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x18C8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1958(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x1990(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x1A20(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x1A58(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x1AE8(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x1B20(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x1BB0(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x1BE8(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1C78(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1CB0(0x0148)()
	uint8                                         Pad_1DF8[0x8];                                     // 0x1DF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x1E00(0x01B0)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1FB0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1FD8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2000(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2028(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x2050(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x2088(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x2118(0x0038)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x2150(0x0090)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x21E0(0x0038)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x2218(0x0148)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x2360(0x01B0)()
	class ATsBaseCharacter_C*                     As_Base_Character;                                 // 0x2510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          接收到新受击;                                      // 0x2518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2519[0x3];                                     // 0x2519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Delta_Time_X;                                      // 0x251C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          可以FK;                                            // 0x2520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2521[0x7];                                     // 0x2521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkeletonGroup                         Skeleton_Block_Info;                               // 0x2528(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFK_Shake_AssestData_C*                 FKShakeData;                                       // 0x2548(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMulticastInlineDelegate<void()>              NewEventDispatcher_0;                              // 0x2550(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Delta;                                             // 0x2560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ShakeAlpha;                                        // 0x2564(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ShakeRange;                                        // 0x2568(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_256C[0x4];                                     // 0x256C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPD_CharacterControllerData_C*>  HitMaterial;                                       // 0x2570(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FName>                           BeHitBones;                                        // 0x2580(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                BeHitLocation;                                     // 0x2590(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               BeHitRotation;                                     // 0x259C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BeHitTime;                                         // 0x25A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ToughDecreaseValue;                                // 0x25AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            移动方向;                                          // 0x25B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25B1[0x3];                                     // 0x25B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         幻象怪游荡;                                        // 0x25B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharState                                    CharMove;                                          // 0x25B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharParentMoveState                          CharPosition;                                      // 0x25B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWalkingPosture                               行走姿态;                                          // 0x25BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          状态标识_待机3;                                    // 0x25BB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25BC[0x4];                                     // 0x25BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ABPLogicParams_C*                   Ts逻辑变量集;                                      // 0x25C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_VisionCommon(int32 EntryPoint);
	void AnimNotify_可以反击();
	void AnimNotify_不能反击();
	void AnimNotify_受击结束();
	void AnimNotify_可以放技能();
	void OnComponentStart();
	void AnimNotify_进入受击();
	void PlayShakeFX(int32 Section);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_3E3A6B3343741F764B5A4CB9359C9681();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_5F4247094A79D9F8B3ADA18884514005();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_968992674153C6C6873DAC969B2CD72B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_765F6D9C4A48F3B534BEA1A26FEF5251();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_FD4B710B49AE918855FBDAA6DB446ADA();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_A9C1C8A74E930F3D7B4BDC9B1380CF3A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_A62E321544F9C1255BB0CD9473C9B8B0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_389E80BF4F42F63944C347B2B19B4763();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_8D42FB4648FB96001BC976AD2D1C5BD2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_D12DDE404ED59447D9E16AAE61D5FF57();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_86A606294ABC09217DBA8CAD183C94C1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_D2E001C445FC3301D13F5DA8B32E3540();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_5351818C4D3DFF112C55E69968810DB2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_98445E3D4CDE8CDB637A6585BBF1A9BE();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_F263CB9243A94CC4BE5C3A8C2EB85B38();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_F081664C4C3F23A9F777878955FB8D5A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_Feedback_F7F9D443402E1DFF8A267EBE1B7A9842();
	void 受击状态更新();
	void 初始化绑定_Tag();
	void 移动状态更新();
	void 状态参数更新();
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void HitFk(const struct FPoseLink& InPose, struct FPoseLink* HitFk_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_VisionCommon_C">();
	}
	static class UABP_VisionCommon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_VisionCommon_C>();
	}
};
static_assert(alignof(UABP_VisionCommon_C) == 0x000010, "Wrong alignment on UABP_VisionCommon_C");
static_assert(sizeof(UABP_VisionCommon_C) == 0x0025D0, "Wrong size on UABP_VisionCommon_C");
static_assert(offsetof(UABP_VisionCommon_C, UberGraphFrame) == 0x000700, "Member 'UABP_VisionCommon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_Root_1) == 0x000708, "Member 'UABP_VisionCommon_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_LocalToComponentSpace) == 0x000740, "Member 'UABP_VisionCommon_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_ComponentToLocalSpace) == 0x000760, "Member 'UABP_VisionCommon_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_Feedback) == 0x000780, "Member 'UABP_VisionCommon_C::AnimGraphNode_Feedback' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_LinkedInputPose) == 0x0009E8, "Member 'UABP_VisionCommon_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_Root) == 0x000B20, "Member 'UABP_VisionCommon_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_Slot) == 0x000B58, "Member 'UABP_VisionCommon_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_LinkedAnimLayer) == 0x000BB8, "Member 'UABP_VisionCommon_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_UseCachedPose_3) == 0x000C78, "Member 'UABP_VisionCommon_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_12) == 0x000CA8, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateMachine_4) == 0x000CE0, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateMachine_4' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_UseCachedPose_2) == 0x000E28, "Member 'UABP_VisionCommon_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_11) == 0x000E58, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateMachine_3) == 0x000E90, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateMachine_3' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SaveCachedPose_3) == 0x000FE0, "Member 'UABP_VisionCommon_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_20) == 0x001190, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_19) == 0x0011B8, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_18) == 0x0011E0, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_17) == 0x001208, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_16) == 0x001230, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_15) == 0x001258, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_UseCachedPose_1) == 0x001280, "Member 'UABP_VisionCommon_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_10) == 0x0012B0, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SequencePlayer_7) == 0x0012E8, "Member 'UABP_VisionCommon_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_9) == 0x001378, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_UseCachedPose) == 0x0013B0, "Member 'UABP_VisionCommon_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_8) == 0x0013E0, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateMachine_2) == 0x001418, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SaveCachedPose_2) == 0x001560, "Member 'UABP_VisionCommon_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_14) == 0x001710, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_13) == 0x001738, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_12) == 0x001760, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_11) == 0x001788, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_10) == 0x0017B0, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_9) == 0x0017D8, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_8) == 0x001800, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_7) == 0x001828, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_6) == 0x001850, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_5) == 0x001878, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_4) == 0x0018A0, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SequencePlayer_6) == 0x0018C8, "Member 'UABP_VisionCommon_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_7) == 0x001958, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SequencePlayer_5) == 0x001990, "Member 'UABP_VisionCommon_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_6) == 0x001A20, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SequencePlayer_4) == 0x001A58, "Member 'UABP_VisionCommon_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_5) == 0x001AE8, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SequencePlayer_3) == 0x001B20, "Member 'UABP_VisionCommon_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_4) == 0x001BB0, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SequencePlayer_2) == 0x001BE8, "Member 'UABP_VisionCommon_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_3) == 0x001C78, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateMachine_1) == 0x001CB0, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SaveCachedPose_1) == 0x001E00, "Member 'UABP_VisionCommon_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_3) == 0x001FB0, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_2) == 0x001FD8, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult_1) == 0x002000, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_TransitionResult) == 0x002028, "Member 'UABP_VisionCommon_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_2) == 0x002050, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SequencePlayer_1) == 0x002088, "Member 'UABP_VisionCommon_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult_1) == 0x002118, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SequencePlayer) == 0x002150, "Member 'UABP_VisionCommon_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateResult) == 0x0021E0, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_StateMachine) == 0x002218, "Member 'UABP_VisionCommon_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, AnimGraphNode_SaveCachedPose) == 0x002360, "Member 'UABP_VisionCommon_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, As_Base_Character) == 0x002510, "Member 'UABP_VisionCommon_C::As_Base_Character' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, 接收到新受击) == 0x002518, "Member 'UABP_VisionCommon_C::接收到新受击' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, Delta_Time_X) == 0x00251C, "Member 'UABP_VisionCommon_C::Delta_Time_X' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, 可以FK) == 0x002520, "Member 'UABP_VisionCommon_C::可以FK' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, Skeleton_Block_Info) == 0x002528, "Member 'UABP_VisionCommon_C::Skeleton_Block_Info' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, FKShakeData) == 0x002548, "Member 'UABP_VisionCommon_C::FKShakeData' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, NewEventDispatcher_0) == 0x002550, "Member 'UABP_VisionCommon_C::NewEventDispatcher_0' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, Delta) == 0x002560, "Member 'UABP_VisionCommon_C::Delta' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, ShakeAlpha) == 0x002564, "Member 'UABP_VisionCommon_C::ShakeAlpha' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, ShakeRange) == 0x002568, "Member 'UABP_VisionCommon_C::ShakeRange' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, HitMaterial) == 0x002570, "Member 'UABP_VisionCommon_C::HitMaterial' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, BeHitBones) == 0x002580, "Member 'UABP_VisionCommon_C::BeHitBones' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, BeHitLocation) == 0x002590, "Member 'UABP_VisionCommon_C::BeHitLocation' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, BeHitRotation) == 0x00259C, "Member 'UABP_VisionCommon_C::BeHitRotation' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, BeHitTime) == 0x0025A8, "Member 'UABP_VisionCommon_C::BeHitTime' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, ToughDecreaseValue) == 0x0025AC, "Member 'UABP_VisionCommon_C::ToughDecreaseValue' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, 移动方向) == 0x0025B0, "Member 'UABP_VisionCommon_C::移动方向' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, 幻象怪游荡) == 0x0025B4, "Member 'UABP_VisionCommon_C::幻象怪游荡' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, CharMove) == 0x0025B8, "Member 'UABP_VisionCommon_C::CharMove' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, CharPosition) == 0x0025B9, "Member 'UABP_VisionCommon_C::CharPosition' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, 行走姿态) == 0x0025BA, "Member 'UABP_VisionCommon_C::行走姿态' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, 状态标识_待机3) == 0x0025BB, "Member 'UABP_VisionCommon_C::状态标识_待机3' has a wrong offset!");
static_assert(offsetof(UABP_VisionCommon_C, Ts逻辑变量集) == 0x0025C0, "Member 'UABP_VisionCommon_C::Ts逻辑变量集' has a wrong offset!");

}

