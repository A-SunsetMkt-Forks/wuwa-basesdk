#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Zhezhi

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TsBaseCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Zhezhi.BP_Zhezhi_C
// 0x0080 (0x0830 - 0x07B0)
class ABP_Zhezhi_C final : public ATsBaseCharacter_C
{
public:
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Zhezhi_C;                        // 0x07A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UKuroAdjustableCapsuleComponent*        Bip001Spine2;                                      // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKuroAdjustableCapsuleComponent*        Bip001LThighTwist;                                 // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UKuroAdjustableCapsuleComponent*        Bip001RThighTwist;                                 // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WeaponCase0;                                       // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OtherCase2;                                        // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OtherCase1;                                        // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ActiveHe;                                          // 0x07E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 HeEntityID;                                        // 0x07F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         HeLength;                                          // 0x0800(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0x4];                                      // 0x0804(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 连线特效;                                          // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Fx_Hook_Beam_C*                     As_BP_Fx_Hook_Beam;                                // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEffectModelGroup_C*                    标记DA;                                            // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          飞鹤在屏幕中;                                      // 0x0820(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_Zhezhi(int32 EntryPoint);
	void FightCommand(bool isInAir);
	void 计算最近的飞鹤实体id(int32* EntityID);
	void 飞鹤选择计算();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Zhezhi_C">();
	}
	static class ABP_Zhezhi_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Zhezhi_C>();
	}
};
static_assert(alignof(ABP_Zhezhi_C) == 0x000010, "Wrong alignment on ABP_Zhezhi_C");
static_assert(sizeof(ABP_Zhezhi_C) == 0x000830, "Wrong size on ABP_Zhezhi_C");
static_assert(offsetof(ABP_Zhezhi_C, UberGraphFrame_BP_Zhezhi_C) == 0x0007A8, "Member 'ABP_Zhezhi_C::UberGraphFrame_BP_Zhezhi_C' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, Bip001Spine2) == 0x0007B0, "Member 'ABP_Zhezhi_C::Bip001Spine2' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, Bip001LThighTwist) == 0x0007B8, "Member 'ABP_Zhezhi_C::Bip001LThighTwist' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, Bip001RThighTwist) == 0x0007C0, "Member 'ABP_Zhezhi_C::Bip001RThighTwist' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, WeaponCase0) == 0x0007C8, "Member 'ABP_Zhezhi_C::WeaponCase0' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, OtherCase2) == 0x0007D0, "Member 'ABP_Zhezhi_C::OtherCase2' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, OtherCase1) == 0x0007D8, "Member 'ABP_Zhezhi_C::OtherCase1' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, ActiveHe) == 0x0007E0, "Member 'ABP_Zhezhi_C::ActiveHe' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, HeEntityID) == 0x0007F0, "Member 'ABP_Zhezhi_C::HeEntityID' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, HeLength) == 0x000800, "Member 'ABP_Zhezhi_C::HeLength' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, 连线特效) == 0x000808, "Member 'ABP_Zhezhi_C::连线特效' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, As_BP_Fx_Hook_Beam) == 0x000810, "Member 'ABP_Zhezhi_C::As_BP_Fx_Hook_Beam' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, 标记DA) == 0x000818, "Member 'ABP_Zhezhi_C::标记DA' has a wrong offset!");
static_assert(offsetof(ABP_Zhezhi_C, 飞鹤在屏幕中) == 0x000820, "Member 'ABP_Zhezhi_C::飞鹤在屏幕中' has a wrong offset!");

}

